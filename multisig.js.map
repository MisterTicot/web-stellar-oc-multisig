{"version":3,"sources":["webpack://multisig/webpack/universalModuleDefinition","webpack://multisig/webpack/bootstrap","webpack://multisig/./node_modules/@cosmic-plus/base/stellar-sdk.js","webpack://multisig/./node_modules/@babel/runtime/regenerator/index.js","webpack://multisig/./src/resolve.js","webpack://multisig/./node_modules/@cosmic-plus/jsutils/env.js","webpack://multisig/./node_modules/@cosmic-plus/base/buffer.js","webpack://multisig/./src/messenger.js","webpack://multisig/./src/index.js","webpack://multisig/./src/multisig.js","webpack://multisig/./node_modules/regenerator-runtime/runtime-module.js","webpack://multisig/./node_modules/regenerator-runtime/runtime.js","webpack://multisig/./node_modules/@cosmic-plus/base/axios.js","webpack://multisig/./node_modules/process/browser.js","webpack://multisig/(webpack)/buildin/global.js","webpack://multisig/./node_modules/@cosmic-plus/jsutils/misc.js","webpack://multisig/./src/share-signatures.js","webpack://multisig/./node_modules/@cosmic-plus/loopcall/loopcall.js","webpack://multisig/./src/share-transactions.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","env","isBrowser","undefined","StellarSdk","console","error","nodeRequire","resolve","helpers","require","networkPassphrase","network","Networks","PUBLIC","TESTNET","currentNetwork","Network","current","server","conf","arguments","length","passphrase","Error","getServer","newPassphrase","log","use","serverSaves","networkDefaultServer","url","Server","accountCacheExpiration","accountCache","_callee8","address","promise","_regeneratorRuntime","wrap","_context8","prev","next","timeout","stop","this","_callee9","account","publicKey","alias","_context9","FederationServer","sent","account_id","memo_type","memo","aliases","abrupt","getTxSignersList","_callee10","transaction","sources","_context10","txSources","signersList","apply","concat","_toConsumableArray","addressResolver","cacheAccount","_ref","_asyncToGenerator","mark","_callee","accountResponse","_args","_context","loadAccount","_x5","_x6","accountIsEmpty","_ref2","_callee2","id","_context2","then","catch","_x7","_x8","_ref3","_callee3","txHash","caller","_context3","transactions","_x9","_x10","accountSigners","_ref4","_callee4","_context4","signers","_x11","_x12","signersTable","_ref5","_callee5","obj","_len","addresses","_key","index","_args5","_context5","Array","t0","keys","t1","done","_x13","_ref6","_callee6","array","_len2","_key2","_args6","_context6","forEach","entry","find","a","push","_x14","extra","useExtra","source","_loop","operations","txSignersList","_ref7","_callee7","_context7","_x15","_x16","extraField","process","global","document","isNode","versions","node","isEmbedded","self","top","stealth_require","eval","hash","Memo","__proto__","constructor","Buffer","messenger","loopcall","addMemo","txBuilder","slicedMemo","from","slice","toString","addDestinations","destinations","accountId","addDestination","isArray","linkToAccount","addOperation","operation","destination","startingBalance","asset","Asset","native","amount","addContent","content","operationsLeft","chunk","storeChunk","type","params","Operation","extractObject","_type","_value","extractContent","chunks","isContentChunk","makeMessageFilter","baseFilter","record","operation_count","send","keypair","senderAccount","tx","encode","sign","submitTransaction","_x","_x2","_x3","_x4","TransactionBuilder","setTimeout","InfiniteTimeout","build","read","callBuilder","txRecord","decode","_x17","Transaction","envelope_xdr","sender","source_account","date","created_at","list","options","records","listRaw","map","_x18","_x19","_x20","forAccount","cursor","order","filter","_x21","_x22","func","limit","_x23","_x24","_x25","baseConf","passConfig","layer","assign","prepare","networkBackup","multisig","axios","shareSignatures","shareTransactions","makeSetupTx","multisigId","Keypair","random","isEmpty","setData","manageData","makeDisableTx","data_attr","parseMultisigConfig","readAttr","str64","getAccount","user","_baseAccount","Account","_accountId","TypeError","checkAccountExist","_callee11","_context11","sendOrReturn","_callee12","responsePromise","_context12","response","saveNetwork","restoreNetwork","isEnabled","config","enable","setup","disable","pushSignatures","senderId","pushTx","horizonResponse","makePushTx","finally","pullSignatures","bool","pull","pushTransaction","_ref8","signer","signatures","listTransactions","_ref9","ledger","useNetwork","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","e","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","result","reverse","pop","Context","reset","skipTempReset","_sent","delegate","method","tryEntries","resetTryEntry","charAt","isNaN","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","err","previousPromise","callInvokeWithMethodAndArg","Promise","reject","invoke","unwrapped","return","info","pushTryEntry","locs","iteratorMethod","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","run","marker","runClearTimeout","Item","noop","nextTick","args","title","browser","argv","version","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","misc","delay","thunk","memoized","firstCall","x","capitalize","string","substr","toUpperCase","shorter","setHiddenProperty","configurable","deprecated","before","after","isUtf8","match","isBase64","copy","onlyInFirstArray","array1","array2","y","getSignatures","txHash64","isTxSourceLegit","containsSignature","mergeSignatures","newSignatures","txSigs","signature","fromPublicKey","verify","decoratedSignature","Constructor","xdr","DecoratedSignature","hint","signatureHint","makeDecorated","alreadyOnchain","message","callerLimit","Math","min","callAnswer","breaker","nextRecord","recordTriggerBreak","recordPassTest","loopWithBreakpoints","splitAt","tailRecords","loop","isLegitSharedTransaction","legitSources","decodeTransactionRequest","ledger_attr","transactionHasBeenPushed","tester","recordHasMemo","listSignersKeys","lastLedger","txRecords","toEnvelope","toXDR"],"mappings":"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","file":"multisig.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"multisig\"] = factory();\n\telse\n\t\troot[\"multisig\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","\"use_strict\"\n\nconst env = require(\"@cosmic-plus/jsutils/env\")\n\nif (env.isBrowser) {\n  if (window.StellarSdk === undefined)\n    console.error(\"Missing dependency: StellarSdk\")\n  else module.exports = window.StellarSdk\n} else {\n  module.exports = env.nodeRequire(\"stellar-sdk\")\n}\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Contains functions that probe the blockchain or federation servers to collect\n * datas.\n *\n * Note: this is copied from js-cosmic-lib and I didnt cleaned it up yet\n *\n * @private\n * @exports resolve\n */\nconst resolve = exports\n\nconst helpers = require(\"@cosmic-plus/jsutils/misc\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\n/**\n *\n */\nresolve.server = function (conf, network = conf.network, server = conf.server) {\n  const passphrase = networkPassphrase(network)\n  if (!passphrase) throw new Error(\"No network selected.\")\n  return getServer(passphrase, server)\n}\n\n/**\n * Select the network to be used by `StellarSdk` as being `c` current\n * network.\n */\nresolve.network = function (conf, network = conf.network, server = conf.server) {\n  let passphrase = networkPassphrase()\n  const newPassphrase = networkPassphrase(network)\n\n  if (passphrase !== newPassphrase) {\n    // eslint-disable-next-line no-console\n    console.log(\"Switch to network: \" + network)\n    StellarSdk.Network.use(new StellarSdk.Network(newPassphrase))\n    passphrase = newPassphrase\n  } else if (!passphrase) {\n    throw new Error(\"No network selected.\")\n  }\n\n  return getServer(passphrase, server)\n}\n\n/**\n * Returns passphrase for `network` or for current network.\n */\nfunction networkPassphrase (network) {\n  if (network) {\n    if (network === \"public\") return StellarSdk.Networks.PUBLIC\n    else if (network === \"test\") return StellarSdk.Networks.TESTNET\n    else return network\n  } else {\n    const currentNetwork = StellarSdk.Network.current()\n    if (currentNetwork) return currentNetwork.networkPassphrase()\n  }\n}\n\n/**\n * If `url` is given, set it as the default horizon instance for `passphrase`\n * network and returns the corresponding Server object.\n * Else, retrieve the default Server object for `passphrase` network.\n */\nconst serverSaves = {}\nconst networkDefaultServer = {}\nfunction getServer (passphrase, url) {\n  if (url) networkDefaultServer[passphrase] = url\n  else url = networkDefaultServer[passphrase]\n  if (!url) throw new Error(\"No default server for requested network.\")\n\n  if (!serverSaves[url]) serverSaves[url] = new StellarSdk.Server(url)\n  return serverSaves[url]\n}\n\n/// Save defaults horizon nodes.\ngetServer(StellarSdk.Networks.PUBLIC, \"https://horizon.stellar.org\")\ngetServer(StellarSdk.Networks.TESTNET, \"https://horizon-testnet.stellar.org\")\n\n/**\n * Configure for how much time the resolved addresses are kept in cache,\n * in seconds. The default is set to 5 minutes to avoid resolving to an outdated\n * address.\n *\n * @const\n */\nresolve.accountCacheExpiration = 5 * 60\n\n/**\n * Contains promise of previously fetched accounts.\n *\n * @private\n * @type {Object}\n */\nconst accountCache = {}\n\n/**\n * Cache `promise` resolving to `address`'s account for `accountCacheExpiration`\n * seconds.\n *\n * @private\n * @param {string} address\n * @param {Promise} promise\n */\nasync function cacheAccount (address, promise) {\n  accountCache[address] = promise\n  await helpers.timeout(resolve.accountCacheExpiration * 1000)\n  delete accountCache[address]\n}\n\n/**\n * Return a promise that resolve to `address` account object, as defined in\n * JavaScript Stellar SDK API reference. `address` can be either a Stellar public\n * key or a federated address (account*example.org).\n * Returned results are cached and re-usable.\n *\n * @param {string} address\n * @return {Promise} Resolve to `address` account object\n */\nresolve.address = function (c, address) {\n  if (accountCache[address]) return accountCache[address]\n  const promise = addressResolver(c, address)\n  cacheAccount(address, promise)\n  return promise\n}\n\n/**\n * Helper for the previous resolve.address function.\n * Resolve to an account object for `address`.\n *\n * @private\n * @param {string} address\n */\nasync function addressResolver (c, address) {\n  // if (address.length !== 56 && !address.match(/.*\\*.*\\..*/)) {\n  // throw new Error('Invalid address: ' + helpers.shorter(address))\n  // }\n\n  const account = await StellarSdk.FederationServer.resolve(address)\n  const publicKey = account.account_id\n  if (!publicKey) throw new Error(\"Invalid response from federation server.\")\n  if (!account.memo_type && account.memo !== undefined) delete account.memo\n  if (address !== publicKey) account.address = address\n  const alias = c.aliases && c.aliases[publicKey]\n  if (alias) account.alias = alias\n  return account\n}\n\n/**\n * Return the AccountResponse object for `address` on `network`.\n *\n * @param {CL}\n * @param {string} address A public key or a federated address\n * @param {string} network Either 'test' or 'public'\n * @return {Object} The account response\n */\nresolve.account = async function (c, address, network = c.network) {\n  const server = resolve.server(c, network)\n  const account = await resolve.address(c, address)\n  const publicKey = account.account_id\n  // try {\n  const accountResponse = await server.loadAccount(publicKey)\n  return accountResponse\n  // } catch (error) {\n  // console.error(error)\n  // const short = helpers.shorter(address)\n  // throw new Error(`Empty account: ${short}`)\n  // }\n}\n\nresolve.accountIsEmpty = async function (conf, id) {\n  // const server = resolve.network(conf)\n  // const account = await resolve.address(conf, id)\n  // const caller = server.accounts()\n  // const data = await caller.accountId(account.account_id).call()\n  // console.log(data)\n  return resolve\n    .account(conf, id)\n    .then(() => false)\n    .catch(() => true)\n}\n\nresolve.transaction = async function (conf, txHash) {\n  const caller = conf.server.transactions()\n  return caller.transaction(txHash).call()\n}\n\n/**\n * Return the signers for the account at `address` on `network`.\n *\n * @param {CL}\n * @param {string} address Either a public key or a federated address\n * @param {string} network Either 'test' or 'public'\n * @return {Object} The signers object from the account response\n */\nresolve.accountSigners = async function (c, address) {\n  const account = await resolve.account(c, address)\n  return account.signers\n}\n\nresolve.signersTable = async function (conf, ...addresses) {\n  const obj = {}\n\n  for (let index in addresses) {\n    const account = await resolve.account(conf, addresses[index])\n    if (!obj[account.id]) obj[account.id] = account.signers\n  }\n\n  return obj\n}\n\nresolve.signersList = async function (conf, ...addresses) {\n  const array = []\n\n  for (let index in addresses) {\n    const account = await resolve.account(conf, addresses[index])\n    account.signers.forEach(entry => {\n      if (!array.find(a => a.key === entry.key)) array.push(entry.key)\n    })\n  }\n\n  return array\n}\n\nresolve.txSources = function (conf, transaction) {\n  const extra = useExtra(transaction)\n  if (extra.sources) return extra.sources\n\n  const array = [transaction.source]\n\n  for (let index in transaction.operations) {\n    const source = transaction.operations[index].source\n    if (source && !array.find(a => a === source)) array.push(source)\n  }\n\n  extra.sources = array\n  return array\n}\n\nresolve.txSignersList = async function (conf, transaction) {\n  const extra = useExtra(transaction)\n  if (!extra.signers) extra.signers = getTxSignersList(conf, transaction)\n  return extra.signers\n}\n\nasync function getTxSignersList (conf, transaction) {\n  const sources = resolve.txSources(conf, transaction)\n  return resolve.signersList(conf, ...sources)\n}\n\nconst extraField = \"extra_ocmultisig\"\nfunction useExtra (obj) {\n  if (!obj[extraField]) obj[extraField] = {}\n  return obj[extraField]\n}\n","\"use_strict\"\n/**\n * Methods to detect in which environment we're running.\n *\n * @exports env\n */\nconst env = exports\n\n/**\n * `true` if we are in a browser environment, `false` otherwise.\n */\nenv.isBrowser =\n  typeof window !== \"undefined\" && typeof window.document !== \"undefined\"\n\n/**\n * `true` if we are in a node.js environment, `false` otherwise.\n */\nenv.isNode =\n  typeof process !== \"undefined\" && process.versions && process.versions.node\n\n/**\n * `true` if current page is embedded.\n */\nenv.isEmbedded = env.isBrowser && window.self !== window.top\n\n/**\n * The window object, or `undefined`.\n */\nenv.window = env.isBrowser && window\n\n/**\n * The global objet, or `undefined`.\n */\nenv.global = env.isNode && global\n\n/**\n * A require that only have effect in Node.js and that is invisible for package\n * bundlers.\n */\nenv.nodeRequire = () => {}\nif (env.isNode) {\n  const stealth_require = eval(\"require\")\n  env.nodeRequire = module => stealth_require(module)\n}\n","\"use_strict\"\n\nconst env = require(\"@cosmic-plus/jsutils/env\")\n\nif (env.isBrowser) {\n  const StellarSdk = require(\"./stellar-sdk\")\n  const hash =\n    \"0000000000000000000000000000000000000000000000000000000000000000\"\n  const memo = new StellarSdk.Memo(\"hash\", hash)\n  module.exports = memo.value.__proto__.constructor\n} else {\n  module.exports = env.nodeRequire(\"safe-buffer\").Buffer\n}\n","/**\n * Publish/read arbitrary data on the blockchain\n *\n * @private\n * @exports messenger\n */\nconst messenger = exports\n\nconst Buffer = require(\"@cosmic-plus/base/buffer\")\nconst loopcall = require(\"@cosmic-plus/loopcall\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst resolve = require(\"./resolve\")\n\n/**\n * Sends a message to `destinations` with using `keypair`. The maximum size for\n * `content` is 6400 bytes minus the number of `destinations`. The cost of\n * emission is 1.01 stroop per destination + 1 stroop per 64 bytes to send. When a\n * destination account doesn't exist, it is created on-the-fly which incur an\n * additional cost of 1 lumen each\n *\n * @param {Keypair} keypair The keypair of the sender.\n * @param {string|Array} destinations An address or an array of addresses (either\n *   account IDs or federated addresses).\n * @param {string|Memo} object  (max. 28 bytes for string).\n * @param {string|Buffer} content The message content.\n * @returns {HorizonResponse}\n */\nmessenger.send = async function (conf, keypair, destinations, object, content) {\n  const senderAccount = await resolve.account(conf, keypair.publicKey())\n  const tx = await messenger.encode(\n    conf,\n    senderAccount,\n    destinations,\n    object,\n    content\n  )\n  tx.sign(keypair)\n  const server = resolve.network(conf)\n  return server.submitTransaction(tx)\n}\n\n/**\n * Build a transaction to be signed by `senderAccount` that sends message to\n * `destinations`. The maximum size for `content` is 6400 bytes minus the number\n * of `destinations`. The cost of emission is 1.01 stroop per destination + 1\n * stroop per 64 bytes to send. When a destination account doesn't exist, it is\n * created on-the-fly which incur an additional cost of 1 lumen each.\n *\n * @param {AccountResponse} senderAccount The AccountResponse for sender\n * @param {string|Array} destination The account IDs where to send the message,\n *     or an array of account IDs.\n * @param {string|Memo} object The message object (max. 28 bytes for string).\n * @param {string|Buffer} content The message content.\n * @return {Transaction} A StellarSdk Transaction object.\n */\nmessenger.encode = async function (\n  conf,\n  senderAccount,\n  destinations,\n  object,\n  content\n) {\n  const txBuilder = new StellarSdk.TransactionBuilder(senderAccount)\n  addMemo(txBuilder, object)\n  await addDestinations(conf, txBuilder, destinations)\n  addContent(txBuilder, content)\n  return txBuilder.setTimeout(StellarSdk.InfiniteTimeout).build()\n}\n\nfunction addMemo (txBuilder, memo) {\n  if (typeof memo === \"string\") {\n    const slicedMemo = Buffer.from(memo)\n      .slice(0, 28)\n      .toString()\n    memo = new StellarSdk.Memo(\"text\", slicedMemo)\n  }\n  if (memo) txBuilder.addMemo(memo)\n}\n\nasync function addDestinations (conf, txBuilder, destinations) {\n  if (!Array.isArray(destinations)) destinations = [destinations]\n\n  for (let index in destinations) {\n    const accountId = destinations[index]\n    const addDestination = await linkToAccount(conf, accountId)\n    txBuilder.addOperation(addDestination)\n  }\n}\n\nasync function linkToAccount (conf, accountId) {\n  if (await resolve.accountIsEmpty(conf, accountId)) {\n    return operation(\"createAccount\", {\n      destination: accountId,\n      startingBalance: \"1\"\n    })\n  } else {\n    return operation(\"payment\", {\n      destination: accountId,\n      asset: StellarSdk.Asset.native(),\n      amount: \"0.0000001\"\n    })\n  }\n}\n\nfunction addContent (txBuilder, content) {\n  if (!(content instanceof Buffer)) content = Buffer.from(content)\n  const operationsLeft = 100 - txBuilder.operations.length\n  if (content.length > operationsLeft * 64) {\n    // eslint-disable-next-line no-console\n    console.log(\"Warning: message will be truncated.\")\n  }\n\n  for (let i = 0; i < operationsLeft; i++) {\n    const chunk = content.slice(i * 64, i * 64 + 64)\n    if (chunk.length === 0) break\n    const storeChunk = operation(\"manageData\", { name: \"Send\", value: chunk })\n    txBuilder.addOperation(storeChunk)\n  }\n}\n\nfunction operation (type, params) {\n  return StellarSdk.Operation[type](params)\n}\n\n/**\n * Parse the message object from transaction `txHash`.\n *\n * @param {String} txHash A transaction hash\n * @return {Object} A message object with `sender`, `object`, `date` and\n *     `content` fields.\n */\nmessenger.read = async function (conf, txHash) {\n  const server = resolve.network(conf)\n  const callBuilder = server.transactions().transaction(txHash)\n  const txRecord = await callBuilder.call()\n  return messenger.decode(conf, txRecord)\n}\n\nmessenger.decode = function (conf, txRecord) {\n  const transaction = new StellarSdk.Transaction(txRecord.envelope_xdr)\n  if (transaction.operations.length < 2) return null\n  return {\n    sender: txRecord.source_account,\n    object: extractObject(transaction.memo),\n    date: txRecord.created_at,\n    content: extractContent(transaction)\n  }\n}\n\nfunction extractObject (memo) {\n  if (memo._type === \"hash\" || memo._type === \"return\") {\n    return memo._value.toString(\"hex\")\n  } else {\n    return memo._value.toString(\"utf8\")\n  }\n}\n\nfunction extractContent (transaction) {\n  const chunks = []\n  transaction.operations.forEach(operation => {\n    if (isContentChunk(operation)) chunks.push(operation.value)\n  })\n  return Buffer.concat(chunks)\n}\n\nfunction isContentChunk (operation) {\n  return operation.type === \"manageData\" && operation.name === \"Send\"\n}\n\nmessenger.list = async function (conf, accountId, options) {\n  const records = await messenger.listRaw(conf, accountId, options)\n  return records.map(record => messenger.decode(conf, record))\n}\n\nmessenger.listRaw = async function (conf, accountId, options = {}) {\n  if (await resolve.accountIsEmpty(conf, accountId)) return []\n  const server = resolve.server(conf)\n  const callBuilder = server.transactions().forAccount(accountId)\n  if (options.cursor) callBuilder.cursor(options.cursor)\n  if (options.order) callBuilder.order(options.order)\n  options.filter = makeMessageFilter(options.filter)\n  return loopcall(callBuilder, options)\n}\n\nfunction makeMessageFilter (baseFilter) {\n  return function (record) {\n    if (record.operation_count < 2) return false\n    if (baseFilter) return baseFilter(record)\n    else return true\n  }\n}\n\nmessenger.find = async function (conf, publicKey, func) {\n  const records = await messenger.list(conf, publicKey, {\n    limit: 1,\n    filter: func\n  })\n  if (records[0]) return records[0]\n}\n","/**\n * Environment detection and library loading.\n */\n\n/**\n * Automatically pass library network configuration to underlying methods.\n */\n\n// baseConf may be modified only by multisig.useNetwork().\nconst baseConf = {}\n\nfunction prepare (module) {\n  const layer = {}\n  for (let name in module) {\n    if (typeof module[name] !== \"function\") continue\n    layer[name] = passConfig(module[name])\n  }\n\n  return Object.assign({}, module, layer)\n}\n\nfunction passConfig (func) {\n  return function (...params) {\n    // Make a one-time configuration object and pass it to the underlying\n    // function along with user parameters.\n    const conf = Object.create(baseConf)\n    return func(conf, ...params)\n  }\n}\n\nmodule.exports = prepare(require(\"./multisig\"))\n","/**\n * @exports multisig\n */\nconst multisig = exports\n\nconst axios = require(\"@cosmic-plus/base/axios\")\nconst Buffer = require(\"@cosmic-plus/base/buffer\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst resolve = require(\"./resolve\")\nconst shareSignatures = require(\"./share-signatures\")\nconst shareTransactions = require(\"./share-transactions\")\n\nmultisig.isEnabled = async function (conf, user) {\n  conf.multisig = await multisig.config(conf, user)\n  return !!conf.multisig\n}\n\nmultisig.config = async function (conf, user) {\n  const account = await getAccount(conf, user)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (conf.multisig.id) return conf.multisig\n  else return null\n}\n\nmultisig.enable = async function (conf, keypair, options) {\n  const account = await getAccount(conf, keypair)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (conf.multisig.id) {\n    // eslint-disable-next-line no-console\n    console.log(\n      \"On-chain signature sharing is already enabled on this account.\"\n    )\n    return null\n  }\n\n  const transaction = makeSetupTx(conf, account, options)\n  return sendOrReturn(conf, transaction, keypair)\n}\n\nmultisig.setup = async function (conf, keypair, options) {\n  const account = await getAccount(conf, keypair)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error(\n      \"On-chain signature sharing in not enabled on this account.\"\n    )\n  }\n\n  const transaction = makeSetupTx(conf, account, options)\n  return sendOrReturn(conf, transaction, keypair)\n}\n\nmultisig.disable = async function (conf, keypair) {\n  const account = await getAccount(conf, keypair)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    // eslint-disable-next-line no-console\n    console.log(\n      \"On-chain signature sharing is already disabled on this account.\"\n    )\n    return null\n  }\n\n  const transaction = makeDisableTx(conf, account)\n  return sendOrReturn(conf, transaction, keypair)\n}\n\n/**\n *\n * @parameter {Transaction|XDR} transaction A signed transaction\n * @parameter {Keypair} [keypair]\n * @returns {Transaction|HorizonResponse}\n */\nmultisig.pushSignatures = async function (conf, transaction, keypair) {\n  const account = await resolve.account(conf, transaction.source)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error(\n      \"On-chain signature sharing in not enabled on this account.\"\n    )\n  }\n\n  saveNetwork()\n  const senderId = keypair.publicKey()\n  await checkAccountExist(conf.multisig, senderId)\n  const pushTx = await shareSignatures.makePushTx(conf, transaction, senderId)\n  const horizonResponse = sendOrReturn(conf.multisig, pushTx, keypair)\n  horizonResponse.finally(restoreNetwork)\n  return horizonResponse\n}\n\nmultisig.pullSignatures = async function (conf, transaction) {\n  const account = await getAccount(conf, transaction.source)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error(\n      \"On-chain signature sharing in not enabled on this account.\"\n    )\n  }\n\n  saveNetwork()\n  const bool = await shareSignatures.pull(conf, transaction)\n  restoreNetwork()\n  return bool\n}\n\nmultisig.pushTransaction = async function (conf, transaction, keypair) {\n  const account = await getAccount(conf, keypair)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error(\n      \"On-chain transaction sharing is not enabled on this account.\"\n    )\n  }\n\n  const senderId = keypair.publicKey()\n  const legitSources = account.signers.map(signer => signer.key)\n  if (!legitSources.find(source => source === senderId)) {\n    throw new Error(\n      \"Not a co-signer for transaction source account: \" + senderId\n    )\n  }\n\n  saveNetwork()\n  await checkAccountExist(conf.multisig, senderId)\n  /// Shadow transaction signatures without modifying the underlying object.\n  transaction = Object.create(transaction)\n  transaction.signatures = []\n  const pushTx = await shareTransactions.makePushTx(conf, transaction, senderId)\n  const horizonResponse = sendOrReturn(conf.multisig, pushTx, keypair)\n  horizonResponse.finally(restoreNetwork)\n  return horizonResponse\n}\n\nmultisig.listTransactions = async function (conf, user, ledger) {\n  const account = await getAccount(conf, user)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error(\n      \"On-chain transaction sharing is not enabled on this account.\"\n    )\n  }\n\n  return shareTransactions.list(conf, account, ledger)\n}\n\nmultisig.useNetwork = function (conf, network, server) {\n  return resolve.network(conf.__proto__, network, server)\n}\n\n/** ***************************** Routines *************************************/\n\n/**\n * Returns the transaction that enable signature sharing for `account`.\n */\nfunction makeSetupTx (conf, account, options = {}) {\n  const multisigId =\n    options.id || conf.multisig.id || StellarSdk.Keypair.random().publicKey()\n  const txBuilder = new StellarSdk.TransactionBuilder(account)\n  txBuilder.addMemo(new StellarSdk.Memo(\"text\", \"Setup signature sharing\"))\n\n  let isEmpty = true\n  const setData = function (name, value) {\n    txBuilder.addOperation(\n      StellarSdk.Operation.manageData({ name: name, value: value })\n    )\n    isEmpty = false\n  }\n\n  if (multisigId !== conf.multisig.id) setData(\"config:multisig\", multisigId)\n\n  if (!options.network) options.network = \"test\"\n  if (\n    (options.network || conf.multisig.network)\n    && options.network !== conf.multisig.network\n  ) {\n    setData(\"config:multisig:network\", options.network)\n  }\n\n  if (\n    (options.server || conf.multisig.server)\n    && options.server !== conf.multisig.server\n  ) {\n    setData(\"config:multisig:server\", options.server)\n  }\n\n  if (isEmpty) return null\n  else return txBuilder.setTimeout(StellarSdk.InfiniteTimeout).build()\n}\n\n/**\n * Returns the transaction that disable signature sharing for `account`.\n */\nfunction makeDisableTx (conf, account) {\n  const txBuilder = new StellarSdk.TransactionBuilder(account)\n  txBuilder.addMemo(new StellarSdk.Memo(\"text\", \"Disable signature sharing\"))\n\n  const setData = function (name, value) {\n    txBuilder.addOperation(\n      StellarSdk.Operation.manageData({ name: name, value: value })\n    )\n  }\n\n  setData(\"config:multisig\", null)\n  if (account.data_attr[\"multisig:network\"]) {\n    setData(\"config:multisig:network\", null)\n  }\n  if (account.data_attr[\"multisig:server\"]) {\n    setData(\"config:multisig:server\", null)\n  }\n\n  return txBuilder.setTimeout(StellarSdk.InfiniteTimeout).build()\n}\n\n/** ************************ Generic helpers ***********************************/\n\n/**\n * Returns the multisig configuration.\n */\nfunction parseMultisigConfig (account) {\n  return {\n    id: readAttr(account.data_attr[\"config:multisig\"]),\n    network: readAttr(account.data_attr[\"config:multisig:network\"]) || \"test\",\n    server: readAttr(account.data_attr[\"config:multisig:server\"])\n  }\n}\nfunction readAttr (str64) {\n  if (str64) return Buffer.from(str64, \"base64\").toString(\"utf8\")\n}\n\n/**\n * If `user` is already an AccountResponse, return it. Else resolve it.\n */\nasync function getAccount (conf, user) {\n  if (isAccountResponse(user)) return user\n  else if (user instanceof StellarSdk.Keypair) user = user.publicKey()\n  else if (user instanceof StellarSdk.Account) user = user._accountId\n  else if (typeof user !== \"string\")\n    throw new TypeError(\"Invalid user parameter.\")\n\n  const account = await resolve.account(conf, user)\n  return account\n}\nfunction isAccountResponse (obj) {\n  return (\n    obj && obj._baseAccount && obj._baseAccount instanceof StellarSdk.Account\n  )\n}\n\n/**\n * Create `accoundId` if it is empty & on test network.\n */\nasync function checkAccountExist (conf, accountId) {\n  if (await resolve.accountIsEmpty(conf, accountId)) {\n    if (conf.network === \"test\") {\n      return axios(\"https://friendbot.stellar.org/?addr=\" + accountId)\n    } else {\n      throw new Error(\n        \"Account doesn't exist on the requested network: \" + conf.network\n      )\n    }\n  }\n}\n\n/**\n * If `value` is a transaction, sign it with `keypair` and send it to horizon.\n * Else, return `value`.\n */\nasync function sendOrReturn (conf, value, keypair) {\n  if (value instanceof StellarSdk.Transaction) {\n    const server = resolve.network(conf)\n    value.sign(keypair)\n    const responsePromise = server.submitTransaction(value)\n    responsePromise.catch(error => console.error(error.response))\n    return responsePromise\n  } else {\n    return value\n  }\n}\n\n/**\n * Save/Restore Network\n */\nlet networkBackup\n\nfunction saveNetwork () {\n  networkBackup = StellarSdk.Network.current()\n}\n\nfunction restoreNetwork () {\n  if (StellarSdk.Network.current() !== networkBackup) {\n    // eslint-disable-next-line no-console\n    console.log(\"Restore network\")\n    StellarSdk.Network.use(networkBackup)\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","\"use_stict\"\n\nconst env = require(\"@cosmic-plus/jsutils/env\")\n\nif (env.isBrowser) {\n  module.exports = require(\"./stellar-sdk\").axios\n} else {\n  module.exports = env.nodeRequire(\"axios\")\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\"use strict\"\n/**\n * Various independent helpers.\n *\n * @exports misc\n */\nconst misc = exports\n\n/**\n * Return a function that will execute `thunk` when called, and return the\n * result of its execution as a Promise. Handle async and regular functions\n * equally. Any error will be carried to .catch.\n *\n * @param {function} thunk A parameterless function\n * @return {function}\n */\nmisc.delay = function (thunk) {\n  let firstCall = true\n  let memoized\n  return function () {\n    if (firstCall) {\n      firstCall = false\n      memoized = new Promise(resolve => resolve(thunk()))\n    }\n    return memoized\n  }\n}\n\n/**\n * Return a promise that takes `x` seconds to resolve\n *\n * @param {number} x Time to wait\n * @return {Promise}\n */\nmisc.timeout = function (x) {\n  return new Promise(resolve => setTimeout(resolve, x))\n}\n\n/**\n * Return `string` with first letter capitalized.\n *\n * @param {string} string\n * @return {string}\n */\nmisc.capitalize = function (string) {\n  return string.substr(0, 1).toUpperCase() + string.slice(1)\n}\n\n/**\n * Return shortified `string` if longer than 30 characters; else return\n * `string`.\n *\n * @param {string}\n * @return {string}\n */\nmisc.shorter = function (string) {\n  if (string.length > 50) {\n    return string.substr(0, 5) + \"...\" + string.substr(-5)\n  } else {\n    return string\n  }\n}\n\n/**\n * Set `object` property `name` as hidden, and set it to `value`.\n */\nmisc.setHiddenProperty = function (object, name, value) {\n  Object.defineProperty(object, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  })\n}\n\n/**\n * Log an error stating that `before` is deprecated.\n *\n * @param {string} date YYYY-MM or YYYY-MM-DD\n * @param {string} before Old function/property\n * @param {string} after New function/property\n */\nmisc.deprecated = function (date, before, after) {\n  console.error(`Warning: ${before} is deprecated and will be removed after \\\n${date}. Please use ${after} instead.`)\n}\n\n/**\n * Creates and returns an extra field (`extra_ticot`) for **obj**. This allow to\n * append additional information to objects without mess.\n *\n * @param {Object}\n * @return {Object} The extra field object.\n */\nmisc.useExtra = function (obj) {\n  if (!obj[extraField]) misc.setHiddenProperty(obj, extraField, {})\n  return obj[extraField]\n}\nconst extraField = \"@cosmic-plus\"\n\n/**\n * Test if **string** is made of printable UTF8 characters. This is a simplified\n * test that is not robust.\n *\n * @param {String}\n * @return {Boolean}\n */\nmisc.isUtf8 = function (string) {\n  // eslint-disable-next-line no-control-regex\n  return !string.match(/[\\0-\\x1F\\x7F-\\x9F\\xAD\\uD7FC-\\uF8FF]/)\n}\n\n/**\n * Test if **string** is a base64 string.\n *\n * @param  {String} string\n * @return {Boolean}\n */\nmisc.isBase64 = function (string) {\n  return !!string.match(/^[0-9a-zA-Z+/]*=*$/)\n}\n\n/**\n * Deprecated functions\n */\n\nmisc.copy = () =>\n  console.error(\"misc.copy() have been moved to html.copyString()\")\n","\"use_strict\"\nconst shareSignatures = exports\n\nconst Buffer = require(\"@cosmic-plus/base/buffer\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst messenger = require(\"./messenger\")\nconst resolve = require(\"./resolve\")\n\n/**\n * Returns a sharing transaction that will push any new signature from\n * `transaction`. The sharing transactions should be signed by `accountId` and\n * sent to `conf.multisig.network`.\n */\nshareSignatures.makePushTx = async function (conf, transaction, senderId) {\n  const signatures = transaction.signatures.map(entry => entry.signature())\n  if (!transaction.signatures.length) return null\n\n  /// Push only signatures that have not been uploaded yet.\n  const txHash = transaction.hash()\n  const signers = await resolve.txSignersList(conf, transaction)\n  const alreadyOnchain = await getSignatures(conf, txHash, signers)\n  const newSignatures = onlyInFirstArray(signatures, alreadyOnchain)\n  if (!newSignatures.length) return null\n\n  /// Make the transaction that puts signatures on-chain.\n  const sender = await resolve.account(conf.multisig, senderId)\n  const destination = conf.multisig.id\n  const object = new StellarSdk.Memo(\"return\", txHash)\n  const message = Buffer.concat(signatures)\n  return messenger.encode(conf.multisig, sender, destination, object, message)\n}\n\nfunction onlyInFirstArray (array1, array2) {\n  return array1.filter(x => !array2.find(y => x.toString() === y.toString()))\n}\n\n/**\n * Pull signatures for `transaction` published on `conf.multisig.network`.\n */\nshareSignatures.pull = async function (conf, transaction) {\n  const txHash = transaction.hash()\n  const signers = await resolve.txSignersList(conf, transaction)\n  const signatures = await getSignatures(conf, txHash, signers)\n  return mergeSignatures(transaction, signatures, txHash, signers)\n}\n\n/**\n * Returns an array of the signatures shared on-chain for `txHash`.\n */\nasync function getSignatures (conf, txHash, signers) {\n  const txHash64 = txHash.toString(\"base64\")\n\n  if (await resolve.accountIsEmpty(conf.multisig, conf.multisig.id)) {\n    return []\n  }\n\n  /// Get transactions that embed shared signatures for transaction.\n  const records = await messenger.listRaw(conf.multisig, conf.multisig.id, {\n    filter: tx => tx.memo_type === \"return\" && tx.memo === txHash64\n  })\n\n  const signatures = []\n  for (let index in records) {\n    const txRecord = records[index]\n    const transaction = new StellarSdk.Transaction(txRecord.envelope_xdr)\n    if (!isTxSourceLegit(transaction, signers)) continue\n    transaction.operations.forEach(operation => {\n      if (containsSignature(operation)) signatures.push(operation.value)\n    })\n  }\n\n  return signatures\n}\n\nfunction isTxSourceLegit (transaction, signers) {\n  return signers.find(signer => signer === transaction.source)\n}\n\nfunction containsSignature (operation) {\n  return operation.type === \"manageData\" && operation.name === \"Send\"\n}\n\n/**\n * Test `signatures` against `signers` and add new legit ones to `transaction`.\n */\nfunction mergeSignatures (transaction, signatures, txHash, signers) {\n  let newSignatures = false\n  const txSigs = transaction.signatures.map(x => x.signature().toString())\n  const keys = signers.map(x => StellarSdk.Keypair.fromPublicKey(x))\n\n  for (let index in signatures) {\n    const signature = signatures[index]\n    if (txSigs.find(x => x === signature.toString())) continue\n    const signer = keys.find(x => x.verify(txHash, signature))\n    if (!signer) continue\n    const decoratedSignature = makeDecorated(signer, signature)\n    transaction.signatures.push(decoratedSignature)\n    txSigs.push(signature.toString())\n    newSignatures = true\n  }\n\n  return newSignatures\n}\n\nfunction makeDecorated (signer, signature) {\n  const Constructor = StellarSdk.xdr.DecoratedSignature\n  return new Constructor({ hint: signer.signatureHint(), signature: signature })\n}\n","'use_strict'\n/**\n * Concatenate records from `callBuilder` call response that pass `options.filter`\n * until `options.limit` is reached, `options.breaker` returns a true value or\n * no more are available.\n * \n * **Warning**: Please be aware that unlimited loopcall can iterate over the\n * full set of data available on a network, sending thousands of request to the\n * API. Please use it wisely :)\n * \n * @example\n * const callBuilder = server.transactions().forAccount('GDE...YBX')\n * const allTransactions = await loopcall(callBuilder)\n * const transactionsWithoutMemo = await loopcall(callBuilder, {\n *   filter: (tx) => !tx.memo\n * })\n * const thisYearTransactions = await loopcall(callBuilder, {\n *   breaker: (tx) => tx.created_at.substr(0,4) < 2018\n * })\n * \n * @example\n * const callBuilder = server.operations().order('asc')\n * const the2000firstOperations = await loopcall(callBuilder, { limit: 2000 })\n * const the20firstAccountCreations = await loopcall(callBuilder, {\n *   limit: 20,\n *   filter: (op) => op.type === 'create_account'\n * })\n * \n * @param {CallBuilder} callBuilder A CallBuilder object\n * @param {Object} [options]\n * @param {integer} [options.limit] The maximum number of record to return\n * @param {function} [options.filter] A function that accept a record argument. It\n *   is called with each fetched record. If it returns a true value, the record\n *   is added to returned records, else it is discarded.\n * @param {function} [options.breaker] A function that accept a record argument.\n *   It is called with each fetched record. If it returns a true value, the loop\n *   ends and the array of the filtered records is returned.\n * @returns {Array} The fetched records\n */\nmodule.exports = async function (callBuilder, options = {}) {\n  const callerLimit = options.limit ? Math.min(options.limit, 200) : 200\n  const callAnswer = await callBuilder.limit(callerLimit).call()\n\n  if (options.filter || options.breaker) {\n    return loopWithBreakpoints(callAnswer, options)\n  } else {\n    return loop(callAnswer, options.limit)\n  }\n}\n\n/**\n * Concatenate records from `callAnswer` pages until `limit` is reached or no\n * more are available.\n * \n * @param {Object} callAnswer A resolved CallBuilder.call() object\n * @param {integer} limit The maximum number of record to return\n * @returns {Array} The fetched records\n */\nasync function loop (callAnswer, limit) {\n  let records = []\n\n  while (callAnswer.records.length) {\n    if (limit) {\n      const length = records.length + callAnswer.records.length\n      if (limit === length) {\n        return records.concat(callAnswer.records)\n      } else if (length > limit) {\n        const splitAt = limit - records.length\n        const tailRecords = callAnswer.records.slice(0, splitAt)\n        return records.concat(tailRecords)\n      }\n    }\n    records = records.concat(callAnswer.records)\n    callAnswer = await callAnswer.next()\n  }\n  \n  return records\n}\n\n/**\n * Concatenate records from `callAnswer` pages that pass `options.filter` until\n * `options.limit` is reached, `options.breaker` returns a true value or no more\n * are available.\n * \n * @param {Object} callAnswer A resolved CallBuilder.call() object\n * @param {Object} [options]\n * @param {integer} [options.limit] The maximum number of record to return\n * @param {function} [options.filter] A function that accept a record argument. It\n *   is called with each fetched record. If it returns a true value, the record\n *   is added to returned records, else it is discarded.\n * @param {function} [options.breaker] A function that accept a record argument.\n *   It is called with each fetched record. If it returns a true value, the loop\n *   ends and the array of the filtered records is returned.\n * @returns {Array} The fetched records\n */\nasync function loopWithBreakpoints (callAnswer, options) {\n  const records = []\n  \n  while (callAnswer.records.length) {\n    for (let index in callAnswer.records) {\n      if (options.limit && records.length === options.limit) return records\n      const nextRecord = callAnswer.records[index]\n      if (options.breaker) {\n        const recordTriggerBreak = await options.breaker(nextRecord)\n        if (recordTriggerBreak) return records\n      }\n      if (options.filter) {\n        const recordPassTest = await options.filter(nextRecord)\n        if (!recordPassTest) continue\n      }\n      records.push(nextRecord)\n    }\n    callAnswer = await callAnswer.next()\n  }\n  \n  return records\n}\n","\"use_strict\"\nconst shareTransactions = exports\n\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst messenger = require(\"./messenger\")\nconst resolve = require(\"./resolve\")\n\nshareTransactions.list = async function (conf, account, lastLedger = 0) {\n  if (typeof lastLedger !== \"number\") lastLedger = +lastLedger\n\n  const options = {}\n  const legitSources = listSignersKeys(account)\n  options.filter = record => isLegitSharedTransaction(record, legitSources)\n  if (lastLedger) options.breaker = record => record.ledger_attr <= lastLedger\n  const txRecords = await messenger.listRaw(\n    conf.multisig,\n    conf.multisig.id,\n    options\n  )\n\n  return txRecords.map(decodeTransactionRequest)\n}\n\nfunction isLegitSharedTransaction (record, legitSources) {\n  if (record.memo_type !== \"hash\") return false\n  return legitSources.find(accountId => accountId === record.source_account)\n}\n\nfunction decodeTransactionRequest (record) {\n  const message = messenger.decode(null, record)\n  message.ledger = record.ledger_attr\n  message.xdr = message.content.toString(\"base64\")\n  delete message.content\n  delete message.object\n  return message\n}\n\nshareTransactions.makePushTx = async function (conf, transaction, senderId) {\n  const txHash = transaction.hash()\n  if (await transactionHasBeenPushed(conf, txHash)) {\n    // eslint-disable-next-line no-console\n    console.log(\"Transaction have already been pushed\")\n    return null\n  }\n\n  /// Make the transaction that puts transaction on-chain.\n  const sender = await resolve.account(conf.multisig, senderId)\n  const destination = conf.multisig.id\n  const object = new StellarSdk.Memo(\"hash\", txHash)\n  const content = transaction.toEnvelope().toXDR()\n  return messenger.encode(conf.multisig, sender, destination, object, content)\n}\n\nasync function transactionHasBeenPushed (conf, txHash) {\n  const txHash64 = txHash.toString(\"base64\")\n  const tester = record => recordHasMemo(record, \"hash\", txHash64)\n  const record = await messenger.find(conf.multisig, conf.multisig.id, tester)\n  return !!record\n}\n\nfunction recordHasMemo (record, type, value) {\n  return record.memo_type === type && record.memo === value\n}\n\nfunction listSignersKeys (account) {\n  return account.signers.map(signer => signer.key)\n}\n"],"sourceRoot":""}