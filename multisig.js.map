{"version":3,"sources":["webpack://multisig/webpack/universalModuleDefinition","webpack://multisig/webpack/bootstrap","webpack://multisig/./node_modules/babel-runtime/regenerator/index.js","webpack://multisig/./src/buffer.js","webpack://multisig/./src/resolve.js","webpack://multisig/./src/index.js","webpack://multisig/(webpack)/buildin/global.js","webpack://multisig/./src/multisig.js","webpack://multisig/./node_modules/regenerator-runtime/runtime-module.js","webpack://multisig/./node_modules/regenerator-runtime/runtime.js","webpack://multisig/./src/helpers.js","webpack://multisig/./src/messenger.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","memo","StellarSdk","Memo","__proto__","constructor","_callee","address","promise","_regenerator2","default","wrap","_context","prev","next","accountCache","helpers","timeout","resolve","accountCacheExpiration","stop","_callee2","account","publicKey","alias","_context2","length","match","Error","shorter","FederationServer","sent","account_id","memo_type","undefined","aliases","abrupt","t0","console","error","_callee9","conf","transaction","sources","_context9","txSources","signersList","apply","concat","_toConsumableArray","network","arguments","server","Network","useTestNetwork","testServer","usePublicNetwork","publicServer","Server","TypeError","addressResolver","cacheAccount","_ref3","_asyncToGenerator","mark","_callee3","accountResponse","short","_context3","loadAccount","_x8","_x9","_ref4","_callee4","txHash","caller","_context4","transactions","_x10","_x11","accountSigners","_ref5","_callee5","_context5","signers","_x12","_x13","signersTable","_ref6","_callee6","_len","addresses","Array","_key","obj","index","_context6","keys","t1","done","id","_x14","_ref7","_callee7","_len2","_key2","array","_context7","forEach","entry","find","a","push","_x15","extra","useExtra","source","_loop","operations","txSignersList","_ref8","_callee8","_context8","getTxSignersList","_x16","_x17","extraField","isBrowser","Function","isNode","stealth_require","eval","global","prepare","layer","passConfig","assign","func","params","g","e","window","shareId","txHash64","records","multisigId","toString","messenger","filter","tx","Transaction","envelope_xdr","x","operation","type","user","_isAccountResponse","Keypair","Account","_accountId","multisig","Buffer","_onlyInFirst","array1","array2","y","enableTx","random","txbuilder","TransactionBuilder","addMemo","addOperation","Operation","manageData","createAccount","destination","startingBalance","asset","Asset","native","build","disableTx","txBuilder","pushTx","sender","signatures","message","sendTx","mergeSignatures","newSignatures","txSigs","map","signature","fromPublicKey","_loop2","signer","verify","Constructor","xdr","DecoratedSignature","hint","signatureHint","_makeDecorated","publicKeyBase64","data_attr","from","_baseAccount","sendOrReturn","canSign","sign","submitTransaction","isEnabled","_ref","config","_x","_x2","_ref2","getAccount","_x3","_x4","enable","log","_x5","_x6","disable","_x7","pushSignatures","alreadyOnchain","pusher","hash","getSignatures","pullSignatures","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","then","result","reverse","pop","Context","reset","skipTempReset","_sent","delegate","method","tryEntries","resetTryEntry","charAt","isNaN","slice","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","err","previousPromise","callInvokeWithMethodAndArg","Promise","reject","invoke","unwrapped","return","info","pushTryEntry","locs","iteratorMethod","setTimeout","string","substr","answerPromise","limit","answer","_listPromiseLoop","_filterPromiseLoop","extractMemo","txCallAnswer","extractMessage","operation_count","payment","amount","opNum","chunk","read","source_account","date","created_at","list","forAccount"],"mappings":"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","file":"multisig.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"multisig\"] = factory();\n\telse\n\t\troot[\"multisig\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"regenerator-runtime\");\n","/// Get Buffer constructor from StellarSdk to avoid additional dependencies.\n\nconst hash = '0000000000000000000000000000000000000000000000000000000000000000'\nconst memo = new StellarSdk.Memo('hash', hash)\nmodule.exports = memo.value.__proto__.constructor\n","/**\n * Contains functions that probe the blockchain or federation servers to collect\n * datas.\n *\n * Note: this is copied from js-cosmic-lib and I didn't cleaned it up yet\n *\n * @private\n * @exports resolve\n */\nconst resolve = exports\n\nconst helpers = require('./helpers')\n\n/**\n * Select the network to be used by `StellarSdk` as being `c` current\n * network.\n *\n */\nresolve.network = function (c, network = c.network, server = c.server) {\n  switch (network) {\n    case 'test':\n      StellarSdk.Network.useTestNetwork()\n      if (!server) server = testServer\n      break\n    case 'public':\n      StellarSdk.Network.usePublicNetwork()\n      if (!server) server = publicServer\n      break\n    default: throw new Error('Invalid network: ' + network)\n  }\n\n  if (server instanceof StellarSdk.Server) c.server = server\n  else if (typeof server === 'string') c.server = new StellarSdk.Server(server)\n  else throw new TypeError('Invalid server: ' + server)\n\n  return c.server\n}\n\nconst testServer = new StellarSdk.Server('https://horizon-testnet.stellar.org')\nconst publicServer = new StellarSdk.Server('https://horizon.stellar.org')\n\n/**\n * Configure for how much time the resolved addresses are kept in cache,\n * in seconds. The default is set to 5 minutes to avoid resolving to an outdated\n * address.\n *\n * @const\n */\nresolve.accountCacheExpiration = 5 * 60\n\n/**\n * Contains promise of previously fetched accounts.\n *\n * @private\n * @type {Object}\n */\nconst accountCache = {}\n\n/**\n * Cache `promise` resolving to `address`'s account for `accountCacheExpiration`\n * seconds.\n *\n * @private\n * @param {string} address\n * @param {Promise} promise\n */\nasync function cacheAccount (address, promise) {\n  accountCache[address] = promise\n  await helpers.timeout(resolve.accountCacheExpiration * 1000)\n  delete accountCache[address]\n}\n\n/**\n * Return a promise that resolve to `address` account object, as defined in\n * JavaScript Stellar SDK API reference. `address` can be either a Stellar public\n * key or a federated address (account*example.org).\n * Returned results are cached and re-usable.\n *\n * @param {string} address\n * @return {Promise} Resolve to `address` account object\n */\nresolve.address = function (c, address) {\n  if (accountCache[address]) return accountCache[address]\n  const promise = addressResolver(c, address)\n  cacheAccount(address, promise)\n  return promise\n}\n\n/**\n * Helper for the previous resolve.address function.\n * Resolve to an account object for `address`.\n *\n * @private\n * @param {string} address\n */\nasync function addressResolver (c, address) {\n  if (address.length !== 56 && !address.match(/.*\\*.*\\..*/)) {\n    throw new Error('Invalid address: ' + helpers.shorter(address))\n  }\n\n  try {\n    const account = await StellarSdk.FederationServer.resolve(address)\n    const publicKey = account.account_id\n    if (!publicKey) throw new Error('Empty account')\n    if (!account.memo_type && account.memo !== undefined) delete account.memo\n    if (address !== publicKey) account.address = address\n    const alias = c.aliases && c.aliases[publicKey]\n    if (alias) account.alias = alias\n    return account\n  } catch (error) {\n    console.error(error)\n    throw new Error(\"Can't resolve: \" + helpers.shorter(address))\n  }\n}\n\n/**\n * Return the AccountResponse object for `address` on `network`.\n *\n * @param {CL}\n * @param {string} address A public key or a federated address\n * @param {string} network Either 'test' or 'public'\n * @return {Object} The account response\n */\nresolve.account = async function (c, address, network = c.network) {\n  const server = resolve.network(c, network)\n  const account = await resolve.address(c, address)\n  const publicKey = account.account_id\n  try {\n    const accountResponse = await server.loadAccount(publicKey)\n    return accountResponse\n  } catch (error) {\n    console.error(error)\n    const short = helpers.shorter(address)\n    throw new Error(`Empty account: ${short}`)\n  }\n}\n\nresolve.transaction = async function (conf, txHash) {\n  const caller = conf.server.transactions()\n  return caller.transaction(txHash).call()\n}\n\n/**\n * Return the signers for the account at `address` on `network`.\n *\n * @param {CL}\n * @param {string} address Either a public key or a federated address\n * @param {string} network Either 'test' or 'public'\n * @return {Object} The signers object from the account response\n */\nresolve.accountSigners = async function (c, address) {\n  const account = await resolve.account(c, address)\n  return account.signers\n}\n\nresolve.signersTable = async function (conf, ...addresses) {\n  const obj = {}\n\n  for (let index in addresses) {\n    const account = await resolve.account(conf, addresses[index])\n    if (!obj[account.id]) obj[account.id] = account.signers\n  }\n\n  return obj\n}\n\nresolve.signersList = async function (conf, ...addresses) {\n  const array = []\n\n  for (let index in addresses) {\n    const account = await resolve.account(conf, addresses[index])\n    account.signers.forEach(entry => {\n      if (!array.find(a => a.key === entry.key)) array.push(entry.key)\n    })\n  }\n\n  return array\n}\n\nresolve.txSources = function (conf, transaction) {\n  const extra = useExtra(transaction)\n  if (extra.sources) return extra.sources\n\n  const array = [ transaction.source ]\n\n  for (let index in transaction.operations) {\n    const source = transaction.operations[index].source\n    if (source && !array.find(a => a === source)) array.push(source)\n  }\n\n  extra.sources = array\n  return array\n}\n\nresolve.txSignersList = async function (conf, transaction) {\n  const extra = useExtra(transaction)\n  if (!extra.signers) extra.signers = getTxSignersList(conf, transaction)\n  return extra.signers\n}\n\nasync function getTxSignersList (conf, transaction) {\n  const sources = resolve.txSources(conf, transaction)\n  return resolve.signersList(conf, ...sources)\n}\n\nconst extraField = 'extra_ocmultisig'\nfunction useExtra (obj) {\n  if (!obj.extra) obj[extraField] = {}\n  return obj[extraField]\n}\n","/**\n * Environment detection and library loading.\n */\n\nconst isBrowser = new Function('try { return this === window } catch (e) { return false }')\nconst isNode = new Function('try { return this === global } catch (e) { return false }')\n\nif (isBrowser()) {\n  if (typeof StellarSdk === 'undefined') {\n    throw new Error('stellar-ledger-wallet depends on StellarSdk.')\n  }\n} else if (isNode()) {\n  /// Prevent StellarSdk to be bundled by any bundler.\n  const stealth_require = eval('require')\n  global.StellarSdk = stealth_require('stellar-sdk')\n}\n\n/**\n * Automatically pass library configuration to underlying methods\n */\n\nfunction prepare (module) {\n  const layer = {}\n  for (let name in module) {\n    if (typeof module[name] !== 'function') continue\n    layer[name] = passConfig(module[name])\n  }\n\n  return Object.assign({}, module, layer)\n}\n\nfunction passConfig (func) {\n  return function (...params) {\n    return func(this, ...params)\n  }\n}\n\nmodule.exports = prepare(require('./multisig'))\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * @exports multisig\n */\nconst multisig = exports\n\nconst Buffer = require('./buffer')\nconst resolve = require('./resolve')\nconst messenger = require('./messenger')\n\nmultisig.network = 'test'\nmultisig.server = 'https://horizon-testnet.stellar.org'\n\nmultisig.isEnabled = async function (conf, user) {\n  if (await multisig.config(conf, user)) return true\n  else return false\n}\n\nmultisig.config = async function (conf, user) {\n  const account = await getAccount(conf, user)\n  const destination = multisigId(conf, account)\n  if (destination) return { multisig: destination, network: conf.network }\n  else return false\n}\n\nmultisig.enable = async function (conf, user) {\n  const account = await getAccount(conf, user)\n\n  if (await multisig.config(conf, account)) {\n    console.log('On-chain signature sharing is already enabled on this account.')\n    return null\n  } else {\n    const transaction = enableTx(conf, account)\n    return sendOrReturn(conf, transaction, user)\n  }\n}\n\nmultisig.disable = async function (conf, user) {\n  const account = await getAccount(conf, user)\n\n  if (!await multisig.config(conf, account)) {\n    console.log('On-chain signature sharing is already disabled on this account.')\n    return null\n  } else {\n    const transaction = disableTx(conf, account)\n    return sendOrReturn(conf, transaction, user)\n  }\n}\n\n/**\n *\n * @parameter {Transaction|XDR} transaction A signed transaction\n * @parameter {AccountResponse|Keypair} [user]\n * @returns {Transaction|HorizonResponse}\n */\nmultisig.pushSignatures = async function (conf, transaction, user) {\n  user = user || transaction.source\n  const account = await getAccount(conf, user)\n\n  if (!await multisig.config(conf, account)) {\n    throw new Error('On-chain signature sharing in not enabled on this account.')\n  }\n\n  const txHash = transaction.hash()\n  const signatures = transaction.signatures.map(entry => entry.signature())\n\n  if (!transaction.signatures.length) return null\n\n  /// Send only signatures that have not been uploaded yet.\n  const signers = await resolve.txSignersList(conf, transaction)\n  const alreadyOnchain = await getSignatures(conf, account, txHash, signers)\n  const newSignatures = _onlyInFirst(signatures, alreadyOnchain)\n\n  if (!newSignatures.length) return null\n  const pusher = pushTx(conf, account, txHash, newSignatures)\n  return sendOrReturn(conf, pusher, user)\n}\n\nfunction _onlyInFirst (array1, array2) {\n  return array1.filter(x => !array2.find(y => x.toString() === y.toString()))\n}\n\nmultisig.pullSignatures = async function (conf, transaction) {\n  const account = await getAccount(conf, transaction.source)\n\n  if (!await multisig.config(conf, account)) {\n    throw new Error('On-chain signature sharing in not enabled on this account.')\n  }\n\n  const signers = await resolve.txSignersList(conf, transaction)\n  const txHash = transaction.hash()\n  const signatures = await getSignatures(conf, account, txHash, signers)\n  return mergeSignatures(conf, transaction, signatures, txHash, signers)\n}\n\n/** ***************************** Routines *************************************/\n\n/**\n * Returns the transaction that enable signature sharing for `account`\n */\nfunction enableTx (conf, account) {\n  const multisigId = StellarSdk.Keypair.random().publicKey()\n  const txbuilder = new StellarSdk.TransactionBuilder(account)\n  txbuilder.addMemo(new StellarSdk.Memo('text', 'Enable signature sharing'))\n  txbuilder.addOperation(StellarSdk.Operation.manageData({\n    name: 'config:multisig',\n    value: multisigId\n  }))\n  txbuilder.addOperation(StellarSdk.Operation.createAccount({\n    destination: multisigId,\n    startingBalance: '1',\n    asset: StellarSdk.Asset.native()\n  }))\n  return txbuilder.build()\n}\n\n/**\n * Returns the transaction that disable signature sharing for `account`.\n */\nfunction disableTx (conf, account) {\n  const txBuilder = new StellarSdk.TransactionBuilder(account)\n  txBuilder.addMemo(new StellarSdk.Memo('text', 'Disable signature sharing'))\n  txBuilder.addOperation(StellarSdk.Operation.manageData(\n    { name: 'config:multisig', value: '' }\n  ))\n  return txBuilder.build()\n}\n\n/**\n * Returns the Transaction that send `signatures` for `txHash`.\n */\nfunction pushTx (conf, sender, txHash, signatures) {\n  const memo = new StellarSdk.Memo('hash', txHash)\n  const destination = multisigId(conf, sender)\n  const message = Buffer.concat(signatures)\n\n  return messenger.sendTx(sender, destination, memo, message)\n}\n\n/**\n * Returns an array of the signatures shared on-chain for `txHash`.\n */\nasync function getSignatures (conf, account, txHash, signers) {\n  const shareId = multisigId(conf, account)\n  const txHash64 = txHash.toString('base64')\n\n  const records = await messenger.filter(conf, shareId,\n    tx => tx.memo_type === 'hash' && tx.memo === txHash64)\n\n  const array = []\n  for (let index in records) {\n    const entry = records[index]\n    const transaction = new StellarSdk.Transaction(entry.envelope_xdr)\n    if (!signers.find(x => x === transaction.source)) continue\n    transaction.operations.forEach(operation => {\n      if (operation.type === 'manageData' && operation.name === 'Send') {\n        array.push(operation.value)\n      }\n    })\n  }\n  return array\n}\n\nfunction mergeSignatures (conf, transaction, signatures, txHash, signers) {\n  let newSignatures = false\n  const txSigs = transaction.signatures.map(x => x.signature().toString())\n  const keys = signers.map(x => StellarSdk.Keypair.fromPublicKey(x))\n\n  for (let index in signatures) {\n    const signature = signatures[index]\n    if (txSigs.find(x => x === signature.toString())) continue\n    const signer = keys.find(x => x.verify(txHash, signature))\n    if (!signer) continue\n    transaction.signatures.push(_makeDecorated(signer, signature))\n    txSigs.push(signature.toString())\n    newSignatures = true\n  }\n\n  return newSignatures\n}\nfunction _makeDecorated (signer, signature) {\n  const Constructor = StellarSdk.xdr.DecoratedSignature\n  return new Constructor({ hint: signer.signatureHint(), signature: signature })\n}\n\n/** ************************ Generic helpers ***********************************/\n\n/**\n * Returns the multisig account ID for `account`.\n */\nfunction multisigId (conf, account) {\n  const publicKeyBase64 = account.data_attr['config:multisig']\n  return publicKeyBase64 && Buffer.from(publicKeyBase64, 'base64').toString('utf8')\n}\n\n/**\n * If `user` is already an AccountResponse, return it. Else resolve it.\n */\nasync function getAccount (conf, user) {\n  if (_isAccountResponse(user)) return user\n  else if (user instanceof StellarSdk.Keypair) user = user.publicKey()\n  else if (user instanceof StellarSdk.Account) user = user._accountId\n  else if (typeof user !== 'string') throw new TypeError('Invalid user parameter.')\n\n  const account = await resolve.account(conf, user)\n  return account\n}\nfunction _isAccountResponse (obj) {\n  return obj && obj._baseAccount && obj._baseAccount instanceof StellarSdk.Account\n}\n\n/**\n * Sign and send transaction if `user` is a Keypair that can sign, else return\n * transaction.\n */\nfunction sendOrReturn (conf, transaction, user) {\n  if (user instanceof StellarSdk.Keypair && user.canSign()) {\n    transaction.sign(user)\n    return conf.server.submitTransaction(transaction)\n  } else {\n    return transaction\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","'use strict'\n/**\n * Various independent helpers.\n *\n * @exports helpers\n */\nconst helpers = exports\n\n/**\n * Return a promise that takes `x` seconds to resolve\n *\n * @param {number} x Time to wait\n * @return {Promise}\n */\nhelpers.timeout = function (x) {\n  return new Promise(function (resolve) { setTimeout(resolve, x) })\n}\n\n/**\n * Return shortified `string` if longer than 30 characters; else return\n * `string`.\n *\n * @param {string}\n * @return {string}\n */\nhelpers.shorter = function (string) {\n  if (string.length > 50) {\n    return string.substr(0, 5) + '...' + string.substr(-5)\n  } else {\n    return string\n  }\n}\n","/**\n * Publish/read arbitrary data on the blockchain\n *\n * @private\n * @exports messenger\n */\nconst messenger = exports\n\nconst Buffer = require('./buffer')\nconst resolve = require('./resolve')\n\n/**\n * Build a transaction to be signed by `sender` to send `message` to\n * `destination`, with `memo`. The maximum size for `message` is 6336 bytes.\n * `destination` can also be an array of several publicKeys, in which case\n * each additional key after the first one will lower the maximum `message`\n * size by 64 bytes.\n *\n * The cost of emission is 1 stroop per destination + 1 stroop for each\n * 64 bytes to send.\n *\n * @param {AccountResponse} sender The AccountResponse for sender\n * @param {String|Array} destination The publicKey where to send the message,\n *     or an array of publicKeys.\n * @param {Memo|String} memo The memo for the transaction (max. 28 bytes for strings).\n * @param {String} message The message to be send.\n * @return {Transaction} A StellarSdk Transaction object\n */\nmessenger.sendTx = function (sender, destination, memo, message) {\n  if (!memo) memo = new StellarSdk.Memo('none')\n  if (!message) message = ''\n  if (typeof memo === 'string') {\n    memo = new StellarSdk.Memo('text', Buffer.from(memo).slice(0, 28).toString())\n  } else if (!(memo instanceof StellarSdk.Memo)) {\n    throw new TypeError('memo is not a string nor a memo.')\n  }\n  if (typeof message !== 'string' && !(message instanceof Buffer)) {\n    throw new TypeError('message is not a string nor a buffer.')\n  }\n\n  const txBuilder = new StellarSdk.TransactionBuilder(sender)\n\n  txBuilder.addMemo(memo)\n  if (typeof destination !== 'array') destination = [ destination ]\n  destination.forEach(entry => {\n    txBuilder.addOperation(StellarSdk.Operation.payment({\n      destination: entry,\n      asset: StellarSdk.Asset.native(),\n      amount: '0.0000001'\n    }))\n  })\n\n  if (!(message instanceof Buffer)) message = Buffer.from(message)\n  const opNum = 100 - destination.length\n  if (message.length > opNum * 64) console.log('Warning: message will be truncated.')\n\n  for (let i = 0; i < opNum; i++) {\n    const chunk = message.slice(i * 64, i * 64 + 64)\n    if (chunk.length === 0) break\n    txBuilder.addOperation(StellarSdk.Operation.manageData({\n      name: 'Send',\n      value: chunk\n    }))\n  }\n  return txBuilder.build()\n}\n\n/**\n * Return the message object from `txHash`, using `server` to fetch datas.\n *\n * @param {Server} server A StellarSdk Server object\n * @param {String} txHash A transaction hash\n * @return {Object} A message object with `sender`, `memo`, `date` and\n *     `message` fields.\n */\nmessenger.read = async function (conf, txHash) {\n  resolve.network(conf)\n  const caller = conf.server.transactions()\n  const answer = await caller.transaction(txHash).call()\n  return {\n    sender: answer.source_account,\n    memo: extractMemo(answer),\n    date: answer.created_at,\n    message: extractMessage(answer)\n  }\n}\n\nfunction extractMemo (txCallAnswer) {\n  const tx = new StellarSdk.Transaction(txCallAnswer.envelope_xdr)\n  return tx.memo\n}\n\nfunction extractMessage (txCallAnswer) {\n  if (txCallAnswer.operation_count < 2) return null\n  const array = []\n  const tx = new StellarSdk.Transaction(txCallAnswer.envelope_xdr)\n  tx.operations.forEach(entry => {\n    if (entry.type === 'manageData' && entry.name === 'Send') {\n      array.push(entry.value)\n    }\n  })\n  return Buffer.concat(array)\n}\n\nmessenger.list = function (conf, publicKey, limit) {\n  resolve.network(conf)\n  const caller = conf.server.transactions().forAccount(publicKey).limit(200)\n  return _listPromiseLoop(caller.call(), limit)\n}\n\nasync function _listPromiseLoop (answerPromise, limit, array) {\n  if (!array) array = []\n  const answer = await answerPromise\n\n  if (answer.records.length === 0) return array\n  if (limit && array.length + answer.records.length > limit) {\n    return array.concat(answer.records.slice(0, limit - array.length))\n  }\n  array = array.concat(answer.records)\n  return _listPromiseLoop(answer.next(), limit, array)\n}\n\nmessenger.find = function (conf, publicKey, func) {\n  return messenger.filter(conf, publicKey, func, 1)\n}\n\nmessenger.filter = function (conf, publicKey, func, limit) {\n  resolve.network(conf)\n  const caller = conf.server.transactions().forAccount(publicKey).limit(200)\n  return _filterPromiseLoop(caller.call(), func, limit)\n}\n\nasync function _filterPromiseLoop (answerPromise, func, limit, array) {\n  if (!array) array = []\n  const answer = await answerPromise\n  if (answer.records.length === 0) return array\n  for (let index in answer.records) {\n    const tx = answer.records[index]\n    if (func(tx)) array.push(tx)\n    if (array.length === limit) return array\n  }\n  /// Recursive solution :/\n  return _filterPromiseLoop(answer.next(), func, limit, array)\n}\n"],"sourceRoot":""}