{"version":3,"sources":["webpack://multisig/webpack/universalModuleDefinition","webpack://multisig/webpack/bootstrap","webpack://multisig/./node_modules/@cosmic-plus/base/stellar-sdk.js","webpack://multisig/./node_modules/babel-runtime/regenerator/index.js","webpack://multisig/./src/resolve.js","webpack://multisig/./node_modules/@cosmic-plus/jsutils/env.js","webpack://multisig/./node_modules/@cosmic-plus/base/buffer.js","webpack://multisig/./src/messenger.js","webpack://multisig/./src/index.js","webpack://multisig/./src/multisig.js","webpack://multisig/./node_modules/regenerator-runtime/runtime-module.js","webpack://multisig/./node_modules/regenerator-runtime/runtime.js","webpack://multisig/./node_modules/@cosmic-plus/base/axios.js","webpack://multisig/./node_modules/@cosmic-plus/jsutils/misc.js","webpack://multisig/./node_modules/@cosmic-plus/jsutils/html.js","webpack://multisig/./src/share-signatures.js","webpack://multisig/./node_modules/@cosmic-plus/loopcall/loopcall.js","webpack://multisig/./src/share-transactions.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","env","isBrowser","undefined","StellarSdk","Error","nodeRequire","_callee","address","promise","_regenerator2","default","wrap","_context","prev","next","accountCache","helpers","timeout","resolve","accountCacheExpiration","stop","this","_callee2","account","publicKey","alias","_context2","FederationServer","sent","account_id","memo_type","memo","aliases","abrupt","_callee10","conf","transaction","sources","_context10","txSources","signersList","apply","concat","_toConsumableArray","networkPassphrase","network","Networks","PUBLIC","TESTNET","currentNetwork","Network","current","server","arguments","length","passphrase","getServer","newPassphrase","console","log","use","serverSaves","networkDefaultServer","url","Server","addressResolver","cacheAccount","_ref3","_asyncToGenerator","mark","_callee3","accountResponse","_context3","loadAccount","_x10","_x11","accountIsEmpty","_ref4","_callee4","id","_context4","then","x","catch","_x12","_x13","_ref5","_callee5","txHash","caller","_context5","transactions","_x14","_x15","accountSigners","_ref6","_callee6","_context6","signers","_x16","_x17","signersTable","_ref7","_callee7","_len","addresses","Array","_key","obj","index","_context7","t0","keys","t1","done","_x18","_ref8","_callee8","_len2","_key2","array","_context8","forEach","entry","find","a","push","_x19","extra","useExtra","source","_loop","operations","txSignersList","_ref9","_callee9","_context9","getTxSignersList","_x20","_x21","extraField","Function","isNode","stealth_require","eval","hash","Memo","__proto__","constructor","Buffer","txBuilder","destinations","accountId","addDestination","isArray","linkToAccount","addOperation","operation","destination","startingBalance","asset","Asset","native","amount","messenger","loopcall","addMemo","slicedMemo","from","slice","toString","addContent","content","operationsLeft","chunk","storeChunk","type","params","Operation","makeMessageFilter","baseFilter","record","operation_count","send","_ref","keypair","senderAccount","tx","encode","sign","submitTransaction","_x","_x2","_x3","_x4","_x5","_ref2","TransactionBuilder","addDestinations","build","_x6","_x7","_x8","_x9","read","callBuilder","txRecord","decode","Transaction","envelope_xdr","sender","source_account","_type","_value","extractObject","date","created_at","chunks","isContentChunk","extractContent","list","options","records","listRaw","map","forAccount","cursor","order","filter","_x22","_x23","func","limit","_x24","_x25","_x26","baseConf","passConfig","layer","assign","prepare","user","isAccountResponse","Keypair","Account","_accountId","TypeError","_callee11","_context11","axios","_callee12","responsePromise","_context12","error","response","multisig","shareSignatures","shareTransactions","makeSetupTx","multisigId","random","isEmpty","setData","manageData","makeDisableTx","data_attr","parseMultisigConfig","readAttr","str64","_baseAccount","isEnabled","config","getAccount","enable","sendOrReturn","setup","disable","pushSignatures","senderId","pushTx","horizonResponse","saveNetwork","checkAccountExist","makePushTx","finally","restoreNetwork","pullSignatures","bool","pull","pushTransaction","signer","signatures","listTransactions","ledger","useNetwork","networkBackup","g","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","e","global","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","iter","result","reverse","pop","Context","reset","skipTempReset","_sent","delegate","method","tryEntries","resetTryEntry","charAt","isNaN","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","err","previousPromise","callInvokeWithMethodAndArg","Promise","reject","invoke","unwrapped","return","info","pushTryEntry","locs","iteratorMethod","misc","html","delay","thunk","memoized","firstCall","setTimeout","capitalize","string","substr","toUpperCase","shorter","copy","textBox","append","grab","copyContent","destroy","element","childs","child","appendChild","document","createTextNode","appendClass","newClass","className","clear","innerHTML","selectionStart","selectionEnd","select","execCommand","attributes","createElement","field","parentNode","removeChild","pattern","parent","querySelector","show","elements","style","display","hide","replace","element1","element2","replaceChild","rewrite","txHash64","isTxSourceLegit","containsSignature","onlyInFirstArray","array1","array2","y","mergeSignatures","newSignatures","txSigs","signature","fromPublicKey","verify","decoratedSignature","Constructor","xdr","DecoratedSignature","hint","signatureHint","makeDecorated","alreadyOnchain","message","getSignatures","callerLimit","Math","min","callAnswer","breaker","nextRecord","recordTriggerBreak","recordPassTest","loopWithBreakpoints","splitAt","tailRecords","loop","tester","recordHasMemo","isLegitSharedTransaction","legitSources","decodeTransactionRequest","ledger_attr","listSignersKeys","txRecords","lastLedger","transactionHasBeenPushed","toEnvelope","toXDR"],"mappings":"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","file":"multisig.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"multisig\"] = factory();\n\telse\n\t\troot[\"multisig\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","'use_strict'\n\nconst env = require('@cosmic-plus/jsutils/env')\n\nif (env.isBrowser) {\n  if (StellarSdk === undefined) throw new Error('Missing dependency: StellarSdk')\n  else module.exports = StellarSdk\n} else {\n  module.exports = env.nodeRequire('stellar-sdk')\n}\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Contains functions that probe the blockchain or federation servers to collect\n * datas.\n *\n * Note: this is copied from js-cosmic-lib and I didnt cleaned it up yet\n *\n * @private\n * @exports resolve\n */\nconst resolve = exports\n\nconst helpers = require('@cosmic-plus/jsutils/misc')\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\n/**\n *\n */\nresolve.server = function (conf, network = conf.network, server = conf.server) {\n  const passphrase = networkPassphrase(network)\n  if (!passphrase) throw new Error('No network selected.')\n  return getServer(passphrase, server)\n}\n\n/**\n * Select the network to be used by `StellarSdk` as being `c` current\n * network.\n */\nresolve.network = function (conf, network = conf.network, server = conf.server) {\n  let passphrase = networkPassphrase()\n  const newPassphrase = networkPassphrase(network)\n\n  if (passphrase !== newPassphrase) {\n    console.log('Switch to network: ' + network)\n    StellarSdk.Network.use(new StellarSdk.Network(newPassphrase))\n    passphrase = newPassphrase\n  } else if (!passphrase) {\n    throw new Error('No network selected.')\n  }\n\n  return getServer(passphrase, server)\n}\n\n/**\n * Returns passphrase for `network` or for current network.\n */\nfunction networkPassphrase (network) {\n  if (network) {\n    if (network === 'public') return StellarSdk.Networks.PUBLIC\n    else if (network === 'test') return StellarSdk.Networks.TESTNET\n    else return network\n  } else {\n    const currentNetwork = StellarSdk.Network.current()\n    if (currentNetwork) return currentNetwork.networkPassphrase()\n  }\n}\n\n/**\n * If `url` is given, set it as the default horizon instance for `passphrase`\n * network and returns the corresponding Server object.\n * Else, retrieve the default Server object for `passphrase` network.\n */\nconst serverSaves = {}\nconst networkDefaultServer = {}\nfunction getServer (passphrase, url) {\n  if (url) networkDefaultServer[passphrase] = url\n  else url = networkDefaultServer[passphrase]\n  if (!url) throw new Error('No default server for requested network.')\n\n  if (!serverSaves[url]) serverSaves[url] = new StellarSdk.Server(url)\n  return serverSaves[url]\n}\n\n/// Save defaults horizon nodes.\ngetServer(StellarSdk.Networks.PUBLIC, 'https://horizon.stellar.org')\ngetServer(StellarSdk.Networks.TESTNET, 'https://horizon-testnet.stellar.org')\n\n/**\n * Configure for how much time the resolved addresses are kept in cache,\n * in seconds. The default is set to 5 minutes to avoid resolving to an outdated\n * address.\n *\n * @const\n */\nresolve.accountCacheExpiration = 5 * 60\n\n/**\n * Contains promise of previously fetched accounts.\n *\n * @private\n * @type {Object}\n */\nconst accountCache = {}\n\n/**\n * Cache `promise` resolving to `address`'s account for `accountCacheExpiration`\n * seconds.\n *\n * @private\n * @param {string} address\n * @param {Promise} promise\n */\nasync function cacheAccount (address, promise) {\n  accountCache[address] = promise\n  await helpers.timeout(resolve.accountCacheExpiration * 1000)\n  delete accountCache[address]\n}\n\n/**\n * Return a promise that resolve to `address` account object, as defined in\n * JavaScript Stellar SDK API reference. `address` can be either a Stellar public\n * key or a federated address (account*example.org).\n * Returned results are cached and re-usable.\n *\n * @param {string} address\n * @return {Promise} Resolve to `address` account object\n */\nresolve.address = function (c, address) {\n  if (accountCache[address]) return accountCache[address]\n  const promise = addressResolver(c, address)\n  cacheAccount(address, promise)\n  return promise\n}\n\n/**\n * Helper for the previous resolve.address function.\n * Resolve to an account object for `address`.\n *\n * @private\n * @param {string} address\n */\nasync function addressResolver (c, address) {\n  // if (address.length !== 56 && !address.match(/.*\\*.*\\..*/)) {\n  // throw new Error('Invalid address: ' + helpers.shorter(address))\n  // }\n\n  const account = await StellarSdk.FederationServer.resolve(address)\n  const publicKey = account.account_id\n  if (!publicKey) throw new Error('Invalid response from federation server.')\n  if (!account.memo_type && account.memo !== undefined) delete account.memo\n  if (address !== publicKey) account.address = address\n  const alias = c.aliases && c.aliases[publicKey]\n  if (alias) account.alias = alias\n  return account\n}\n\n/**\n * Return the AccountResponse object for `address` on `network`.\n *\n * @param {CL}\n * @param {string} address A public key or a federated address\n * @param {string} network Either 'test' or 'public'\n * @return {Object} The account response\n */\nresolve.account = async function (c, address, network = c.network) {\n  const server = resolve.server(c, network)\n  const account = await resolve.address(c, address)\n  const publicKey = account.account_id\n  // try {\n  const accountResponse = await server.loadAccount(publicKey)\n  return accountResponse\n  // } catch (error) {\n  // console.error(error)\n  // const short = helpers.shorter(address)\n  // throw new Error(`Empty account: ${short}`)\n  // }\n}\n\nresolve.accountIsEmpty = async function (conf, id) {\n  // const server = resolve.network(conf)\n  // const account = await resolve.address(conf, id)\n  // const caller = server.accounts()\n  // const data = await caller.accountId(account.account_id).call()\n  // console.log(data)\n  return resolve.account(conf, id).then(x => false).catch(x => true)\n}\n\nresolve.transaction = async function (conf, txHash) {\n  const caller = conf.server.transactions()\n  return caller.transaction(txHash).call()\n}\n\n/**\n * Return the signers for the account at `address` on `network`.\n *\n * @param {CL}\n * @param {string} address Either a public key or a federated address\n * @param {string} network Either 'test' or 'public'\n * @return {Object} The signers object from the account response\n */\nresolve.accountSigners = async function (c, address) {\n  const account = await resolve.account(c, address)\n  return account.signers\n}\n\nresolve.signersTable = async function (conf, ...addresses) {\n  const obj = {}\n\n  for (let index in addresses) {\n    const account = await resolve.account(conf, addresses[index])\n    if (!obj[account.id]) obj[account.id] = account.signers\n  }\n\n  return obj\n}\n\nresolve.signersList = async function (conf, ...addresses) {\n  const array = []\n\n  for (let index in addresses) {\n    const account = await resolve.account(conf, addresses[index])\n    account.signers.forEach(entry => {\n      if (!array.find(a => a.key === entry.key)) array.push(entry.key)\n    })\n  }\n\n  return array\n}\n\nresolve.txSources = function (conf, transaction) {\n  const extra = useExtra(transaction)\n  if (extra.sources) return extra.sources\n\n  const array = [ transaction.source ]\n\n  for (let index in transaction.operations) {\n    const source = transaction.operations[index].source\n    if (source && !array.find(a => a === source)) array.push(source)\n  }\n\n  extra.sources = array\n  return array\n}\n\nresolve.txSignersList = async function (conf, transaction) {\n  const extra = useExtra(transaction)\n  if (!extra.signers) extra.signers = getTxSignersList(conf, transaction)\n  return extra.signers\n}\n\nasync function getTxSignersList (conf, transaction) {\n  const sources = resolve.txSources(conf, transaction)\n  return resolve.signersList(conf, ...sources)\n}\n\nconst extraField = 'extra_ocmultisig'\nfunction useExtra (obj) {\n  if (!obj[extraField]) obj[extraField] = {}\n  return obj[extraField]\n}\n","'use_strict'\n/**\n * Methods to detect in which environment we're running.\n *\n * @exports env\n */\nconst env = exports\n\n/**\n * `true` if we are in a browser environment, `false` otherwise.\n */\nenv.isBrowser = new Function('try { return this === window } catch (e) { return false }')()\n\n/**\n * `true` if we are in a node.js environment, `false` otherwise.\n */\nenv.isNode = new Function('try { return this === global } catch (e) { return false }')()\n\n\n/**\n * A require that only have effect in Node.js and that is invisible to web\n * application packagers.\n */ \n\nenv.nodeRequire = function (module) {\n  if (env.isNode) return stealth_require(module)\n}\n\n/**\n * A require that is invisible to web application packagers.\n */\nconst stealth_require = env.isNode && eval('require')\n","'use_strict'\n\nconst env = require('@cosmic-plus/jsutils/env')\n\nif (env.isBrowser) {\n  const StellarSdk = require('./stellar-sdk')\n  const hash = '0000000000000000000000000000000000000000000000000000000000000000'\n  const memo = new StellarSdk.Memo('hash', hash)\n  module.exports = memo.value.__proto__.constructor\n} else {\n  module.exports = env.nodeRequire('safe-buffer').Buffer\n}\n","/**\n * Publish/read arbitrary data on the blockchain\n *\n * @private\n * @exports messenger\n */\nconst messenger = exports\n\nconst Buffer = require('@cosmic-plus/base/buffer')\nconst loopcall = require('@cosmic-plus/loopcall')\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst resolve = require('./resolve')\n\n/**\n * Sends a message to `destinations` with using `keypair`. The maximum size for\n * `content` is 6400 bytes minus the number of `destinations`. The cost of\n * emission is 1.01 stroop per destination + 1 stroop per 64 bytes to send. When a\n * destination account doesn't exist, it is created on-the-fly which incur an\n * additional cost of 1 lumen each\n *\n * @param {Keypair} keypair The keypair of the sender.\n * @param {string|Array} destinations An address or an array of addresses (either\n *   account IDs or federated addresses).\n * @param {string|Memo} object  (max. 28 bytes for string).\n * @param {string|Buffer} content The message content.\n * @returns {HorizonResponse}\n */\nmessenger.send = async function (conf, keypair, destinations, object, content) {\n  const senderAccount = await resolve.account(conf, keypair.publicKey())\n  const tx = await messenger.encode(conf, senderAccount, destinations, object, content)\n  tx.sign(keypair)\n  const server = resolve.network(conf)\n  return server.submitTransaction(tx)\n}\n\n/**\n * Build a transaction to be signed by `senderAccount` that sends message to\n * `destinations`. The maximum size for `content` is 6400 bytes minus the number\n * of `destinations`. The cost of emission is 1.01 stroop per destination + 1\n * stroop per 64 bytes to send. When a destination account doesn't exist, it is\n * created on-the-fly which incur an additional cost of 1 lumen each.\n *\n * @param {AccountResponse} senderAccount The AccountResponse for sender\n * @param {string|Array} destination The account IDs where to send the message,\n *     or an array of account IDs.\n * @param {string|Memo} object The message object (max. 28 bytes for string).\n * @param {string|Buffer} content The message content.\n * @return {Transaction} A StellarSdk Transaction object.\n */\nmessenger.encode = async function (conf, senderAccount, destinations, object, content) {\n  const txBuilder = new StellarSdk.TransactionBuilder(senderAccount)\n  addMemo(txBuilder, object)\n  await addDestinations(conf, txBuilder, destinations)\n  addContent(txBuilder, content)\n  return txBuilder.build()\n}\n\nfunction addMemo (txBuilder, memo) {\n  if (typeof memo === 'string') {\n    const slicedMemo = Buffer.from(memo).slice(0, 28).toString()\n    memo = new StellarSdk.Memo('text', slicedMemo)\n  }\n  if (memo) txBuilder.addMemo(memo)\n}\n\nasync function addDestinations (conf, txBuilder, destinations) {\n  if (!Array.isArray(destinations)) destinations = [ destinations ]\n\n  for (let index in destinations) {\n    const accountId = destinations[index]\n    const addDestination = await linkToAccount(conf, accountId)\n    txBuilder.addOperation(addDestination)\n  }\n}\n\nasync function linkToAccount (conf, accountId) {\n  if (await resolve.accountIsEmpty(conf, accountId)) {\n    return operation('createAccount', {\n      destination: accountId,\n      startingBalance: '1'\n    })\n  } else {\n    return operation('payment', {\n      destination: accountId,\n      asset: StellarSdk.Asset.native(),\n      amount: '0.0000001'\n    })\n  }\n}\n\nfunction addContent (txBuilder, content) {\n  if (!(content instanceof Buffer)) content = Buffer.from(content)\n  const operationsLeft = 100 - txBuilder.operations.length\n  if (content.length > operationsLeft * 64) {\n    console.log('Warning: message will be truncated.')\n  }\n\n  for (let i = 0; i < operationsLeft; i++) {\n    const chunk = content.slice(i * 64, i * 64 + 64)\n    if (chunk.length === 0) break\n    const storeChunk = operation('manageData', { name: 'Send', value: chunk })\n    txBuilder.addOperation(storeChunk)\n  }\n}\n\nfunction operation (type, params) {\n  return StellarSdk.Operation[type](params)\n}\n\n/**\n * Parse the message object from transaction `txHash`.\n *\n * @param {String} txHash A transaction hash\n * @return {Object} A message object with `sender`, `object`, `date` and\n *     `content` fields.\n */\nmessenger.read = async function (conf, txHash) {\n  const server = resolve.network(conf)\n  const callBuilder = server.transactions().transaction(txHash)\n  const txRecord = await callBuilder.call()\n  return messenger.decode(conf, txRecord)\n}\n\nmessenger.decode = function (conf, txRecord) {\n  const transaction = new StellarSdk.Transaction(txRecord.envelope_xdr)\n  if (transaction.operations.length < 2) return null\n  return {\n    sender: txRecord.source_account,\n    object: extractObject(transaction.memo),\n    date: txRecord.created_at,\n    content: extractContent(transaction),\n  }\n}\n\nfunction extractObject (memo) {\n  if (memo._type === 'hash' || memo._type === 'return') {\n    return memo._value.toString('hex')\n  } else {\n    return memo._value.toString('utf8')\n  }\n}\n\nfunction extractContent (transaction) {\n  const chunks = []\n  transaction.operations.forEach(operation => {\n    if (isContentChunk(operation)) chunks.push(operation.value)\n  })\n  return Buffer.concat(chunks)\n}\n\nfunction isContentChunk (operation) {\n  return (operation.type === 'manageData' && operation.name === 'Send')\n}\n\nmessenger.list = async function (conf, accountId, options) {\n  const records = await messenger.listRaw(conf, accountId, options)\n  return records.map(record => messenger.decode(conf, record))\n}\n\nmessenger.listRaw = async function (conf, accountId, options = {}) {\n  if (await resolve.accountIsEmpty(conf, accountId)) return []\n  const server = resolve.server(conf)\n  const callBuilder = server.transactions().forAccount(accountId)\n  if (options.cursor) callBuilder.cursor(options.cursor)\n  if (options.order) callBuilder.order(options.order)\n  options.filter = makeMessageFilter(options.filter)\n  return loopcall(callBuilder, options)\n}\n\nfunction makeMessageFilter (baseFilter) {\n  return function (record) {\n    if (record.operation_count < 2) return false\n    if (baseFilter) return baseFilter(record)\n    else return true\n  }\n}\n\nmessenger.find = async function (conf, publicKey, func) {\n  const records = await messenger.list(conf, publicKey, { limit: 1, filter: func })\n  if (records[0]) return records[0]\n}\n","/**\n * Environment detection and library loading.\n */\n\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\n/**\n * Automatically pass library network configuration to underlying methods.\n */\n\n// baseConf may be modified only by multisig.useNetwork().\nconst baseConf = {}\n\nfunction prepare (module) {\n  const layer = {}\n  for (let name in module) {\n    if (typeof module[name] !== 'function') continue\n    layer[name] = passConfig(module[name])\n  }\n\n  return Object.assign({}, module, layer)\n}\n\nfunction passConfig (func) {\n  return function (...params) {\n    // Make a one-time configuration object and pass it to the underlying\n    // function along with user parameters.\n    const conf = Object.create(baseConf)\n    return func(conf, ...params)\n  }\n}\n\nmodule.exports = prepare(require('./multisig'))\n","/**\n * @exports multisig\n */\nconst multisig = exports\n\nconst axios = require('@cosmic-plus/base/axios')\nconst Buffer = require('@cosmic-plus/base/buffer')\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst resolve = require('./resolve')\nconst shareSignatures = require('./share-signatures')\nconst shareTransactions = require('./share-transactions')\n\nmultisig.isEnabled = async function (conf, user) {\n  conf.multisig = await multisig.config(conf, user)\n  return !!conf.multisig\n}\n\nmultisig.config = async function (conf, user) {\n  const account = await getAccount(conf, user)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (conf.multisig.id) return conf.multisig\n  else return null\n}\n\nmultisig.enable = async function (conf, keypair, options) {\n  const account = await getAccount(conf, keypair)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (conf.multisig.id) {\n    console.log('On-chain signature sharing is already enabled on this account.')\n    return null\n  }\n\n  const transaction = makeSetupTx(conf, account, options)\n  return sendOrReturn(conf, transaction, keypair)\n}\n\nmultisig.setup = async function (conf, keypair, options) {\n  const account = await getAccount(conf, keypair)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error('On-chain signature sharing in not enabled on this account.')\n  }\n\n  const transaction = makeSetupTx(conf, account, options)\n  return sendOrReturn(conf, transaction, keypair)\n}\n\nmultisig.disable = async function (conf, keypair) {\n  const account = await getAccount(conf, keypair)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    console.log('On-chain signature sharing is already disabled on this account.')\n    return null\n  }\n\n  const transaction = makeDisableTx(conf, account)\n  return sendOrReturn(conf, transaction, keypair)\n}\n\n/**\n *\n * @parameter {Transaction|XDR} transaction A signed transaction\n * @parameter {Keypair} [keypair]\n * @returns {Transaction|HorizonResponse}\n */\nmultisig.pushSignatures = async function (conf, transaction, keypair) {\n  const account = await resolve.account(conf, transaction.source)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error('On-chain signature sharing in not enabled on this account.')\n  }\n\n  saveNetwork()\n  const senderId = keypair.publicKey()\n  await checkAccountExist(conf.multisig, senderId)\n  const pushTx = await shareSignatures.makePushTx(conf, transaction, senderId)\n  const horizonResponse = sendOrReturn(conf.multisig, pushTx, keypair)\n  horizonResponse.finally(restoreNetwork)\n  return horizonResponse\n}\n\nmultisig.pullSignatures = async function (conf, transaction) {\n  const account = await getAccount(conf, transaction.source)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error('On-chain signature sharing in not enabled on this account.')\n  }\n\n  saveNetwork()\n  const bool = await shareSignatures.pull(conf, transaction)\n  restoreNetwork()\n  return bool\n}\n\nmultisig.pushTransaction = async function (conf, transaction, keypair) {\n  const account = await getAccount(conf, keypair)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error('On-chain transaction sharing is not enabled on this account.')\n  }\n\n  const senderId = keypair.publicKey()\n  const legitSources = account.signers.map(signer => signer.key)\n  if (!legitSources.find(source => source === senderId)) {\n    throw new Error('Not a co-signer for transaction source account: ' + senderId)\n  }\n\n  saveNetwork()\n  await checkAccountExist(conf.multisig, senderId)\n  /// Shadow transaction signatures without modifying the underlying object.\n  transaction = Object.create(transaction)\n  transaction.signatures = []\n  const pushTx = await shareTransactions.makePushTx(conf, transaction, senderId)\n  const horizonResponse = sendOrReturn(conf.multisig, pushTx, keypair)\n  horizonResponse.finally(restoreNetwork)\n  return horizonResponse\n}\n\nmultisig.listTransactions = async function (conf, user, ledger) {\n  const account = await getAccount(conf, user)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error('On-chain transaction sharing is not enabled on this account.')\n  }\n\n  return shareTransactions.list(conf, account, ledger)\n}\n\nmultisig.useNetwork = function (conf, network, server) {\n  return resolve.network(conf.__proto__, network, server)\n}\n\n/** ***************************** Routines *************************************/\n\n/**\n * Returns the transaction that enable signature sharing for `account`.\n */\nfunction makeSetupTx (conf, account, options = {}) {\n  const multisigId = options.id || conf.multisig.id || StellarSdk.Keypair.random().publicKey()\n  const txBuilder = new StellarSdk.TransactionBuilder(account)\n  txBuilder.addMemo(new StellarSdk.Memo('text', 'Setup signature sharing'))\n\n  let isEmpty = true\n  const setData = function (name, value) {\n    txBuilder.addOperation(StellarSdk.Operation.manageData({ name: name, value: value }))\n    isEmpty = false\n  }\n\n  if (multisigId !== conf.multisig.id) setData('config:multisig', multisigId)\n\n  if (!options.network) options.network = 'test'\n  if ((options.network || conf.multisig.network) &&\n    options.network !== conf.multisig.network\n  ) {\n    setData('config:multisig:network', options.network)\n  }\n\n  if ((options.server || conf.multisig.server) &&\n    options.server !== conf.multisig.server) {\n    setData('config:multisig:server', options.server)\n  }\n\n  if (isEmpty) return null\n  else return txBuilder.build()\n}\n\n/**\n * Returns the transaction that disable signature sharing for `account`.\n */\nfunction makeDisableTx (conf, account) {\n  const txBuilder = new StellarSdk.TransactionBuilder(account)\n  txBuilder.addMemo(new StellarSdk.Memo('text', 'Disable signature sharing'))\n\n  const setData = function (name, value) {\n    txBuilder.addOperation(StellarSdk.Operation.manageData({ name: name, value: value }))\n  }\n\n  setData('config:multisig', null)\n  if (account.data_attr['multisig:network']) {\n    setData('config:multisig:network', null)\n  }\n  if (account.data_attr['multisig:server']) {\n    setData('config:multisig:server', null)\n  }\n\n  return txBuilder.build()\n}\n\n/** ************************ Generic helpers ***********************************/\n\n/**\n * Returns the multisig configuration.\n */\nfunction parseMultisigConfig (account) {\n  return {\n    id: readAttr(account.data_attr['config:multisig']),\n    network: readAttr(account.data_attr['config:multisig:network']) || 'test',\n    server: readAttr(account.data_attr['config:multisig:server'])\n  }\n}\nfunction readAttr (str64) {\n  if (str64) return Buffer.from(str64, 'base64').toString('utf8')\n}\n\n/**\n * If `user` is already an AccountResponse, return it. Else resolve it.\n */\nasync function getAccount (conf, user) {\n  if (isAccountResponse(user)) return user\n  else if (user instanceof StellarSdk.Keypair) user = user.publicKey()\n  else if (user instanceof StellarSdk.Account) user = user._accountId\n  else if (typeof user !== 'string') throw new TypeError('Invalid user parameter.')\n\n  const account = await resolve.account(conf, user)\n  return account\n}\nfunction isAccountResponse (obj) {\n  return obj && obj._baseAccount && obj._baseAccount instanceof StellarSdk.Account\n}\n\n/**\n * Create `accoundId` if it is empty & on test network.\n */\nasync function checkAccountExist (conf, accountId) {\n  if (await resolve.accountIsEmpty(conf, accountId)) {\n    if (conf.network === 'test') {\n      return axios('https://friendbot.stellar.org/?addr=' + accountId)\n    } else {\n      throw new Error(\"Account doesn't exist on the requested network: \" + conf.network)\n    }\n  }\n}\n\n/**\n * If `value` is a transaction, sign it with `keypair` and send it to horizon.\n * Else, return `value`.\n */\nasync function sendOrReturn (conf, value, keypair) {\n  if (value instanceof StellarSdk.Transaction) {\n    const server = resolve.network(conf)\n    value.sign(keypair)\n    const responsePromise = server.submitTransaction(value)\n    responsePromise.catch(error => console.error(error.response))\n    return responsePromise\n  } else {\n    return value\n  }\n}\n\n/**\n * Save/Restore Network\n */\nlet networkBackup\n\nfunction saveNetwork () {\n  networkBackup = StellarSdk.Network.current()\n}\n\nfunction restoreNetwork () {\n  if (StellarSdk.Network.current() !== networkBackup) {\n    console.log('Restore network')\n    StellarSdk.Network.use(networkBackup)\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","'use_stict'\n\nconst env = require('@cosmic-plus/jsutils/env')\n\nif (env.isBrowser) {\n  module.exports = require('./stellar-sdk').axios\n} else {\n  module.exports = env.nodeRequire('axios')\n}\n","'use strict'\n/**\n * Various independent helpers.\n *\n * @exports misc\n */\nconst misc = exports\n\nconst html = require('./html')\n\n/**\n * Return a function that will execute `thunk` when called, and return the\n * result of its execution as a Promise. Handle async and regular functions\n * equally. Any error will be carried to .catch.\n *\n * @param {function} thunk A parameterless function\n * @return {function}\n */\nmisc.delay = function (thunk) {\n  let firstCall = true\n  let memoized\n  return function () {\n    if (firstCall) {\n      firstCall = false\n      memoized = new Promise((resolve) => resolve(thunk()))\n    }\n    return memoized\n  }\n}\n\n/**\n * Return a promise that takes `x` seconds to resolve\n *\n * @param {number} x Time to wait\n * @return {Promise}\n */\nmisc.timeout = function (x) {\n  return new Promise(function (resolve) { setTimeout(resolve, x) })\n}\n\n/**\n * Return `string` with first letter capitalized.\n *\n * @param {string} string\n * @return {string}\n */\nmisc.capitalize = function (string) {\n  return string.substr(0, 1).toUpperCase() + string.slice(1)\n}\n\n/**\n * Return shortified `string` if longer than 30 characters; else return\n * `string`.\n *\n * @param {string}\n * @return {string}\n */\nmisc.shorter = function (string) {\n  if (string.length > 50) {\n    return string.substr(0, 5) + '...' + string.substr(-5)\n  } else {\n    return string\n  }\n}\n\n/**\n * Return a function that copy `string` into user clipboard.\n *\n * @private\n * @param {string} string\n * @return {function}\n */\nmisc.copy = function (string) {\n  const textBox = html.create('textarea', {}, string)\n  html.append(html.grab('body'), textBox)\n  html.copyContent(textBox)\n  html.destroy(textBox)\n}\n\n/**\n * Creates and returns an extra field (`extra_ticot`) for **obj**. This allow to\n * append additional information to objects without mess.\n * \n * @param {Object}\n * @return {Object} The extra field object.\n */\nmisc.useExtra = function (obj) {\n  if (!obj[extraField]) obj[extraField] = {}\n  return obj[extraField]\n}\nconst extraField = '_extra_ticot'\n","'use_strict'\n/**\n * Utilities to manipulate HTML element from javascript.\n *\n * Those may not be feature complete, as this library purpose is to ease\n * cosmic-lib and Stellar Authenticator development, rather than provide a\n * generic-case toolbox.\n *\n * @exports html\n */\nconst html = exports\n\n/**\n * Append `childs` as the end of `element`.\n *\n * @param {HTMLElement} element\n * @param {...(HTMLElement|String|Error)} childs\n */\nhtml.append = function (element, ...childs) {\n  childs.forEach(child => {\n    if (typeof child === 'string' || child instanceof Error) {\n      element.appendChild(document.createTextNode(child))\n    } else {\n      element.appendChild(child)\n    }\n  })\n}\n\n/**\n * Add `newClass` as an additionnal class for `element`.\n *\n * @param {HTMLElement} element\n * @param {string} newClass\n * */\nhtml.appendClass = function (element, newClass) {\n  element.className += ' ' + newClass\n}\n\n/**\n * Remove everything inside `element`.\n *\n * @param {HTMLElement} element\n * */\nhtml.clear = function (element) {\n  element.innerHTML = ''\n}\n\n/**\n * Copy text inside `element`. `element` should be a textbox like textarea or\n * text input.\n *\n * @param {HTMLElement} element\n * @param\n * */\nhtml.copyContent = function (element) {\n  /// Don't copy complete box content twice / when user made a selection.\n  if (element.selectionStart !== element.selectionEnd) return\n\n  element.select()\n  return document.execCommand('copy')\n}\n\n/**\n * Return a newly created HTML element whose tag is `name`, attributes\n * `attributes` and childs `childs`.\n *\n * @param {string} name\n * @param {object|string} [attributes|className|ID]\n * @param {...HTMLElement} [childs]\n */\nhtml.create = function (name, attributes, ...childs) {\n  if (!name) throw new Error('Missing tag name')\n\n  const element = document.createElement(name)\n\n  if (typeof attributes === 'string') {\n    switch (attributes.substr(0, 1)) {\n      case '#': element.id = attributes.substr(1); break\n      case '.': element.className = attributes.substr(1); break\n      default: throw new Error('Unhandled attribute')\n    }\n  } else {\n    let field; for (field in attributes) {\n      element[field] = attributes[field]\n    }\n  }\n\n  if (childs.length > 0) html.append(element, ...childs)\n\n  return element\n}\n\n/**\n * Destroy `element`.\n *\n * @param {HTMLElement} element\n * */\nhtml.destroy = function (element) {\n  try {\n    element.innerHTML = ''\n    if (element.parentNode) element.parentNode.removeChild(element)\n  } catch (error) { console.error(error) }\n}\n\n/**\n * Return the first element matching `pattern`.\n * If `name` starts with `#`, it will match against IDs.\n * If `name` starts with `.`, it will match against classes.\n * If `name` is a plain word, it will match against tags.\n * If `parent` is given, it will look recursively in `parent` childs.\n *\n * @param {string} pattern\n * @param {HTMLElement} [parent=document]\n * */\nhtml.grab = function (pattern, parent = document) {\n  return parent.querySelector(pattern)\n}\n\n/**\n * Set the `style.display` property of `...elements` to `block`.\n *\n * @param {...HTMLElement} elements\n */\nhtml.show = function (...elements) {\n  elements.forEach(element => element.style.display = 'block')\n}\n\n/** Set the `style.display` property of `...elements` to `none`.\n *\n * @param {...HTMLElement} elements\n */\nhtml.hide = function (...elements) {\n  elements.forEach(element => element.style.display = 'none')\n}\n\n/**\n * Replace `element1` by `element2`.\n * \n * @param {HTMLElement} element1 The element to replace.\n * @param {HTMLElement} element2 The element to put in place of `element1`.\n */\nhtml.replace = function (element1, element2) {\n  element1.parentNode.replaceChild(element2, element1)\n}\n\n/**\n * Set the content of element to ...childs. Any previous content will be erased.\n *\n * @param {HTMLElement} element\n * @param {...HTMLElement} childs\n */\nhtml.rewrite = function (element, ...childs) {\n  html.clear(element)\n  html.append(element, ...childs)\n}\n","'use_strict'\nconst shareSignatures = exports\n\nconst Buffer = require('@cosmic-plus/base/buffer')\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst messenger = require('./messenger')\nconst resolve = require('./resolve')\n\n/**\n * Returns a sharing transaction that will push any new signature from\n * `transaction`. The sharing transactions should be signed by `accountId` and\n * sent to `conf.multisig.network`.\n */\nshareSignatures.makePushTx = async function (conf, transaction, senderId) {\n  const signatures = transaction.signatures.map(entry => entry.signature())\n  if (!transaction.signatures.length) return null\n\n  /// Push only signatures that have not been uploaded yet.\n  const txHash = transaction.hash()\n  const signers = await resolve.txSignersList(conf, transaction)\n  const alreadyOnchain = await getSignatures(conf, txHash, signers)\n  const newSignatures = onlyInFirstArray(signatures, alreadyOnchain)\n  if (!newSignatures.length) return null\n\n  /// Make the transaction that puts signatures on-chain.\n  const sender = await resolve.account(conf.multisig, senderId)\n  const destination = conf.multisig.id\n  const object = new StellarSdk.Memo('return', txHash)\n  const message = Buffer.concat(signatures)\n  return messenger.encode(conf.multisig, sender, destination, object, message)\n}\n\nfunction onlyInFirstArray (array1, array2) {\n  return array1.filter(x => !array2.find(y => x.toString() === y.toString()))\n}\n\n/**\n * Pull signatures for `transaction` published on `conf.multisig.network`.\n */\nshareSignatures.pull = async function (conf, transaction) {\n  const txHash = transaction.hash()\n  const signers = await resolve.txSignersList(conf, transaction)\n  const signatures = await getSignatures(conf, txHash, signers)\n  return mergeSignatures(transaction, signatures, txHash, signers)\n}\n\n/**\n * Returns an array of the signatures shared on-chain for `txHash`.\n */\nasync function getSignatures (conf, txHash, signers) {\n  const txHash64 = txHash.toString('base64')\n\n  if (await resolve.accountIsEmpty(conf.multisig, conf.multisig.id)) {\n    return []\n  }\n\n  /// Get transactions that embed shared signatures for transaction.\n  const records = await messenger.listRaw(conf.multisig, conf.multisig.id, {\n    filter: tx => tx.memo_type === 'return' && tx.memo === txHash64\n  })\n\n  const signatures = []\n  for (let index in records) {\n    const txRecord = records[index]\n    const transaction = new StellarSdk.Transaction(txRecord.envelope_xdr)\n    if (!isTxSourceLegit(transaction, signers)) continue\n    transaction.operations.forEach(operation => {\n      if (containsSignature(operation)) signatures.push(operation.value)\n    })\n  }\n\n  return signatures\n}\n\nfunction isTxSourceLegit (transaction, signers) {\n  return signers.find(signer => signer === transaction.source)\n}\n\nfunction containsSignature (operation) {\n  return operation.type === 'manageData' && operation.name === 'Send'\n}\n\n/**\n * Test `signatures` against `signers` and add new legit ones to `transaction`.\n */\nfunction mergeSignatures (transaction, signatures, txHash, signers) {\n  let newSignatures = false\n  const txSigs = transaction.signatures.map(x => x.signature().toString())\n  const keys = signers.map(x => StellarSdk.Keypair.fromPublicKey(x))\n\n  for (let index in signatures) {\n    const signature = signatures[index]\n    if (txSigs.find(x => x === signature.toString())) continue\n    const signer = keys.find(x => x.verify(txHash, signature))\n    if (!signer) continue\n    const decoratedSignature = makeDecorated(signer, signature)\n    transaction.signatures.push(decoratedSignature)\n    txSigs.push(signature.toString())\n    newSignatures = true\n  }\n\n  return newSignatures\n}\n\nfunction makeDecorated (signer, signature) {\n  const Constructor = StellarSdk.xdr.DecoratedSignature\n  return new Constructor({ hint: signer.signatureHint(), signature: signature })\n}\n","'use_strict'\n/**\n * Concatenate records from `callBuilder` call response that pass `options.filter`\n * until `options.limit` is reached, `options.breaker` returns a true value or\n * no more are available.\n * \n * **Warning**: Please be aware that unlimited loopcall can iterate over the\n * full set of data available on a network, sending thousands of request to the\n * API. Please use it wisely :)\n * \n * @example\n * const callBuilder = server.transactions().forAccount('GDE...YBX')\n * const allTransactions = await loopcall(callBuilder)\n * const transactionsWithoutMemo = await loopcall(callBuilder, {\n *   filter: (tx) => !tx.memo\n * })\n * const thisYearTransactions = await loopcall(callBuilder, {\n *   breaker: (tx) => tx.created_at.substr(0,4) < 2018\n * })\n * \n * @example\n * const callBuilder = server.operations().order('asc')\n * const the2000firstOperations = await loopcall(callBuilder, { limit: 2000 })\n * const the20firstAccountCreations = await loopcall(callBuilder, {\n *   limit: 20,\n *   filter: (op) => op.type === 'create_account'\n * })\n * \n * @param {CallBuilder} callBuilder A CallBuilder object\n * @param {Object} [options]\n * @param {integer} [options.limit] The maximum number of record to return\n * @param {function} [options.filter] A function that accept a record argument. It\n *   is called with each fetched record. If it returns a true value, the record\n *   is added to returned records, else it is discarded.\n * @param {function} [options.breaker] A function that accept a record argument.\n *   It is called with each fetched record. If it returns a true value, the loop\n *   ends and the array of the filtered records is returned.\n * @returns {Array} The fetched records\n */\nmodule.exports = async function (callBuilder, options = {}) {\n  const callerLimit = options.limit ? Math.min(options.limit, 200) : 200\n  const callAnswer = await callBuilder.limit(callerLimit).call()\n\n  if (options.filter || options.breaker) {\n    return loopWithBreakpoints(callAnswer, options)\n  } else {\n    return loop(callAnswer, options.limit)\n  }\n}\n\n/**\n * Concatenate records from `callAnswer` pages until `limit` is reached or no\n * more are available.\n * \n * @param {Object} callAnswer A resolved CallBuilder.call() object\n * @param {integer} limit The maximum number of record to return\n * @returns {Array} The fetched records\n */\nasync function loop (callAnswer, limit) {\n  let records = []\n\n  while (callAnswer.records.length) {\n    if (limit) {\n      const length = records.length + callAnswer.records.length\n      if (limit === length) {\n        return records.concat(callAnswer.records)\n      } else if (length > limit) {\n        const splitAt = limit - records.length\n        const tailRecords = callAnswer.records.slice(0, splitAt)\n        return records.concat(tailRecords)\n      }\n    }\n    records = records.concat(callAnswer.records)\n    callAnswer = await callAnswer.next()\n  }\n  \n  return records\n}\n\n/**\n * Concatenate records from `callAnswer` pages that pass `options.filter` until\n * `options.limit` is reached, `options.breaker` returns a true value or no more\n * are available.\n * \n * @param {Object} callAnswer A resolved CallBuilder.call() object\n * @param {Object} [options]\n * @param {integer} [options.limit] The maximum number of record to return\n * @param {function} [options.filter] A function that accept a record argument. It\n *   is called with each fetched record. If it returns a true value, the record\n *   is added to returned records, else it is discarded.\n * @param {function} [options.breaker] A function that accept a record argument.\n *   It is called with each fetched record. If it returns a true value, the loop\n *   ends and the array of the filtered records is returned.\n * @returns {Array} The fetched records\n */\nasync function loopWithBreakpoints (callAnswer, options) {\n  const records = []\n  \n  while (callAnswer.records.length) {\n    for (let index in callAnswer.records) {\n      if (options.limit && records.length === options.limit) return records\n      const nextRecord = callAnswer.records[index]\n      if (options.breaker) {\n        const recordTriggerBreak = await options.breaker(nextRecord)\n        if (recordTriggerBreak) return records\n      }\n      if (options.filter) {\n        const recordPassTest = await options.filter(nextRecord)\n        if (!recordPassTest) continue\n      }\n      records.push(nextRecord)\n    }\n    callAnswer = await callAnswer.next()\n  }\n  \n  return records\n}\n","'use_strict'\nconst shareTransactions = exports\n\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst messenger = require('./messenger')\nconst resolve = require('./resolve')\n\nshareTransactions.list = async function (conf, account, lastLedger = 0) {\n  if (typeof lastLedger !== 'number') lastLedger = +lastLedger\n\n  const options = {}\n  const legitSources = listSignersKeys(account)\n  options.filter = (record) => isLegitSharedTransaction(record, legitSources)\n  if (lastLedger) options.breaker = (record) => record.ledger_attr <= lastLedger\n  const txRecords = await messenger.listRaw(conf.multisig, conf.multisig.id, options)\n\n  return txRecords.map(decodeTransactionRequest)\n}\n\nfunction isLegitSharedTransaction (record, legitSources) {\n  if (record.memo_type !== 'hash') return false\n  return legitSources.find(accountId => accountId === record.source_account)\n}\n\nfunction decodeTransactionRequest (record) {\n  const message = messenger.decode(null, record)\n  message.ledger = record.ledger_attr\n  message.xdr = message.content.toString('base64')\n  delete message.content\n  delete message.object\n  return message\n}\n\nshareTransactions.makePushTx = async function (conf, transaction, senderId) {\n  const txHash = transaction.hash()\n  if (await transactionHasBeenPushed(conf, txHash)) {\n    console.log('Transaction have already been pushed')\n    return null\n  }\n\n  /// Make the transaction that puts transaction on-chain.\n  const sender = await resolve.account(conf.multisig, senderId)\n  const destination = conf.multisig.id\n  const object = new StellarSdk.Memo('hash', txHash)\n  const content = transaction.toEnvelope().toXDR()\n  return messenger.encode(conf.multisig, sender, destination, object, content)\n}\n\nasync function transactionHasBeenPushed (conf, txHash) {\n  const txHash64 = txHash.toString('base64')\n  const tester = (record) => recordHasMemo(record, 'hash', txHash64)\n  const record = await messenger.find(conf.multisig, conf.multisig.id, tester)\n  return !!record\n}\n\nfunction recordHasMemo (record, type, value) {\n  return record.memo_type === type && record.memo === value\n}\n\nfunction listSignersKeys (account) {\n  return account.signers.map(signer => signer.key)\n}\n"],"sourceRoot":""}