{"version":3,"sources":["webpack://multisig/webpack/universalModuleDefinition","webpack://multisig/webpack/bootstrap","webpack://multisig/./node_modules/@cosmic-plus/base/stellar-sdk.js","webpack://multisig/./node_modules/@cosmic-plus/jsutils/env.js","webpack://multisig/./node_modules/@babel/runtime/regenerator/index.js","webpack://multisig/./src/resolve.js","webpack://multisig/./node_modules/@cosmic-plus/base/buffer.js","webpack://multisig/./src/messenger.js","webpack://multisig/./src/index.js","webpack://multisig/./src/multisig.js","webpack://multisig/./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime-module.js","webpack://multisig/./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","webpack://multisig/./node_modules/@cosmic-plus/base/axios.js","webpack://multisig/./node_modules/@cosmic-plus/jsutils/misc.js","webpack://multisig/./node_modules/@cosmic-plus/jsutils/html.js","webpack://multisig/./src/share-signatures.js","webpack://multisig/./node_modules/@cosmic-plus/loopcall/loopcall.js","webpack://multisig/./src/share-transactions.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","env","isBrowser","undefined","StellarSdk","console","error","nodeRequire","Function","isNode","global","stealth_require","eval","resolve","helpers","require","networkPassphrase","network","Networks","PUBLIC","TESTNET","currentNetwork","Network","current","server","conf","arguments","length","passphrase","Error","getServer","newPassphrase","log","use","serverSaves","networkDefaultServer","url","Server","accountCacheExpiration","accountCache","_callee8","address","promise","_regeneratorRuntime","wrap","_context8","prev","next","timeout","stop","this","_callee9","account","publicKey","alias","_context9","FederationServer","sent","account_id","memo_type","memo","aliases","abrupt","getTxSignersList","_callee10","transaction","sources","_context10","txSources","signersList","apply","concat","_toConsumableArray","addressResolver","cacheAccount","_ref","_asyncToGenerator","mark","_callee","accountResponse","_args","_context","loadAccount","_x5","_x6","accountIsEmpty","_ref2","_callee2","id","_context2","then","x","catch","_x7","_x8","_ref3","_callee3","txHash","caller","_context3","transactions","_x9","_x10","accountSigners","_ref4","_callee4","_context4","signers","_x11","_x12","signersTable","_ref5","_callee5","obj","_len","addresses","_key","index","_args5","_context5","Array","t0","keys","t1","done","_x13","_ref6","_callee6","array","_len2","_key2","_args6","_context6","forEach","entry","find","a","push","_x14","extra","useExtra","source","_loop","operations","txSignersList","_ref7","_callee7","_context7","_x15","_x16","extraField","hash","Memo","__proto__","constructor","Buffer","messenger","loopcall","addMemo","txBuilder","slicedMemo","from","slice","toString","addDestinations","destinations","accountId","addDestination","isArray","linkToAccount","addOperation","operation","destination","startingBalance","asset","Asset","native","amount","addContent","content","operationsLeft","chunk","storeChunk","type","params","Operation","makeMessageFilter","baseFilter","record","operation_count","send","keypair","senderAccount","tx","encode","sign","submitTransaction","_x","_x2","_x3","_x4","TransactionBuilder","build","read","callBuilder","txRecord","decode","_x17","Transaction","envelope_xdr","sender","source_account","_type","_value","extractObject","date","created_at","chunks","isContentChunk","extractContent","list","options","records","listRaw","map","_x18","_x19","_x20","forAccount","cursor","order","filter","_x21","_x22","func","limit","_x23","_x24","_x25","baseConf","passConfig","layer","assign","prepare","networkBackup","multisig","axios","shareSignatures","shareTransactions","makeSetupTx","multisigId","Keypair","random","isEmpty","setData","manageData","makeDisableTx","data_attr","parseMultisigConfig","readAttr","str64","getAccount","user","isAccountResponse","Account","_accountId","TypeError","_baseAccount","checkAccountExist","_callee11","_context11","sendOrReturn","_callee12","responsePromise","_context12","response","saveNetwork","restoreNetwork","isEnabled","config","enable","setup","disable","pushSignatures","senderId","pushTx","horizonResponse","makePushTx","finally","pullSignatures","bool","pull","pushTransaction","_ref8","signer","signatures","listTransactions","_ref9","ledger","useNetwork","g","self","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","e","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","result","reverse","pop","Context","reset","skipTempReset","_sent","delegate","method","tryEntries","resetTryEntry","charAt","isNaN","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","err","previousPromise","callInvokeWithMethodAndArg","Promise","reject","invoke","unwrapped","return","info","pushTryEntry","locs","iteratorMethod","misc","html","delay","thunk","memoized","firstCall","setTimeout","capitalize","string","substr","toUpperCase","shorter","copy","textBox","append","grab","copyContent","destroy","setHiddenProperty","writable","deprecated","before","after","document","element","childs","child","appendChild","createTextNode","appendClass","newClass","className","clear","innerHTML","selectionStart","selectionEnd","select","getSelection","range","createRange","selectNode","removeAllRanges","addRange","execCommand","attributes","createElement","field","parentNode","removeChild","pattern","parent","querySelector","show","elements","style","display","hide","replace","element1","element2","replaceChild","rewrite","addStyles","styles","styleNode","headNode","onlyInFirstArray","array1","array2","y","getSignatures","txHash64","isTxSourceLegit","containsSignature","mergeSignatures","newSignatures","txSigs","signature","fromPublicKey","verify","decoratedSignature","Constructor","xdr","DecoratedSignature","hint","signatureHint","makeDecorated","alreadyOnchain","message","callerLimit","Math","min","callAnswer","breaker","nextRecord","recordTriggerBreak","recordPassTest","loopWithBreakpoints","splitAt","tailRecords","loop","isLegitSharedTransaction","legitSources","decodeTransactionRequest","ledger_attr","transactionHasBeenPushed","tester","recordHasMemo","listSignersKeys","lastLedger","txRecords","toEnvelope","toXDR"],"mappings":"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","file":"multisig.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"multisig\"] = factory();\n\telse\n\t\troot[\"multisig\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","'use_strict'\n\nconst env = require('@cosmic-plus/jsutils/env')\n\nif (env.isBrowser) {\n  if (StellarSdk === undefined) console.error('Missing dependency: StellarSdk')\n  else module.exports = StellarSdk\n} else {\n  module.exports = env.nodeRequire('stellar-sdk')\n}\n","'use_strict'\n/**\n * Methods to detect in which environment we're running.\n *\n * @exports env\n */\nconst env = exports\n\n/**\n * `true` if we are in a browser environment, `false` otherwise.\n */\nenv.isBrowser = new Function('try { return this === window } catch (e) { return false }')()\n\n/**\n * `true` if we are in a node.js environment, `false` otherwise.\n */\nenv.isNode = new Function('try { return this === global } catch (e) { return false }')()\n\n/**\n * The window object, or `undefined`.\n */\nenv.window = new Function('try { return window } catch (e) { return undefined }')()\n\n/**\n * The global objet, or `undefined`.\n */\nenv.global = new Function('try { return global } catch (e) { return undefined }')()\n\n/**\n * A require that only have effect in Node.js and that is invisible package\n * bundlers.\n */\nenv.nodeRequire = () => {}\nif (env.isNode) {\n  const stealth_require = eval('require')\n  env.nodeRequire = (module) => stealth_require(module)\n}\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Contains functions that probe the blockchain or federation servers to collect\n * datas.\n *\n * Note: this is copied from js-cosmic-lib and I didnt cleaned it up yet\n *\n * @private\n * @exports resolve\n */\nconst resolve = exports\n\nconst helpers = require('@cosmic-plus/jsutils/misc')\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\n/**\n *\n */\nresolve.server = function (conf, network = conf.network, server = conf.server) {\n  const passphrase = networkPassphrase(network)\n  if (!passphrase) throw new Error('No network selected.')\n  return getServer(passphrase, server)\n}\n\n/**\n * Select the network to be used by `StellarSdk` as being `c` current\n * network.\n */\nresolve.network = function (conf, network = conf.network, server = conf.server) {\n  let passphrase = networkPassphrase()\n  const newPassphrase = networkPassphrase(network)\n\n  if (passphrase !== newPassphrase) {\n    console.log('Switch to network: ' + network)\n    StellarSdk.Network.use(new StellarSdk.Network(newPassphrase))\n    passphrase = newPassphrase\n  } else if (!passphrase) {\n    throw new Error('No network selected.')\n  }\n\n  return getServer(passphrase, server)\n}\n\n/**\n * Returns passphrase for `network` or for current network.\n */\nfunction networkPassphrase (network) {\n  if (network) {\n    if (network === 'public') return StellarSdk.Networks.PUBLIC\n    else if (network === 'test') return StellarSdk.Networks.TESTNET\n    else return network\n  } else {\n    const currentNetwork = StellarSdk.Network.current()\n    if (currentNetwork) return currentNetwork.networkPassphrase()\n  }\n}\n\n/**\n * If `url` is given, set it as the default horizon instance for `passphrase`\n * network and returns the corresponding Server object.\n * Else, retrieve the default Server object for `passphrase` network.\n */\nconst serverSaves = {}\nconst networkDefaultServer = {}\nfunction getServer (passphrase, url) {\n  if (url) networkDefaultServer[passphrase] = url\n  else url = networkDefaultServer[passphrase]\n  if (!url) throw new Error('No default server for requested network.')\n\n  if (!serverSaves[url]) serverSaves[url] = new StellarSdk.Server(url)\n  return serverSaves[url]\n}\n\n/// Save defaults horizon nodes.\ngetServer(StellarSdk.Networks.PUBLIC, 'https://horizon.stellar.org')\ngetServer(StellarSdk.Networks.TESTNET, 'https://horizon-testnet.stellar.org')\n\n/**\n * Configure for how much time the resolved addresses are kept in cache,\n * in seconds. The default is set to 5 minutes to avoid resolving to an outdated\n * address.\n *\n * @const\n */\nresolve.accountCacheExpiration = 5 * 60\n\n/**\n * Contains promise of previously fetched accounts.\n *\n * @private\n * @type {Object}\n */\nconst accountCache = {}\n\n/**\n * Cache `promise` resolving to `address`'s account for `accountCacheExpiration`\n * seconds.\n *\n * @private\n * @param {string} address\n * @param {Promise} promise\n */\nasync function cacheAccount (address, promise) {\n  accountCache[address] = promise\n  await helpers.timeout(resolve.accountCacheExpiration * 1000)\n  delete accountCache[address]\n}\n\n/**\n * Return a promise that resolve to `address` account object, as defined in\n * JavaScript Stellar SDK API reference. `address` can be either a Stellar public\n * key or a federated address (account*example.org).\n * Returned results are cached and re-usable.\n *\n * @param {string} address\n * @return {Promise} Resolve to `address` account object\n */\nresolve.address = function (c, address) {\n  if (accountCache[address]) return accountCache[address]\n  const promise = addressResolver(c, address)\n  cacheAccount(address, promise)\n  return promise\n}\n\n/**\n * Helper for the previous resolve.address function.\n * Resolve to an account object for `address`.\n *\n * @private\n * @param {string} address\n */\nasync function addressResolver (c, address) {\n  // if (address.length !== 56 && !address.match(/.*\\*.*\\..*/)) {\n  // throw new Error('Invalid address: ' + helpers.shorter(address))\n  // }\n\n  const account = await StellarSdk.FederationServer.resolve(address)\n  const publicKey = account.account_id\n  if (!publicKey) throw new Error('Invalid response from federation server.')\n  if (!account.memo_type && account.memo !== undefined) delete account.memo\n  if (address !== publicKey) account.address = address\n  const alias = c.aliases && c.aliases[publicKey]\n  if (alias) account.alias = alias\n  return account\n}\n\n/**\n * Return the AccountResponse object for `address` on `network`.\n *\n * @param {CL}\n * @param {string} address A public key or a federated address\n * @param {string} network Either 'test' or 'public'\n * @return {Object} The account response\n */\nresolve.account = async function (c, address, network = c.network) {\n  const server = resolve.server(c, network)\n  const account = await resolve.address(c, address)\n  const publicKey = account.account_id\n  // try {\n  const accountResponse = await server.loadAccount(publicKey)\n  return accountResponse\n  // } catch (error) {\n  // console.error(error)\n  // const short = helpers.shorter(address)\n  // throw new Error(`Empty account: ${short}`)\n  // }\n}\n\nresolve.accountIsEmpty = async function (conf, id) {\n  // const server = resolve.network(conf)\n  // const account = await resolve.address(conf, id)\n  // const caller = server.accounts()\n  // const data = await caller.accountId(account.account_id).call()\n  // console.log(data)\n  return resolve.account(conf, id).then(x => false).catch(x => true)\n}\n\nresolve.transaction = async function (conf, txHash) {\n  const caller = conf.server.transactions()\n  return caller.transaction(txHash).call()\n}\n\n/**\n * Return the signers for the account at `address` on `network`.\n *\n * @param {CL}\n * @param {string} address Either a public key or a federated address\n * @param {string} network Either 'test' or 'public'\n * @return {Object} The signers object from the account response\n */\nresolve.accountSigners = async function (c, address) {\n  const account = await resolve.account(c, address)\n  return account.signers\n}\n\nresolve.signersTable = async function (conf, ...addresses) {\n  const obj = {}\n\n  for (let index in addresses) {\n    const account = await resolve.account(conf, addresses[index])\n    if (!obj[account.id]) obj[account.id] = account.signers\n  }\n\n  return obj\n}\n\nresolve.signersList = async function (conf, ...addresses) {\n  const array = []\n\n  for (let index in addresses) {\n    const account = await resolve.account(conf, addresses[index])\n    account.signers.forEach(entry => {\n      if (!array.find(a => a.key === entry.key)) array.push(entry.key)\n    })\n  }\n\n  return array\n}\n\nresolve.txSources = function (conf, transaction) {\n  const extra = useExtra(transaction)\n  if (extra.sources) return extra.sources\n\n  const array = [ transaction.source ]\n\n  for (let index in transaction.operations) {\n    const source = transaction.operations[index].source\n    if (source && !array.find(a => a === source)) array.push(source)\n  }\n\n  extra.sources = array\n  return array\n}\n\nresolve.txSignersList = async function (conf, transaction) {\n  const extra = useExtra(transaction)\n  if (!extra.signers) extra.signers = getTxSignersList(conf, transaction)\n  return extra.signers\n}\n\nasync function getTxSignersList (conf, transaction) {\n  const sources = resolve.txSources(conf, transaction)\n  return resolve.signersList(conf, ...sources)\n}\n\nconst extraField = 'extra_ocmultisig'\nfunction useExtra (obj) {\n  if (!obj[extraField]) obj[extraField] = {}\n  return obj[extraField]\n}\n","'use_strict'\n\nconst env = require('@cosmic-plus/jsutils/env')\n\nif (env.isBrowser) {\n  const StellarSdk = require('./stellar-sdk')\n  const hash = '0000000000000000000000000000000000000000000000000000000000000000'\n  const memo = new StellarSdk.Memo('hash', hash)\n  module.exports = memo.value.__proto__.constructor\n} else {\n  module.exports = env.nodeRequire('safe-buffer').Buffer\n}\n","/**\n * Publish/read arbitrary data on the blockchain\n *\n * @private\n * @exports messenger\n */\nconst messenger = exports\n\nconst Buffer = require('@cosmic-plus/base/buffer')\nconst loopcall = require('@cosmic-plus/loopcall')\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst resolve = require('./resolve')\n\n/**\n * Sends a message to `destinations` with using `keypair`. The maximum size for\n * `content` is 6400 bytes minus the number of `destinations`. The cost of\n * emission is 1.01 stroop per destination + 1 stroop per 64 bytes to send. When a\n * destination account doesn't exist, it is created on-the-fly which incur an\n * additional cost of 1 lumen each\n *\n * @param {Keypair} keypair The keypair of the sender.\n * @param {string|Array} destinations An address or an array of addresses (either\n *   account IDs or federated addresses).\n * @param {string|Memo} object  (max. 28 bytes for string).\n * @param {string|Buffer} content The message content.\n * @returns {HorizonResponse}\n */\nmessenger.send = async function (conf, keypair, destinations, object, content) {\n  const senderAccount = await resolve.account(conf, keypair.publicKey())\n  const tx = await messenger.encode(conf, senderAccount, destinations, object, content)\n  tx.sign(keypair)\n  const server = resolve.network(conf)\n  return server.submitTransaction(tx)\n}\n\n/**\n * Build a transaction to be signed by `senderAccount` that sends message to\n * `destinations`. The maximum size for `content` is 6400 bytes minus the number\n * of `destinations`. The cost of emission is 1.01 stroop per destination + 1\n * stroop per 64 bytes to send. When a destination account doesn't exist, it is\n * created on-the-fly which incur an additional cost of 1 lumen each.\n *\n * @param {AccountResponse} senderAccount The AccountResponse for sender\n * @param {string|Array} destination The account IDs where to send the message,\n *     or an array of account IDs.\n * @param {string|Memo} object The message object (max. 28 bytes for string).\n * @param {string|Buffer} content The message content.\n * @return {Transaction} A StellarSdk Transaction object.\n */\nmessenger.encode = async function (conf, senderAccount, destinations, object, content) {\n  const txBuilder = new StellarSdk.TransactionBuilder(senderAccount)\n  addMemo(txBuilder, object)\n  await addDestinations(conf, txBuilder, destinations)\n  addContent(txBuilder, content)\n  return txBuilder.build()\n}\n\nfunction addMemo (txBuilder, memo) {\n  if (typeof memo === 'string') {\n    const slicedMemo = Buffer.from(memo).slice(0, 28).toString()\n    memo = new StellarSdk.Memo('text', slicedMemo)\n  }\n  if (memo) txBuilder.addMemo(memo)\n}\n\nasync function addDestinations (conf, txBuilder, destinations) {\n  if (!Array.isArray(destinations)) destinations = [ destinations ]\n\n  for (let index in destinations) {\n    const accountId = destinations[index]\n    const addDestination = await linkToAccount(conf, accountId)\n    txBuilder.addOperation(addDestination)\n  }\n}\n\nasync function linkToAccount (conf, accountId) {\n  if (await resolve.accountIsEmpty(conf, accountId)) {\n    return operation('createAccount', {\n      destination: accountId,\n      startingBalance: '1'\n    })\n  } else {\n    return operation('payment', {\n      destination: accountId,\n      asset: StellarSdk.Asset.native(),\n      amount: '0.0000001'\n    })\n  }\n}\n\nfunction addContent (txBuilder, content) {\n  if (!(content instanceof Buffer)) content = Buffer.from(content)\n  const operationsLeft = 100 - txBuilder.operations.length\n  if (content.length > operationsLeft * 64) {\n    console.log('Warning: message will be truncated.')\n  }\n\n  for (let i = 0; i < operationsLeft; i++) {\n    const chunk = content.slice(i * 64, i * 64 + 64)\n    if (chunk.length === 0) break\n    const storeChunk = operation('manageData', { name: 'Send', value: chunk })\n    txBuilder.addOperation(storeChunk)\n  }\n}\n\nfunction operation (type, params) {\n  return StellarSdk.Operation[type](params)\n}\n\n/**\n * Parse the message object from transaction `txHash`.\n *\n * @param {String} txHash A transaction hash\n * @return {Object} A message object with `sender`, `object`, `date` and\n *     `content` fields.\n */\nmessenger.read = async function (conf, txHash) {\n  const server = resolve.network(conf)\n  const callBuilder = server.transactions().transaction(txHash)\n  const txRecord = await callBuilder.call()\n  return messenger.decode(conf, txRecord)\n}\n\nmessenger.decode = function (conf, txRecord) {\n  const transaction = new StellarSdk.Transaction(txRecord.envelope_xdr)\n  if (transaction.operations.length < 2) return null\n  return {\n    sender: txRecord.source_account,\n    object: extractObject(transaction.memo),\n    date: txRecord.created_at,\n    content: extractContent(transaction),\n  }\n}\n\nfunction extractObject (memo) {\n  if (memo._type === 'hash' || memo._type === 'return') {\n    return memo._value.toString('hex')\n  } else {\n    return memo._value.toString('utf8')\n  }\n}\n\nfunction extractContent (transaction) {\n  const chunks = []\n  transaction.operations.forEach(operation => {\n    if (isContentChunk(operation)) chunks.push(operation.value)\n  })\n  return Buffer.concat(chunks)\n}\n\nfunction isContentChunk (operation) {\n  return (operation.type === 'manageData' && operation.name === 'Send')\n}\n\nmessenger.list = async function (conf, accountId, options) {\n  const records = await messenger.listRaw(conf, accountId, options)\n  return records.map(record => messenger.decode(conf, record))\n}\n\nmessenger.listRaw = async function (conf, accountId, options = {}) {\n  if (await resolve.accountIsEmpty(conf, accountId)) return []\n  const server = resolve.server(conf)\n  const callBuilder = server.transactions().forAccount(accountId)\n  if (options.cursor) callBuilder.cursor(options.cursor)\n  if (options.order) callBuilder.order(options.order)\n  options.filter = makeMessageFilter(options.filter)\n  return loopcall(callBuilder, options)\n}\n\nfunction makeMessageFilter (baseFilter) {\n  return function (record) {\n    if (record.operation_count < 2) return false\n    if (baseFilter) return baseFilter(record)\n    else return true\n  }\n}\n\nmessenger.find = async function (conf, publicKey, func) {\n  const records = await messenger.list(conf, publicKey, { limit: 1, filter: func })\n  if (records[0]) return records[0]\n}\n","/**\n * Environment detection and library loading.\n */\n\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\n/**\n * Automatically pass library network configuration to underlying methods.\n */\n\n// baseConf may be modified only by multisig.useNetwork().\nconst baseConf = {}\n\nfunction prepare (module) {\n  const layer = {}\n  for (let name in module) {\n    if (typeof module[name] !== 'function') continue\n    layer[name] = passConfig(module[name])\n  }\n\n  return Object.assign({}, module, layer)\n}\n\nfunction passConfig (func) {\n  return function (...params) {\n    // Make a one-time configuration object and pass it to the underlying\n    // function along with user parameters.\n    const conf = Object.create(baseConf)\n    return func(conf, ...params)\n  }\n}\n\nmodule.exports = prepare(require('./multisig'))\n","/**\n * @exports multisig\n */\nconst multisig = exports\n\nconst axios = require('@cosmic-plus/base/axios')\nconst Buffer = require('@cosmic-plus/base/buffer')\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst resolve = require('./resolve')\nconst shareSignatures = require('./share-signatures')\nconst shareTransactions = require('./share-transactions')\n\nmultisig.isEnabled = async function (conf, user) {\n  conf.multisig = await multisig.config(conf, user)\n  return !!conf.multisig\n}\n\nmultisig.config = async function (conf, user) {\n  const account = await getAccount(conf, user)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (conf.multisig.id) return conf.multisig\n  else return null\n}\n\nmultisig.enable = async function (conf, keypair, options) {\n  const account = await getAccount(conf, keypair)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (conf.multisig.id) {\n    console.log('On-chain signature sharing is already enabled on this account.')\n    return null\n  }\n\n  const transaction = makeSetupTx(conf, account, options)\n  return sendOrReturn(conf, transaction, keypair)\n}\n\nmultisig.setup = async function (conf, keypair, options) {\n  const account = await getAccount(conf, keypair)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error('On-chain signature sharing in not enabled on this account.')\n  }\n\n  const transaction = makeSetupTx(conf, account, options)\n  return sendOrReturn(conf, transaction, keypair)\n}\n\nmultisig.disable = async function (conf, keypair) {\n  const account = await getAccount(conf, keypair)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    console.log('On-chain signature sharing is already disabled on this account.')\n    return null\n  }\n\n  const transaction = makeDisableTx(conf, account)\n  return sendOrReturn(conf, transaction, keypair)\n}\n\n/**\n *\n * @parameter {Transaction|XDR} transaction A signed transaction\n * @parameter {Keypair} [keypair]\n * @returns {Transaction|HorizonResponse}\n */\nmultisig.pushSignatures = async function (conf, transaction, keypair) {\n  const account = await resolve.account(conf, transaction.source)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error('On-chain signature sharing in not enabled on this account.')\n  }\n\n  saveNetwork()\n  const senderId = keypair.publicKey()\n  await checkAccountExist(conf.multisig, senderId)\n  const pushTx = await shareSignatures.makePushTx(conf, transaction, senderId)\n  const horizonResponse = sendOrReturn(conf.multisig, pushTx, keypair)\n  horizonResponse.finally(restoreNetwork)\n  return horizonResponse\n}\n\nmultisig.pullSignatures = async function (conf, transaction) {\n  const account = await getAccount(conf, transaction.source)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error('On-chain signature sharing in not enabled on this account.')\n  }\n\n  saveNetwork()\n  const bool = await shareSignatures.pull(conf, transaction)\n  restoreNetwork()\n  return bool\n}\n\nmultisig.pushTransaction = async function (conf, transaction, keypair) {\n  const account = await getAccount(conf, keypair)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error('On-chain transaction sharing is not enabled on this account.')\n  }\n\n  const senderId = keypair.publicKey()\n  const legitSources = account.signers.map(signer => signer.key)\n  if (!legitSources.find(source => source === senderId)) {\n    throw new Error('Not a co-signer for transaction source account: ' + senderId)\n  }\n\n  saveNetwork()\n  await checkAccountExist(conf.multisig, senderId)\n  /// Shadow transaction signatures without modifying the underlying object.\n  transaction = Object.create(transaction)\n  transaction.signatures = []\n  const pushTx = await shareTransactions.makePushTx(conf, transaction, senderId)\n  const horizonResponse = sendOrReturn(conf.multisig, pushTx, keypair)\n  horizonResponse.finally(restoreNetwork)\n  return horizonResponse\n}\n\nmultisig.listTransactions = async function (conf, user, ledger) {\n  const account = await getAccount(conf, user)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error('On-chain transaction sharing is not enabled on this account.')\n  }\n\n  return shareTransactions.list(conf, account, ledger)\n}\n\nmultisig.useNetwork = function (conf, network, server) {\n  return resolve.network(conf.__proto__, network, server)\n}\n\n/** ***************************** Routines *************************************/\n\n/**\n * Returns the transaction that enable signature sharing for `account`.\n */\nfunction makeSetupTx (conf, account, options = {}) {\n  const multisigId = options.id || conf.multisig.id || StellarSdk.Keypair.random().publicKey()\n  const txBuilder = new StellarSdk.TransactionBuilder(account)\n  txBuilder.addMemo(new StellarSdk.Memo('text', 'Setup signature sharing'))\n\n  let isEmpty = true\n  const setData = function (name, value) {\n    txBuilder.addOperation(StellarSdk.Operation.manageData({ name: name, value: value }))\n    isEmpty = false\n  }\n\n  if (multisigId !== conf.multisig.id) setData('config:multisig', multisigId)\n\n  if (!options.network) options.network = 'test'\n  if ((options.network || conf.multisig.network) &&\n    options.network !== conf.multisig.network\n  ) {\n    setData('config:multisig:network', options.network)\n  }\n\n  if ((options.server || conf.multisig.server) &&\n    options.server !== conf.multisig.server) {\n    setData('config:multisig:server', options.server)\n  }\n\n  if (isEmpty) return null\n  else return txBuilder.build()\n}\n\n/**\n * Returns the transaction that disable signature sharing for `account`.\n */\nfunction makeDisableTx (conf, account) {\n  const txBuilder = new StellarSdk.TransactionBuilder(account)\n  txBuilder.addMemo(new StellarSdk.Memo('text', 'Disable signature sharing'))\n\n  const setData = function (name, value) {\n    txBuilder.addOperation(StellarSdk.Operation.manageData({ name: name, value: value }))\n  }\n\n  setData('config:multisig', null)\n  if (account.data_attr['multisig:network']) {\n    setData('config:multisig:network', null)\n  }\n  if (account.data_attr['multisig:server']) {\n    setData('config:multisig:server', null)\n  }\n\n  return txBuilder.build()\n}\n\n/** ************************ Generic helpers ***********************************/\n\n/**\n * Returns the multisig configuration.\n */\nfunction parseMultisigConfig (account) {\n  return {\n    id: readAttr(account.data_attr['config:multisig']),\n    network: readAttr(account.data_attr['config:multisig:network']) || 'test',\n    server: readAttr(account.data_attr['config:multisig:server'])\n  }\n}\nfunction readAttr (str64) {\n  if (str64) return Buffer.from(str64, 'base64').toString('utf8')\n}\n\n/**\n * If `user` is already an AccountResponse, return it. Else resolve it.\n */\nasync function getAccount (conf, user) {\n  if (isAccountResponse(user)) return user\n  else if (user instanceof StellarSdk.Keypair) user = user.publicKey()\n  else if (user instanceof StellarSdk.Account) user = user._accountId\n  else if (typeof user !== 'string') throw new TypeError('Invalid user parameter.')\n\n  const account = await resolve.account(conf, user)\n  return account\n}\nfunction isAccountResponse (obj) {\n  return obj && obj._baseAccount && obj._baseAccount instanceof StellarSdk.Account\n}\n\n/**\n * Create `accoundId` if it is empty & on test network.\n */\nasync function checkAccountExist (conf, accountId) {\n  if (await resolve.accountIsEmpty(conf, accountId)) {\n    if (conf.network === 'test') {\n      return axios('https://friendbot.stellar.org/?addr=' + accountId)\n    } else {\n      throw new Error(\"Account doesn't exist on the requested network: \" + conf.network)\n    }\n  }\n}\n\n/**\n * If `value` is a transaction, sign it with `keypair` and send it to horizon.\n * Else, return `value`.\n */\nasync function sendOrReturn (conf, value, keypair) {\n  if (value instanceof StellarSdk.Transaction) {\n    const server = resolve.network(conf)\n    value.sign(keypair)\n    const responsePromise = server.submitTransaction(value)\n    responsePromise.catch(error => console.error(error.response))\n    return responsePromise\n  } else {\n    return value\n  }\n}\n\n/**\n * Save/Restore Network\n */\nlet networkBackup\n\nfunction saveNetwork () {\n  networkBackup = StellarSdk.Network.current()\n}\n\nfunction restoreNetwork () {\n  if (StellarSdk.Network.current() !== networkBackup) {\n    console.log('Restore network')\n    StellarSdk.Network.use(networkBackup)\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","'use_stict'\n\nconst env = require('@cosmic-plus/jsutils/env')\n\nif (env.isBrowser) {\n  module.exports = require('./stellar-sdk').axios\n} else {\n  module.exports = env.nodeRequire('axios')\n}\n","'use strict'\n/**\n * Various independent helpers.\n *\n * @exports misc\n */\nconst misc = exports\n\nconst env = require('./env')\nconst html = env.isBrowser && require('./html')\n\n/**\n * Return a function that will execute `thunk` when called, and return the\n * result of its execution as a Promise. Handle async and regular functions\n * equally. Any error will be carried to .catch.\n *\n * @param {function} thunk A parameterless function\n * @return {function}\n */\nmisc.delay = function (thunk) {\n  let firstCall = true\n  let memoized\n  return function () {\n    if (firstCall) {\n      firstCall = false\n      memoized = new Promise((resolve) => resolve(thunk()))\n    }\n    return memoized\n  }\n}\n\n/**\n * Return a promise that takes `x` seconds to resolve\n *\n * @param {number} x Time to wait\n * @return {Promise}\n */\nmisc.timeout = function (x) {\n  return new Promise(function (resolve) { setTimeout(resolve, x) })\n}\n\n/**\n * Return `string` with first letter capitalized.\n *\n * @param {string} string\n * @return {string}\n */\nmisc.capitalize = function (string) {\n  return string.substr(0, 1).toUpperCase() + string.slice(1)\n}\n\n/**\n * Return shortified `string` if longer than 30 characters; else return\n * `string`.\n *\n * @param {string}\n * @return {string}\n */\nmisc.shorter = function (string) {\n  if (string.length > 50) {\n    return string.substr(0, 5) + '...' + string.substr(-5)\n  } else {\n    return string\n  }\n}\n\n/**\n * Return a function that copy `string` into user clipboard.\n *\n * @private\n * @param {string} string\n * @return {function}\n */\nmisc.copy = function (string) {\n  const textBox = html.create('textarea', {}, string)\n  html.append(html.grab('body'), textBox)\n  html.copyContent(textBox)\n  html.destroy(textBox)\n}\n\n/**\n * Set `object` property `name` as hidden, and set it to `value`.\n */\nmisc.setHiddenProperty = function (object, name, value) {\n  Object.defineProperty(object, name, { value: value, enumerable: false, writable: true })\n}\n\n/**\n * Log an error stating that `before` is deprecated.\n *\n * @param {string} date YYYY-MM or YYYY-MM-DD\n * @param {string} before Old function/property\n * @param {string} after New function/property\n */\nmisc.deprecated = function (date, before, after) {\n  console.error(`Warning: ${before} is deprecated and will be removed after \\\n${date}. Please use ${after} instead.`)\n}\n\n/**\n * Creates and returns an extra field (`extra_ticot`) for **obj**. This allow to\n * append additional information to objects without mess.\n *\n * @param {Object}\n * @return {Object} The extra field object.\n */\nmisc.useExtra = function (obj) {\n  if (!obj[extraField]) obj[extraField] = {}\n  return obj[extraField]\n}\nconst extraField = '_extra_ticot'\n","'use_strict'\n/**\n * Utilities to manipulate HTML element from javascript.\n *\n * Those may not be feature complete, as this library purpose is to ease\n * cosmic-lib and Stellar Authenticator development, rather than provide a\n * generic-case toolbox.\n *\n * @exports html\n */\nconst html = exports\n\n/// Prevent node failure when accidentaly loading this file.\nconst env = require('./env')\nconst document = env.window ? env.window.document : undefined\nif (env.isNode) console.error('@cosmic-plus/jsutils/html is a browser-only module')\n\n/**\n * Append `childs` as the end of `element`.\n *\n * @param {HTMLElement} element\n * @param {...(HTMLElement|String|Error)} childs\n */\nhtml.append = function (element, ...childs) {\n  childs.forEach(child => {\n    if (typeof child === 'string' || typeof child === 'number' || child instanceof Error) {\n      element.appendChild(document.createTextNode(child))\n    } else {\n      element.appendChild(child)\n    }\n  })\n}\n\n/**\n * Add `newClass` as an additionnal class for `element`.\n *\n * @param {HTMLElement} element\n * @param {string} newClass\n * */\nhtml.appendClass = function (element, newClass) {\n  element.className += ' ' + newClass\n}\n\n/**\n * Remove everything inside `element`.\n *\n * @param {HTMLElement} element\n * */\nhtml.clear = function (element) {\n  element.innerHTML = ''\n}\n\n/**\n * Copy text inside `element`. `element` should be a textbox like textarea or\n * text input.\n *\n * @param {HTMLElement} element\n * @param\n * */\nhtml.copyContent = function (element) {\n  /// Don't copy complete box content twice / when user made a selection.\n  if (element.selectionStart !== element.selectionEnd) return\n\n  if (element.select) {\n    element.select()\n  } else if (window.getSelection) {\n    const range = document.createRange()\n    range.selectNode(element)\n    window.getSelection().removeAllRanges()\n    window.getSelection().addRange(range)\n  } else {\n    return\n  }\n  return document.execCommand('copy')\n}\n\n/**\n * Return a newly created HTML element whose tag is `name`, attributes\n * `attributes` and childs `childs`.\n *\n * @param {string} name\n * @param {object|string} [attributes|className|ID]\n * @param {...HTMLElement} [childs]\n */\nhtml.create = function (name, attributes, ...childs) {\n  if (!name) throw new Error('Missing tag name')\n\n  const element = document.createElement(name)\n\n  if (typeof attributes === 'string') {\n    switch (attributes.substr(0, 1)) {\n      case '#': element.id = attributes.substr(1); break\n      case '.': element.className = attributes.substr(1); break\n      default: throw new Error('Unhandled attribute')\n    }\n  } else {\n    let field; for (field in attributes) {\n      element[field] = attributes[field]\n    }\n  }\n\n  if (childs.length > 0) html.append(element, ...childs)\n\n  return element\n}\n\n/**\n * Destroy `element`.\n *\n * @param {HTMLElement} element\n * */\nhtml.destroy = function (element) {\n  try {\n    element.innerHTML = ''\n    if (element.parentNode) element.parentNode.removeChild(element)\n  } catch (error) { console.error(error) }\n}\n\n/**\n * Return the first element matching `pattern`.\n * If `name` starts with `#`, it will match against IDs.\n * If `name` starts with `.`, it will match against classes.\n * If `name` is a plain word, it will match against tags.\n * If `parent` is given, it will look recursively in `parent` childs.\n *\n * @param {string} pattern\n * @param {HTMLElement} [parent=document]\n * */\nhtml.grab = function (pattern, parent = document) {\n  return parent.querySelector(pattern)\n}\n\n/**\n * Set the `style.display` property of `...elements` to `block`.\n *\n * @param {...HTMLElement} elements\n */\nhtml.show = function (...elements) {\n  elements.forEach(element => element.style.display = 'block')\n}\n\n/** Set the `style.display` property of `...elements` to `none`.\n *\n * @param {...HTMLElement} elements\n */\nhtml.hide = function (...elements) {\n  elements.forEach(element => element.style.display = 'none')\n}\n\n/**\n * Replace `element1` by `element2`.\n *\n * @param {HTMLElement} element1 The element to replace.\n * @param {HTMLElement} element2 The element to put in place of `element1`.\n */\nhtml.replace = function (element1, element2) {\n  element1.parentNode.replaceChild(element2, element1)\n}\n\n/**\n * Set the content of element to ...childs. Any previous content will be erased.\n *\n * @param {HTMLElement} element\n * @param {...HTMLElement} childs\n */\nhtml.rewrite = function (element, ...childs) {\n  html.clear(element)\n  html.append(element, ...childs)\n}\n\n/**\n * Add `string` as additional CSS definitions for the current document.\n *\n * @param {string} styles CSS definitions\n */\nhtml.addStyles = function (styles) {\n  const styleNode = html.create('style', { type: 'text/css' }, styles)\n  html.append(headNode, styleNode)\n}\nconst headNode = html.grab('head')\n","'use_strict'\nconst shareSignatures = exports\n\nconst Buffer = require('@cosmic-plus/base/buffer')\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst messenger = require('./messenger')\nconst resolve = require('./resolve')\n\n/**\n * Returns a sharing transaction that will push any new signature from\n * `transaction`. The sharing transactions should be signed by `accountId` and\n * sent to `conf.multisig.network`.\n */\nshareSignatures.makePushTx = async function (conf, transaction, senderId) {\n  const signatures = transaction.signatures.map(entry => entry.signature())\n  if (!transaction.signatures.length) return null\n\n  /// Push only signatures that have not been uploaded yet.\n  const txHash = transaction.hash()\n  const signers = await resolve.txSignersList(conf, transaction)\n  const alreadyOnchain = await getSignatures(conf, txHash, signers)\n  const newSignatures = onlyInFirstArray(signatures, alreadyOnchain)\n  if (!newSignatures.length) return null\n\n  /// Make the transaction that puts signatures on-chain.\n  const sender = await resolve.account(conf.multisig, senderId)\n  const destination = conf.multisig.id\n  const object = new StellarSdk.Memo('return', txHash)\n  const message = Buffer.concat(signatures)\n  return messenger.encode(conf.multisig, sender, destination, object, message)\n}\n\nfunction onlyInFirstArray (array1, array2) {\n  return array1.filter(x => !array2.find(y => x.toString() === y.toString()))\n}\n\n/**\n * Pull signatures for `transaction` published on `conf.multisig.network`.\n */\nshareSignatures.pull = async function (conf, transaction) {\n  const txHash = transaction.hash()\n  const signers = await resolve.txSignersList(conf, transaction)\n  const signatures = await getSignatures(conf, txHash, signers)\n  return mergeSignatures(transaction, signatures, txHash, signers)\n}\n\n/**\n * Returns an array of the signatures shared on-chain for `txHash`.\n */\nasync function getSignatures (conf, txHash, signers) {\n  const txHash64 = txHash.toString('base64')\n\n  if (await resolve.accountIsEmpty(conf.multisig, conf.multisig.id)) {\n    return []\n  }\n\n  /// Get transactions that embed shared signatures for transaction.\n  const records = await messenger.listRaw(conf.multisig, conf.multisig.id, {\n    filter: tx => tx.memo_type === 'return' && tx.memo === txHash64\n  })\n\n  const signatures = []\n  for (let index in records) {\n    const txRecord = records[index]\n    const transaction = new StellarSdk.Transaction(txRecord.envelope_xdr)\n    if (!isTxSourceLegit(transaction, signers)) continue\n    transaction.operations.forEach(operation => {\n      if (containsSignature(operation)) signatures.push(operation.value)\n    })\n  }\n\n  return signatures\n}\n\nfunction isTxSourceLegit (transaction, signers) {\n  return signers.find(signer => signer === transaction.source)\n}\n\nfunction containsSignature (operation) {\n  return operation.type === 'manageData' && operation.name === 'Send'\n}\n\n/**\n * Test `signatures` against `signers` and add new legit ones to `transaction`.\n */\nfunction mergeSignatures (transaction, signatures, txHash, signers) {\n  let newSignatures = false\n  const txSigs = transaction.signatures.map(x => x.signature().toString())\n  const keys = signers.map(x => StellarSdk.Keypair.fromPublicKey(x))\n\n  for (let index in signatures) {\n    const signature = signatures[index]\n    if (txSigs.find(x => x === signature.toString())) continue\n    const signer = keys.find(x => x.verify(txHash, signature))\n    if (!signer) continue\n    const decoratedSignature = makeDecorated(signer, signature)\n    transaction.signatures.push(decoratedSignature)\n    txSigs.push(signature.toString())\n    newSignatures = true\n  }\n\n  return newSignatures\n}\n\nfunction makeDecorated (signer, signature) {\n  const Constructor = StellarSdk.xdr.DecoratedSignature\n  return new Constructor({ hint: signer.signatureHint(), signature: signature })\n}\n","'use_strict'\n/**\n * Concatenate records from `callBuilder` call response that pass `options.filter`\n * until `options.limit` is reached, `options.breaker` returns a true value or\n * no more are available.\n * \n * **Warning**: Please be aware that unlimited loopcall can iterate over the\n * full set of data available on a network, sending thousands of request to the\n * API. Please use it wisely :)\n * \n * @example\n * const callBuilder = server.transactions().forAccount('GDE...YBX')\n * const allTransactions = await loopcall(callBuilder)\n * const transactionsWithoutMemo = await loopcall(callBuilder, {\n *   filter: (tx) => !tx.memo\n * })\n * const thisYearTransactions = await loopcall(callBuilder, {\n *   breaker: (tx) => tx.created_at.substr(0,4) < 2018\n * })\n * \n * @example\n * const callBuilder = server.operations().order('asc')\n * const the2000firstOperations = await loopcall(callBuilder, { limit: 2000 })\n * const the20firstAccountCreations = await loopcall(callBuilder, {\n *   limit: 20,\n *   filter: (op) => op.type === 'create_account'\n * })\n * \n * @param {CallBuilder} callBuilder A CallBuilder object\n * @param {Object} [options]\n * @param {integer} [options.limit] The maximum number of record to return\n * @param {function} [options.filter] A function that accept a record argument. It\n *   is called with each fetched record. If it returns a true value, the record\n *   is added to returned records, else it is discarded.\n * @param {function} [options.breaker] A function that accept a record argument.\n *   It is called with each fetched record. If it returns a true value, the loop\n *   ends and the array of the filtered records is returned.\n * @returns {Array} The fetched records\n */\nmodule.exports = async function (callBuilder, options = {}) {\n  const callerLimit = options.limit ? Math.min(options.limit, 200) : 200\n  const callAnswer = await callBuilder.limit(callerLimit).call()\n\n  if (options.filter || options.breaker) {\n    return loopWithBreakpoints(callAnswer, options)\n  } else {\n    return loop(callAnswer, options.limit)\n  }\n}\n\n/**\n * Concatenate records from `callAnswer` pages until `limit` is reached or no\n * more are available.\n * \n * @param {Object} callAnswer A resolved CallBuilder.call() object\n * @param {integer} limit The maximum number of record to return\n * @returns {Array} The fetched records\n */\nasync function loop (callAnswer, limit) {\n  let records = []\n\n  while (callAnswer.records.length) {\n    if (limit) {\n      const length = records.length + callAnswer.records.length\n      if (limit === length) {\n        return records.concat(callAnswer.records)\n      } else if (length > limit) {\n        const splitAt = limit - records.length\n        const tailRecords = callAnswer.records.slice(0, splitAt)\n        return records.concat(tailRecords)\n      }\n    }\n    records = records.concat(callAnswer.records)\n    callAnswer = await callAnswer.next()\n  }\n  \n  return records\n}\n\n/**\n * Concatenate records from `callAnswer` pages that pass `options.filter` until\n * `options.limit` is reached, `options.breaker` returns a true value or no more\n * are available.\n * \n * @param {Object} callAnswer A resolved CallBuilder.call() object\n * @param {Object} [options]\n * @param {integer} [options.limit] The maximum number of record to return\n * @param {function} [options.filter] A function that accept a record argument. It\n *   is called with each fetched record. If it returns a true value, the record\n *   is added to returned records, else it is discarded.\n * @param {function} [options.breaker] A function that accept a record argument.\n *   It is called with each fetched record. If it returns a true value, the loop\n *   ends and the array of the filtered records is returned.\n * @returns {Array} The fetched records\n */\nasync function loopWithBreakpoints (callAnswer, options) {\n  const records = []\n  \n  while (callAnswer.records.length) {\n    for (let index in callAnswer.records) {\n      if (options.limit && records.length === options.limit) return records\n      const nextRecord = callAnswer.records[index]\n      if (options.breaker) {\n        const recordTriggerBreak = await options.breaker(nextRecord)\n        if (recordTriggerBreak) return records\n      }\n      if (options.filter) {\n        const recordPassTest = await options.filter(nextRecord)\n        if (!recordPassTest) continue\n      }\n      records.push(nextRecord)\n    }\n    callAnswer = await callAnswer.next()\n  }\n  \n  return records\n}\n","'use_strict'\nconst shareTransactions = exports\n\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst messenger = require('./messenger')\nconst resolve = require('./resolve')\n\nshareTransactions.list = async function (conf, account, lastLedger = 0) {\n  if (typeof lastLedger !== 'number') lastLedger = +lastLedger\n\n  const options = {}\n  const legitSources = listSignersKeys(account)\n  options.filter = (record) => isLegitSharedTransaction(record, legitSources)\n  if (lastLedger) options.breaker = (record) => record.ledger_attr <= lastLedger\n  const txRecords = await messenger.listRaw(conf.multisig, conf.multisig.id, options)\n\n  return txRecords.map(decodeTransactionRequest)\n}\n\nfunction isLegitSharedTransaction (record, legitSources) {\n  if (record.memo_type !== 'hash') return false\n  return legitSources.find(accountId => accountId === record.source_account)\n}\n\nfunction decodeTransactionRequest (record) {\n  const message = messenger.decode(null, record)\n  message.ledger = record.ledger_attr\n  message.xdr = message.content.toString('base64')\n  delete message.content\n  delete message.object\n  return message\n}\n\nshareTransactions.makePushTx = async function (conf, transaction, senderId) {\n  const txHash = transaction.hash()\n  if (await transactionHasBeenPushed(conf, txHash)) {\n    console.log('Transaction have already been pushed')\n    return null\n  }\n\n  /// Make the transaction that puts transaction on-chain.\n  const sender = await resolve.account(conf.multisig, senderId)\n  const destination = conf.multisig.id\n  const object = new StellarSdk.Memo('hash', txHash)\n  const content = transaction.toEnvelope().toXDR()\n  return messenger.encode(conf.multisig, sender, destination, object, content)\n}\n\nasync function transactionHasBeenPushed (conf, txHash) {\n  const txHash64 = txHash.toString('base64')\n  const tester = (record) => recordHasMemo(record, 'hash', txHash64)\n  const record = await messenger.find(conf.multisig, conf.multisig.id, tester)\n  return !!record\n}\n\nfunction recordHasMemo (record, type, value) {\n  return record.memo_type === type && record.memo === value\n}\n\nfunction listSignersKeys (account) {\n  return account.signers.map(signer => signer.key)\n}\n"],"sourceRoot":""}