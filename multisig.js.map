{"version":3,"sources":["webpack://multisig/webpack/universalModuleDefinition","webpack://multisig/webpack/bootstrap","webpack://multisig/./node_modules/@cosmic-plus/base/stellar-sdk.js","webpack://multisig/./node_modules/@babel/runtime/regenerator/index.js","webpack://multisig/./node_modules/@cosmic-plus/jsutils/env.js","webpack://multisig/./src/resolve.js","webpack://multisig/./node_modules/@cosmic-plus/base/buffer.js","webpack://multisig/./src/messenger.js","webpack://multisig/./src/index.js","webpack://multisig/./src/multisig.js","webpack://multisig/./node_modules/regenerator-runtime/runtime-module.js","webpack://multisig/./node_modules/regenerator-runtime/runtime.js","webpack://multisig/./node_modules/@cosmic-plus/base/axios.js","webpack://multisig/./node_modules/process/browser.js","webpack://multisig/(webpack)/buildin/global.js","webpack://multisig/./node_modules/@cosmic-plus/jsutils/misc.js","webpack://multisig/./node_modules/@cosmic-plus/jsutils/html.js","webpack://multisig/./src/share-signatures.js","webpack://multisig/./node_modules/@cosmic-plus/loopcall/loopcall.js","webpack://multisig/./src/share-transactions.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","env","isBrowser","undefined","StellarSdk","console","error","nodeRequire","process","global","document","isNode","versions","node","stealth_require","eval","resolve","helpers","require","networkPassphrase","network","Networks","PUBLIC","TESTNET","currentNetwork","Network","current","server","conf","arguments","length","passphrase","Error","getServer","newPassphrase","log","use","serverSaves","networkDefaultServer","url","Server","accountCacheExpiration","accountCache","_callee8","address","promise","_regeneratorRuntime","wrap","_context8","prev","next","timeout","stop","this","_callee9","account","publicKey","alias","_context9","FederationServer","sent","account_id","memo_type","memo","aliases","abrupt","getTxSignersList","_callee10","transaction","sources","_context10","txSources","signersList","apply","concat","_toConsumableArray","addressResolver","cacheAccount","_ref","_asyncToGenerator","mark","_callee","accountResponse","_args","_context","loadAccount","_x5","_x6","accountIsEmpty","_ref2","_callee2","id","_context2","then","catch","_x7","_x8","_ref3","_callee3","txHash","caller","_context3","transactions","_x9","_x10","accountSigners","_ref4","_callee4","_context4","signers","_x11","_x12","signersTable","_ref5","_callee5","obj","_len","addresses","_key","index","_args5","_context5","Array","t0","keys","t1","done","_x13","_ref6","_callee6","array","_len2","_key2","_args6","_context6","forEach","entry","find","a","push","_x14","extra","useExtra","source","_loop","operations","txSignersList","_ref7","_callee7","_context7","_x15","_x16","extraField","hash","Memo","__proto__","constructor","Buffer","messenger","loopcall","addMemo","txBuilder","slicedMemo","from","slice","toString","addDestinations","destinations","accountId","addDestination","isArray","linkToAccount","addOperation","operation","destination","startingBalance","asset","Asset","native","amount","addContent","content","operationsLeft","chunk","storeChunk","type","params","Operation","extractObject","_type","_value","extractContent","chunks","isContentChunk","makeMessageFilter","baseFilter","record","operation_count","send","keypair","senderAccount","tx","encode","sign","submitTransaction","_x","_x2","_x3","_x4","TransactionBuilder","build","read","callBuilder","txRecord","decode","_x17","Transaction","envelope_xdr","sender","source_account","date","created_at","list","options","records","listRaw","map","_x18","_x19","_x20","forAccount","cursor","order","filter","_x21","_x22","func","limit","_x23","_x24","_x25","baseConf","passConfig","layer","assign","prepare","networkBackup","multisig","axios","shareSignatures","shareTransactions","makeSetupTx","multisigId","Keypair","random","isEmpty","setData","manageData","makeDisableTx","data_attr","parseMultisigConfig","readAttr","str64","getAccount","user","_baseAccount","Account","_accountId","TypeError","checkAccountExist","_callee11","_context11","sendOrReturn","_callee12","responsePromise","_context12","response","saveNetwork","restoreNetwork","isEnabled","config","enable","setup","disable","pushSignatures","senderId","pushTx","horizonResponse","makePushTx","finally","pullSignatures","bool","pull","pushTransaction","_ref8","signer","signatures","listTransactions","_ref9","ledger","useNetwork","g","self","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","e","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","result","reverse","pop","Context","reset","skipTempReset","_sent","delegate","method","tryEntries","resetTryEntry","charAt","isNaN","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","err","previousPromise","callInvokeWithMethodAndArg","Promise","reject","invoke","unwrapped","return","info","pushTryEntry","locs","iteratorMethod","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","run","marker","runClearTimeout","Item","noop","nextTick","args","title","browser","argv","version","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","misc","html","delay","thunk","memoized","firstCall","x","capitalize","string","substr","toUpperCase","shorter","copy","textBox","append","grab","copyContent","destroy","setHiddenProperty","writable","deprecated","before","after","isUtf8","match","isBase64","element","childs","child","appendChild","createTextNode","appendClass","newClass","className","clear","elements","innerHTML","selectionStart","selectionEnd","select","getSelection","range","createRange","selectNode","removeAllRanges","addRange","execCommand","attributes","createElement","field","parentNode","removeChild","pattern","parent","querySelector","show","hidden","hide","replace","element1","element2","replaceChild","rewrite","addStyles","styles","styleNode","headNode","onlyInFirstArray","array1","array2","y","getSignatures","txHash64","isTxSourceLegit","containsSignature","mergeSignatures","newSignatures","txSigs","signature","fromPublicKey","verify","decoratedSignature","Constructor","xdr","DecoratedSignature","hint","signatureHint","makeDecorated","alreadyOnchain","message","callerLimit","Math","min","callAnswer","breaker","nextRecord","recordTriggerBreak","recordPassTest","loopWithBreakpoints","splitAt","tailRecords","loop","isLegitSharedTransaction","legitSources","decodeTransactionRequest","ledger_attr","transactionHasBeenPushed","tester","recordHasMemo","listSignersKeys","lastLedger","txRecords","toEnvelope","toXDR"],"mappings":"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","file":"multisig.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"multisig\"] = factory();\n\telse\n\t\troot[\"multisig\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","\"use_strict\"\n\nconst env = require(\"@cosmic-plus/jsutils/env\")\n\nif (env.isBrowser) {\n  if (window.StellarSdk === undefined) console.error(\"Missing dependency: StellarSdk\")\n  else module.exports = window.StellarSdk\n} else {\n  module.exports = env.nodeRequire(\"stellar-sdk\")\n}\n","module.exports = require(\"regenerator-runtime\");\n","\"use_strict\"\n/**\n * Methods to detect in which environment we're running.\n *\n * @exports env\n */\nconst env = exports\n\n/**\n * `true` if we are in a browser environment, `false` otherwise.\n */\nenv.isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\"\n\n/**\n * `true` if we are in a node.js environment, `false` otherwise.\n */\nenv.isNode = typeof process !== \"undefined\" && process.versions && process.versions.node\n\n/**\n * The window object, or `undefined`.\n */\nenv.window = env.isBrowser && window\n\n/**\n * The global objet, or `undefined`.\n */\nenv.global = env.isNode && global\n\n/**\n * A require that only have effect in Node.js and that is invisible package\n * bundlers.\n */\nenv.nodeRequire = () => {}\nif (env.isNode) {\n  const stealth_require = eval(\"require\")\n  env.nodeRequire = (module) => stealth_require(module)\n}\n","/**\n * Contains functions that probe the blockchain or federation servers to collect\n * datas.\n *\n * Note: this is copied from js-cosmic-lib and I didnt cleaned it up yet\n *\n * @private\n * @exports resolve\n */\nconst resolve = exports\n\nconst helpers = require(\"@cosmic-plus/jsutils/misc\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\n/**\n *\n */\nresolve.server = function (conf, network = conf.network, server = conf.server) {\n  const passphrase = networkPassphrase(network)\n  if (!passphrase) throw new Error(\"No network selected.\")\n  return getServer(passphrase, server)\n}\n\n/**\n * Select the network to be used by `StellarSdk` as being `c` current\n * network.\n */\nresolve.network = function (conf, network = conf.network, server = conf.server) {\n  let passphrase = networkPassphrase()\n  const newPassphrase = networkPassphrase(network)\n\n  if (passphrase !== newPassphrase) {\n    // eslint-disable-next-line no-console\n    console.log(\"Switch to network: \" + network)\n    StellarSdk.Network.use(new StellarSdk.Network(newPassphrase))\n    passphrase = newPassphrase\n  } else if (!passphrase) {\n    throw new Error(\"No network selected.\")\n  }\n\n  return getServer(passphrase, server)\n}\n\n/**\n * Returns passphrase for `network` or for current network.\n */\nfunction networkPassphrase (network) {\n  if (network) {\n    if (network === \"public\") return StellarSdk.Networks.PUBLIC\n    else if (network === \"test\") return StellarSdk.Networks.TESTNET\n    else return network\n  } else {\n    const currentNetwork = StellarSdk.Network.current()\n    if (currentNetwork) return currentNetwork.networkPassphrase()\n  }\n}\n\n/**\n * If `url` is given, set it as the default horizon instance for `passphrase`\n * network and returns the corresponding Server object.\n * Else, retrieve the default Server object for `passphrase` network.\n */\nconst serverSaves = {}\nconst networkDefaultServer = {}\nfunction getServer (passphrase, url) {\n  if (url) networkDefaultServer[passphrase] = url\n  else url = networkDefaultServer[passphrase]\n  if (!url) throw new Error(\"No default server for requested network.\")\n\n  if (!serverSaves[url]) serverSaves[url] = new StellarSdk.Server(url)\n  return serverSaves[url]\n}\n\n/// Save defaults horizon nodes.\ngetServer(StellarSdk.Networks.PUBLIC, \"https://horizon.stellar.org\")\ngetServer(StellarSdk.Networks.TESTNET, \"https://horizon-testnet.stellar.org\")\n\n/**\n * Configure for how much time the resolved addresses are kept in cache,\n * in seconds. The default is set to 5 minutes to avoid resolving to an outdated\n * address.\n *\n * @const\n */\nresolve.accountCacheExpiration = 5 * 60\n\n/**\n * Contains promise of previously fetched accounts.\n *\n * @private\n * @type {Object}\n */\nconst accountCache = {}\n\n/**\n * Cache `promise` resolving to `address`'s account for `accountCacheExpiration`\n * seconds.\n *\n * @private\n * @param {string} address\n * @param {Promise} promise\n */\nasync function cacheAccount (address, promise) {\n  accountCache[address] = promise\n  await helpers.timeout(resolve.accountCacheExpiration * 1000)\n  delete accountCache[address]\n}\n\n/**\n * Return a promise that resolve to `address` account object, as defined in\n * JavaScript Stellar SDK API reference. `address` can be either a Stellar public\n * key or a federated address (account*example.org).\n * Returned results are cached and re-usable.\n *\n * @param {string} address\n * @return {Promise} Resolve to `address` account object\n */\nresolve.address = function (c, address) {\n  if (accountCache[address]) return accountCache[address]\n  const promise = addressResolver(c, address)\n  cacheAccount(address, promise)\n  return promise\n}\n\n/**\n * Helper for the previous resolve.address function.\n * Resolve to an account object for `address`.\n *\n * @private\n * @param {string} address\n */\nasync function addressResolver (c, address) {\n  // if (address.length !== 56 && !address.match(/.*\\*.*\\..*/)) {\n  // throw new Error('Invalid address: ' + helpers.shorter(address))\n  // }\n\n  const account = await StellarSdk.FederationServer.resolve(address)\n  const publicKey = account.account_id\n  if (!publicKey) throw new Error(\"Invalid response from federation server.\")\n  if (!account.memo_type && account.memo !== undefined) delete account.memo\n  if (address !== publicKey) account.address = address\n  const alias = c.aliases && c.aliases[publicKey]\n  if (alias) account.alias = alias\n  return account\n}\n\n/**\n * Return the AccountResponse object for `address` on `network`.\n *\n * @param {CL}\n * @param {string} address A public key or a federated address\n * @param {string} network Either 'test' or 'public'\n * @return {Object} The account response\n */\nresolve.account = async function (c, address, network = c.network) {\n  const server = resolve.server(c, network)\n  const account = await resolve.address(c, address)\n  const publicKey = account.account_id\n  // try {\n  const accountResponse = await server.loadAccount(publicKey)\n  return accountResponse\n  // } catch (error) {\n  // console.error(error)\n  // const short = helpers.shorter(address)\n  // throw new Error(`Empty account: ${short}`)\n  // }\n}\n\nresolve.accountIsEmpty = async function (conf, id) {\n  // const server = resolve.network(conf)\n  // const account = await resolve.address(conf, id)\n  // const caller = server.accounts()\n  // const data = await caller.accountId(account.account_id).call()\n  // console.log(data)\n  return resolve.account(conf, id).then(() => false).catch(() => true)\n}\n\nresolve.transaction = async function (conf, txHash) {\n  const caller = conf.server.transactions()\n  return caller.transaction(txHash).call()\n}\n\n/**\n * Return the signers for the account at `address` on `network`.\n *\n * @param {CL}\n * @param {string} address Either a public key or a federated address\n * @param {string} network Either 'test' or 'public'\n * @return {Object} The signers object from the account response\n */\nresolve.accountSigners = async function (c, address) {\n  const account = await resolve.account(c, address)\n  return account.signers\n}\n\nresolve.signersTable = async function (conf, ...addresses) {\n  const obj = {}\n\n  for (let index in addresses) {\n    const account = await resolve.account(conf, addresses[index])\n    if (!obj[account.id]) obj[account.id] = account.signers\n  }\n\n  return obj\n}\n\nresolve.signersList = async function (conf, ...addresses) {\n  const array = []\n\n  for (let index in addresses) {\n    const account = await resolve.account(conf, addresses[index])\n    account.signers.forEach(entry => {\n      if (!array.find(a => a.key === entry.key)) array.push(entry.key)\n    })\n  }\n\n  return array\n}\n\nresolve.txSources = function (conf, transaction) {\n  const extra = useExtra(transaction)\n  if (extra.sources) return extra.sources\n\n  const array = [ transaction.source ]\n\n  for (let index in transaction.operations) {\n    const source = transaction.operations[index].source\n    if (source && !array.find(a => a === source)) array.push(source)\n  }\n\n  extra.sources = array\n  return array\n}\n\nresolve.txSignersList = async function (conf, transaction) {\n  const extra = useExtra(transaction)\n  if (!extra.signers) extra.signers = getTxSignersList(conf, transaction)\n  return extra.signers\n}\n\nasync function getTxSignersList (conf, transaction) {\n  const sources = resolve.txSources(conf, transaction)\n  return resolve.signersList(conf, ...sources)\n}\n\nconst extraField = \"extra_ocmultisig\"\nfunction useExtra (obj) {\n  if (!obj[extraField]) obj[extraField] = {}\n  return obj[extraField]\n}\n","\"use_strict\"\n\nconst env = require(\"@cosmic-plus/jsutils/env\")\n\nif (env.isBrowser) {\n  const StellarSdk = require(\"./stellar-sdk\")\n  const hash = \"0000000000000000000000000000000000000000000000000000000000000000\"\n  const memo = new StellarSdk.Memo(\"hash\", hash)\n  module.exports = memo.value.__proto__.constructor\n} else {\n  module.exports = env.nodeRequire(\"safe-buffer\").Buffer\n}\n","/**\n * Publish/read arbitrary data on the blockchain\n *\n * @private\n * @exports messenger\n */\nconst messenger = exports\n\nconst Buffer = require(\"@cosmic-plus/base/buffer\")\nconst loopcall = require(\"@cosmic-plus/loopcall\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst resolve = require(\"./resolve\")\n\n/**\n * Sends a message to `destinations` with using `keypair`. The maximum size for\n * `content` is 6400 bytes minus the number of `destinations`. The cost of\n * emission is 1.01 stroop per destination + 1 stroop per 64 bytes to send. When a\n * destination account doesn't exist, it is created on-the-fly which incur an\n * additional cost of 1 lumen each\n *\n * @param {Keypair} keypair The keypair of the sender.\n * @param {string|Array} destinations An address or an array of addresses (either\n *   account IDs or federated addresses).\n * @param {string|Memo} object  (max. 28 bytes for string).\n * @param {string|Buffer} content The message content.\n * @returns {HorizonResponse}\n */\nmessenger.send = async function (conf, keypair, destinations, object, content) {\n  const senderAccount = await resolve.account(conf, keypair.publicKey())\n  const tx = await messenger.encode(conf, senderAccount, destinations, object, content)\n  tx.sign(keypair)\n  const server = resolve.network(conf)\n  return server.submitTransaction(tx)\n}\n\n/**\n * Build a transaction to be signed by `senderAccount` that sends message to\n * `destinations`. The maximum size for `content` is 6400 bytes minus the number\n * of `destinations`. The cost of emission is 1.01 stroop per destination + 1\n * stroop per 64 bytes to send. When a destination account doesn't exist, it is\n * created on-the-fly which incur an additional cost of 1 lumen each.\n *\n * @param {AccountResponse} senderAccount The AccountResponse for sender\n * @param {string|Array} destination The account IDs where to send the message,\n *     or an array of account IDs.\n * @param {string|Memo} object The message object (max. 28 bytes for string).\n * @param {string|Buffer} content The message content.\n * @return {Transaction} A StellarSdk Transaction object.\n */\nmessenger.encode = async function (conf, senderAccount, destinations, object, content) {\n  const txBuilder = new StellarSdk.TransactionBuilder(senderAccount)\n  addMemo(txBuilder, object)\n  await addDestinations(conf, txBuilder, destinations)\n  addContent(txBuilder, content)\n  return txBuilder.build()\n}\n\nfunction addMemo (txBuilder, memo) {\n  if (typeof memo === \"string\") {\n    const slicedMemo = Buffer.from(memo).slice(0, 28).toString()\n    memo = new StellarSdk.Memo(\"text\", slicedMemo)\n  }\n  if (memo) txBuilder.addMemo(memo)\n}\n\nasync function addDestinations (conf, txBuilder, destinations) {\n  if (!Array.isArray(destinations)) destinations = [ destinations ]\n\n  for (let index in destinations) {\n    const accountId = destinations[index]\n    const addDestination = await linkToAccount(conf, accountId)\n    txBuilder.addOperation(addDestination)\n  }\n}\n\nasync function linkToAccount (conf, accountId) {\n  if (await resolve.accountIsEmpty(conf, accountId)) {\n    return operation(\"createAccount\", {\n      destination: accountId,\n      startingBalance: \"1\"\n    })\n  } else {\n    return operation(\"payment\", {\n      destination: accountId,\n      asset: StellarSdk.Asset.native(),\n      amount: \"0.0000001\"\n    })\n  }\n}\n\nfunction addContent (txBuilder, content) {\n  if (!(content instanceof Buffer)) content = Buffer.from(content)\n  const operationsLeft = 100 - txBuilder.operations.length\n  if (content.length > operationsLeft * 64) {\n    // eslint-disable-next-line no-console\n    console.log(\"Warning: message will be truncated.\")\n  }\n\n  for (let i = 0; i < operationsLeft; i++) {\n    const chunk = content.slice(i * 64, i * 64 + 64)\n    if (chunk.length === 0) break\n    const storeChunk = operation(\"manageData\", { name: \"Send\", value: chunk })\n    txBuilder.addOperation(storeChunk)\n  }\n}\n\nfunction operation (type, params) {\n  return StellarSdk.Operation[type](params)\n}\n\n/**\n * Parse the message object from transaction `txHash`.\n *\n * @param {String} txHash A transaction hash\n * @return {Object} A message object with `sender`, `object`, `date` and\n *     `content` fields.\n */\nmessenger.read = async function (conf, txHash) {\n  const server = resolve.network(conf)\n  const callBuilder = server.transactions().transaction(txHash)\n  const txRecord = await callBuilder.call()\n  return messenger.decode(conf, txRecord)\n}\n\nmessenger.decode = function (conf, txRecord) {\n  const transaction = new StellarSdk.Transaction(txRecord.envelope_xdr)\n  if (transaction.operations.length < 2) return null\n  return {\n    sender: txRecord.source_account,\n    object: extractObject(transaction.memo),\n    date: txRecord.created_at,\n    content: extractContent(transaction),\n  }\n}\n\nfunction extractObject (memo) {\n  if (memo._type === \"hash\" || memo._type === \"return\") {\n    return memo._value.toString(\"hex\")\n  } else {\n    return memo._value.toString(\"utf8\")\n  }\n}\n\nfunction extractContent (transaction) {\n  const chunks = []\n  transaction.operations.forEach(operation => {\n    if (isContentChunk(operation)) chunks.push(operation.value)\n  })\n  return Buffer.concat(chunks)\n}\n\nfunction isContentChunk (operation) {\n  return (operation.type === \"manageData\" && operation.name === \"Send\")\n}\n\nmessenger.list = async function (conf, accountId, options) {\n  const records = await messenger.listRaw(conf, accountId, options)\n  return records.map(record => messenger.decode(conf, record))\n}\n\nmessenger.listRaw = async function (conf, accountId, options = {}) {\n  if (await resolve.accountIsEmpty(conf, accountId)) return []\n  const server = resolve.server(conf)\n  const callBuilder = server.transactions().forAccount(accountId)\n  if (options.cursor) callBuilder.cursor(options.cursor)\n  if (options.order) callBuilder.order(options.order)\n  options.filter = makeMessageFilter(options.filter)\n  return loopcall(callBuilder, options)\n}\n\nfunction makeMessageFilter (baseFilter) {\n  return function (record) {\n    if (record.operation_count < 2) return false\n    if (baseFilter) return baseFilter(record)\n    else return true\n  }\n}\n\nmessenger.find = async function (conf, publicKey, func) {\n  const records = await messenger.list(conf, publicKey, { limit: 1, filter: func })\n  if (records[0]) return records[0]\n}\n","/**\n * Environment detection and library loading.\n */\n\n/**\n * Automatically pass library network configuration to underlying methods.\n */\n\n// baseConf may be modified only by multisig.useNetwork().\nconst baseConf = {}\n\nfunction prepare (module) {\n  const layer = {}\n  for (let name in module) {\n    if (typeof module[name] !== \"function\") continue\n    layer[name] = passConfig(module[name])\n  }\n\n  return Object.assign({}, module, layer)\n}\n\nfunction passConfig (func) {\n  return function (...params) {\n    // Make a one-time configuration object and pass it to the underlying\n    // function along with user parameters.\n    const conf = Object.create(baseConf)\n    return func(conf, ...params)\n  }\n}\n\nmodule.exports = prepare(require(\"./multisig\"))\n","/**\n * @exports multisig\n */\nconst multisig = exports\n\nconst axios = require(\"@cosmic-plus/base/axios\")\nconst Buffer = require(\"@cosmic-plus/base/buffer\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst resolve = require(\"./resolve\")\nconst shareSignatures = require(\"./share-signatures\")\nconst shareTransactions = require(\"./share-transactions\")\n\nmultisig.isEnabled = async function (conf, user) {\n  conf.multisig = await multisig.config(conf, user)\n  return !!conf.multisig\n}\n\nmultisig.config = async function (conf, user) {\n  const account = await getAccount(conf, user)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (conf.multisig.id) return conf.multisig\n  else return null\n}\n\nmultisig.enable = async function (conf, keypair, options) {\n  const account = await getAccount(conf, keypair)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (conf.multisig.id) {\n    // eslint-disable-next-line no-console\n    console.log(\"On-chain signature sharing is already enabled on this account.\")\n    return null\n  }\n\n  const transaction = makeSetupTx(conf, account, options)\n  return sendOrReturn(conf, transaction, keypair)\n}\n\nmultisig.setup = async function (conf, keypair, options) {\n  const account = await getAccount(conf, keypair)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error(\"On-chain signature sharing in not enabled on this account.\")\n  }\n\n  const transaction = makeSetupTx(conf, account, options)\n  return sendOrReturn(conf, transaction, keypair)\n}\n\nmultisig.disable = async function (conf, keypair) {\n  const account = await getAccount(conf, keypair)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    // eslint-disable-next-line no-console\n    console.log(\"On-chain signature sharing is already disabled on this account.\")\n    return null\n  }\n\n  const transaction = makeDisableTx(conf, account)\n  return sendOrReturn(conf, transaction, keypair)\n}\n\n/**\n *\n * @parameter {Transaction|XDR} transaction A signed transaction\n * @parameter {Keypair} [keypair]\n * @returns {Transaction|HorizonResponse}\n */\nmultisig.pushSignatures = async function (conf, transaction, keypair) {\n  const account = await resolve.account(conf, transaction.source)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error(\"On-chain signature sharing in not enabled on this account.\")\n  }\n\n  saveNetwork()\n  const senderId = keypair.publicKey()\n  await checkAccountExist(conf.multisig, senderId)\n  const pushTx = await shareSignatures.makePushTx(conf, transaction, senderId)\n  const horizonResponse = sendOrReturn(conf.multisig, pushTx, keypair)\n  horizonResponse.finally(restoreNetwork)\n  return horizonResponse\n}\n\nmultisig.pullSignatures = async function (conf, transaction) {\n  const account = await getAccount(conf, transaction.source)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error(\"On-chain signature sharing in not enabled on this account.\")\n  }\n\n  saveNetwork()\n  const bool = await shareSignatures.pull(conf, transaction)\n  restoreNetwork()\n  return bool\n}\n\nmultisig.pushTransaction = async function (conf, transaction, keypair) {\n  const account = await getAccount(conf, keypair)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error(\"On-chain transaction sharing is not enabled on this account.\")\n  }\n\n  const senderId = keypair.publicKey()\n  const legitSources = account.signers.map(signer => signer.key)\n  if (!legitSources.find(source => source === senderId)) {\n    throw new Error(\"Not a co-signer for transaction source account: \" + senderId)\n  }\n\n  saveNetwork()\n  await checkAccountExist(conf.multisig, senderId)\n  /// Shadow transaction signatures without modifying the underlying object.\n  transaction = Object.create(transaction)\n  transaction.signatures = []\n  const pushTx = await shareTransactions.makePushTx(conf, transaction, senderId)\n  const horizonResponse = sendOrReturn(conf.multisig, pushTx, keypair)\n  horizonResponse.finally(restoreNetwork)\n  return horizonResponse\n}\n\nmultisig.listTransactions = async function (conf, user, ledger) {\n  const account = await getAccount(conf, user)\n  conf.multisig = parseMultisigConfig(account)\n\n  if (!conf.multisig.id) {\n    throw new Error(\"On-chain transaction sharing is not enabled on this account.\")\n  }\n\n  return shareTransactions.list(conf, account, ledger)\n}\n\nmultisig.useNetwork = function (conf, network, server) {\n  return resolve.network(conf.__proto__, network, server)\n}\n\n/** ***************************** Routines *************************************/\n\n/**\n * Returns the transaction that enable signature sharing for `account`.\n */\nfunction makeSetupTx (conf, account, options = {}) {\n  const multisigId = options.id || conf.multisig.id || StellarSdk.Keypair.random().publicKey()\n  const txBuilder = new StellarSdk.TransactionBuilder(account)\n  txBuilder.addMemo(new StellarSdk.Memo(\"text\", \"Setup signature sharing\"))\n\n  let isEmpty = true\n  const setData = function (name, value) {\n    txBuilder.addOperation(StellarSdk.Operation.manageData({ name: name, value: value }))\n    isEmpty = false\n  }\n\n  if (multisigId !== conf.multisig.id) setData(\"config:multisig\", multisigId)\n\n  if (!options.network) options.network = \"test\"\n  if ((options.network || conf.multisig.network) &&\n    options.network !== conf.multisig.network\n  ) {\n    setData(\"config:multisig:network\", options.network)\n  }\n\n  if ((options.server || conf.multisig.server) &&\n    options.server !== conf.multisig.server) {\n    setData(\"config:multisig:server\", options.server)\n  }\n\n  if (isEmpty) return null\n  else return txBuilder.build()\n}\n\n/**\n * Returns the transaction that disable signature sharing for `account`.\n */\nfunction makeDisableTx (conf, account) {\n  const txBuilder = new StellarSdk.TransactionBuilder(account)\n  txBuilder.addMemo(new StellarSdk.Memo(\"text\", \"Disable signature sharing\"))\n\n  const setData = function (name, value) {\n    txBuilder.addOperation(StellarSdk.Operation.manageData({ name: name, value: value }))\n  }\n\n  setData(\"config:multisig\", null)\n  if (account.data_attr[\"multisig:network\"]) {\n    setData(\"config:multisig:network\", null)\n  }\n  if (account.data_attr[\"multisig:server\"]) {\n    setData(\"config:multisig:server\", null)\n  }\n\n  return txBuilder.build()\n}\n\n/** ************************ Generic helpers ***********************************/\n\n/**\n * Returns the multisig configuration.\n */\nfunction parseMultisigConfig (account) {\n  return {\n    id: readAttr(account.data_attr[\"config:multisig\"]),\n    network: readAttr(account.data_attr[\"config:multisig:network\"]) || \"test\",\n    server: readAttr(account.data_attr[\"config:multisig:server\"])\n  }\n}\nfunction readAttr (str64) {\n  if (str64) return Buffer.from(str64, \"base64\").toString(\"utf8\")\n}\n\n/**\n * If `user` is already an AccountResponse, return it. Else resolve it.\n */\nasync function getAccount (conf, user) {\n  if (isAccountResponse(user)) return user\n  else if (user instanceof StellarSdk.Keypair) user = user.publicKey()\n  else if (user instanceof StellarSdk.Account) user = user._accountId\n  else if (typeof user !== \"string\") throw new TypeError(\"Invalid user parameter.\")\n\n  const account = await resolve.account(conf, user)\n  return account\n}\nfunction isAccountResponse (obj) {\n  return obj && obj._baseAccount && obj._baseAccount instanceof StellarSdk.Account\n}\n\n/**\n * Create `accoundId` if it is empty & on test network.\n */\nasync function checkAccountExist (conf, accountId) {\n  if (await resolve.accountIsEmpty(conf, accountId)) {\n    if (conf.network === \"test\") {\n      return axios(\"https://friendbot.stellar.org/?addr=\" + accountId)\n    } else {\n      throw new Error(\"Account doesn't exist on the requested network: \" + conf.network)\n    }\n  }\n}\n\n/**\n * If `value` is a transaction, sign it with `keypair` and send it to horizon.\n * Else, return `value`.\n */\nasync function sendOrReturn (conf, value, keypair) {\n  if (value instanceof StellarSdk.Transaction) {\n    const server = resolve.network(conf)\n    value.sign(keypair)\n    const responsePromise = server.submitTransaction(value)\n    responsePromise.catch(error => console.error(error.response))\n    return responsePromise\n  } else {\n    return value\n  }\n}\n\n/**\n * Save/Restore Network\n */\nlet networkBackup\n\nfunction saveNetwork () {\n  networkBackup = StellarSdk.Network.current()\n}\n\nfunction restoreNetwork () {\n  if (StellarSdk.Network.current() !== networkBackup) {\n    // eslint-disable-next-line no-console\n    console.log(\"Restore network\")\n    StellarSdk.Network.use(networkBackup)\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","\"use_stict\"\n\nconst env = require(\"@cosmic-plus/jsutils/env\")\n\nif (env.isBrowser) {\n  module.exports = require(\"./stellar-sdk\").axios\n} else {\n  module.exports = env.nodeRequire(\"axios\")\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\"use strict\"\n/**\n * Various independent helpers.\n *\n * @exports misc\n */\nconst misc = exports\n\nconst env = require(\"./env\")\nconst html = env.isBrowser && require(\"./html\")\n\n/**\n * Return a function that will execute `thunk` when called, and return the\n * result of its execution as a Promise. Handle async and regular functions\n * equally. Any error will be carried to .catch.\n *\n * @param {function} thunk A parameterless function\n * @return {function}\n */\nmisc.delay = function (thunk) {\n  let firstCall = true\n  let memoized\n  return function () {\n    if (firstCall) {\n      firstCall = false\n      memoized = new Promise((resolve) => resolve(thunk()))\n    }\n    return memoized\n  }\n}\n\n/**\n * Return a promise that takes `x` seconds to resolve\n *\n * @param {number} x Time to wait\n * @return {Promise}\n */\nmisc.timeout = function (x) {\n  return new Promise(function (resolve) { setTimeout(resolve, x) })\n}\n\n/**\n * Return `string` with first letter capitalized.\n *\n * @param {string} string\n * @return {string}\n */\nmisc.capitalize = function (string) {\n  return string.substr(0, 1).toUpperCase() + string.slice(1)\n}\n\n/**\n * Return shortified `string` if longer than 30 characters; else return\n * `string`.\n *\n * @param {string}\n * @return {string}\n */\nmisc.shorter = function (string) {\n  if (string.length > 50) {\n    return string.substr(0, 5) + \"...\" + string.substr(-5)\n  } else {\n    return string\n  }\n}\n\n/**\n * Return a function that copy `string` into user clipboard.\n *\n * @private\n * @param {string} string\n * @return {function}\n */\nmisc.copy = env.isBrowser && function (string) {\n  const textBox = html.create(\"textarea\", {}, string)\n  html.append(html.grab(\"body\"), textBox)\n  html.copyContent(textBox)\n  html.destroy(textBox)\n}\n\n/**\n * Set `object` property `name` as hidden, and set it to `value`.\n */\nmisc.setHiddenProperty = function (object, name, value) {\n  Object.defineProperty(object, name, { value: value, enumerable: false, writable: true })\n}\n\n/**\n * Log an error stating that `before` is deprecated.\n *\n * @param {string} date YYYY-MM or YYYY-MM-DD\n * @param {string} before Old function/property\n * @param {string} after New function/property\n */\nmisc.deprecated = function (date, before, after) {\n  console.error(`Warning: ${before} is deprecated and will be removed after \\\n${date}. Please use ${after} instead.`)\n}\n\n/**\n * Creates and returns an extra field (`extra_ticot`) for **obj**. This allow to\n * append additional information to objects without mess.\n *\n * @param {Object}\n * @return {Object} The extra field object.\n */\nmisc.useExtra = function (obj) {\n  if (!obj[extraField]) obj[extraField] = {}\n  return obj[extraField]\n}\nconst extraField = \"_extra_ticot\"\n\n/**\n * Test if **string** is made of printable UTF8 characters. This is a simplified\n * test that is not robust.\n *\n * @param {String}\n * @return {Boolean}\n */\nmisc.isUtf8 = function (string) {\n  // eslint-disable-next-line no-control-regex\n  return !string.match(/[\\0-\\x1F\\x7F-\\x9F\\xAD\\uD7FC-\\uF8FF]/)\n}\n\n/**\n * Test if **string** is a base64 string.\n *\n * @param  {String} string\n * @return {Boolean}\n */\nmisc.isBase64 = function (string) {\n  return !!string.match(/^[0-9a-zA-Z+/]*=*$/)\n}","\"use_strict\"\n/**\n * Utilities to manipulate HTML element from javascript.\n *\n * Those may not be feature complete, as this library purpose is to ease\n * cosmic-lib and Stellar Authenticator development, rather than provide a\n * generic-case toolbox.\n *\n * @exports html\n */\nconst html = exports\n\n/// Prevent node failure when accidentaly loading this file.\nconst env = require(\"./env\")\nconst document = env.window ? env.window.document : undefined\nif (env.isNode) console.error(\"@cosmic-plus/jsutils/html is a browser-only module\")\n\n/**\n * Append `childs` as the end of `element`.\n *\n * @param {HTMLElement} element\n * @param {...(HTMLElement|String|Error)} childs\n */\nhtml.append = function (element, ...childs) {\n  childs.forEach(child => {\n    if (typeof child === \"string\" || typeof child === \"number\" || child instanceof Error) {\n      element.appendChild(document.createTextNode(child))\n    } else {\n      element.appendChild(child)\n    }\n  })\n}\n\n/**\n * Add `newClass` as an additionnal class for `element`.\n *\n * @param {HTMLElement} element\n * @param {string} newClass\n * */\nhtml.appendClass = function (element, newClass) {\n  element.className += \" \" + newClass\n}\n\n/**\n * Remove everything inside `element`.\n *\n * @param {HTMLElement} elements\n * */\nhtml.clear = function (...elements) {\n  elements.forEach(element => { element.innerHTML = \"\" })\n}\n\n/**\n * Copy text inside `element`. `element` should be a textbox like textarea or\n * text input.\n *\n * @param {HTMLElement} element\n * @param\n * */\nhtml.copyContent = function (element) {\n  /// Don't copy complete box content twice / when user made a selection.\n  if (element.selectionStart !== element.selectionEnd) return\n\n  if (element.select) {\n    element.select()\n  } else if (window.getSelection) {\n    const range = document.createRange()\n    range.selectNode(element)\n    window.getSelection().removeAllRanges()\n    window.getSelection().addRange(range)\n  } else {\n    return\n  }\n  return document.execCommand(\"copy\")\n}\n\n/**\n * Return a newly created HTML element whose tag is `name`, attributes\n * `attributes` and childs `childs`.\n *\n * @param {string} name\n * @param {object|string} [attributes|className|ID]\n * @param {...HTMLElement} [childs]\n */\nhtml.create = function (name, attributes, ...childs) {\n  if (!name) throw new Error(\"Missing tag name\")\n\n  const element = document.createElement(name)\n\n  if (typeof attributes === \"string\") {\n    switch (attributes.substr(0, 1)) {\n    case \"#\": element.id = attributes.substr(1); break\n    case \".\": element.className = attributes.substr(1); break\n    default: throw new Error(\"Unhandled attribute\")\n    }\n  } else {\n    let field; for (field in attributes) {\n      element[field] = attributes[field]\n    }\n  }\n\n  if (childs.length > 0) html.append(element, ...childs)\n\n  return element\n}\n\n/**\n * Destroy `element`.\n *\n * @param {HTMLElement} element\n * */\nhtml.destroy = function (element) {\n  try {\n    element.innerHTML = \"\"\n    if (element.parentNode) element.parentNode.removeChild(element)\n  } catch (error) { console.error(error) }\n}\n\n/**\n * Return the first element matching `pattern`.\n * If `name` starts with `#`, it will match against IDs.\n * If `name` starts with `.`, it will match against classes.\n * If `name` is a plain word, it will match against tags.\n * If `parent` is given, it will look recursively in `parent` childs.\n *\n * @param {string} pattern\n * @param {HTMLElement} [parent=document]\n * */\nhtml.grab = function (pattern, parent = document) {\n  return parent.querySelector(pattern)\n}\n\n/**\n * Set the `style.display` property of `...elements` to `block`.\n *\n * @param {...HTMLElement} elements\n */\nhtml.show = function (...elements) {\n  elements.forEach(element => element.hidden = false)\n}\n\n/** Set the `style.display` property of `...elements` to `none`.\n *\n * @param {...HTMLElement} elements\n */\nhtml.hide = function (...elements) {\n  elements.forEach(element => element.hidden = true)\n}\n\n/**\n * Replace `element1` by `element2`.\n *\n * @param {HTMLElement} element1 The element to replace.\n * @param {HTMLElement} element2 The element to put in place of `element1`.\n */\nhtml.replace = function (element1, element2) {\n  element1.parentNode.replaceChild(element2, element1)\n}\n\n/**\n * Set the content of element to ...childs. Any previous content will be erased.\n *\n * @param {HTMLElement} element\n * @param {...HTMLElement} childs\n */\nhtml.rewrite = function (element, ...childs) {\n  html.clear(element)\n  html.append(element, ...childs)\n}\n\n/**\n * Add `string` as additional CSS definitions for the current document.\n *\n * @param {string} styles CSS definitions\n */\nhtml.addStyles = function (styles) {\n  const styleNode = html.create(\"style\", { type: \"text/css\" }, styles)\n  html.append(headNode, styleNode)\n}\nconst headNode = html.grab(\"head\")\n","\"use_strict\"\nconst shareSignatures = exports\n\nconst Buffer = require(\"@cosmic-plus/base/buffer\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst messenger = require(\"./messenger\")\nconst resolve = require(\"./resolve\")\n\n/**\n * Returns a sharing transaction that will push any new signature from\n * `transaction`. The sharing transactions should be signed by `accountId` and\n * sent to `conf.multisig.network`.\n */\nshareSignatures.makePushTx = async function (conf, transaction, senderId) {\n  const signatures = transaction.signatures.map(entry => entry.signature())\n  if (!transaction.signatures.length) return null\n\n  /// Push only signatures that have not been uploaded yet.\n  const txHash = transaction.hash()\n  const signers = await resolve.txSignersList(conf, transaction)\n  const alreadyOnchain = await getSignatures(conf, txHash, signers)\n  const newSignatures = onlyInFirstArray(signatures, alreadyOnchain)\n  if (!newSignatures.length) return null\n\n  /// Make the transaction that puts signatures on-chain.\n  const sender = await resolve.account(conf.multisig, senderId)\n  const destination = conf.multisig.id\n  const object = new StellarSdk.Memo(\"return\", txHash)\n  const message = Buffer.concat(signatures)\n  return messenger.encode(conf.multisig, sender, destination, object, message)\n}\n\nfunction onlyInFirstArray (array1, array2) {\n  return array1.filter(x => !array2.find(y => x.toString() === y.toString()))\n}\n\n/**\n * Pull signatures for `transaction` published on `conf.multisig.network`.\n */\nshareSignatures.pull = async function (conf, transaction) {\n  const txHash = transaction.hash()\n  const signers = await resolve.txSignersList(conf, transaction)\n  const signatures = await getSignatures(conf, txHash, signers)\n  return mergeSignatures(transaction, signatures, txHash, signers)\n}\n\n/**\n * Returns an array of the signatures shared on-chain for `txHash`.\n */\nasync function getSignatures (conf, txHash, signers) {\n  const txHash64 = txHash.toString(\"base64\")\n\n  if (await resolve.accountIsEmpty(conf.multisig, conf.multisig.id)) {\n    return []\n  }\n\n  /// Get transactions that embed shared signatures for transaction.\n  const records = await messenger.listRaw(conf.multisig, conf.multisig.id, {\n    filter: tx => tx.memo_type === \"return\" && tx.memo === txHash64\n  })\n\n  const signatures = []\n  for (let index in records) {\n    const txRecord = records[index]\n    const transaction = new StellarSdk.Transaction(txRecord.envelope_xdr)\n    if (!isTxSourceLegit(transaction, signers)) continue\n    transaction.operations.forEach(operation => {\n      if (containsSignature(operation)) signatures.push(operation.value)\n    })\n  }\n\n  return signatures\n}\n\nfunction isTxSourceLegit (transaction, signers) {\n  return signers.find(signer => signer === transaction.source)\n}\n\nfunction containsSignature (operation) {\n  return operation.type === \"manageData\" && operation.name === \"Send\"\n}\n\n/**\n * Test `signatures` against `signers` and add new legit ones to `transaction`.\n */\nfunction mergeSignatures (transaction, signatures, txHash, signers) {\n  let newSignatures = false\n  const txSigs = transaction.signatures.map(x => x.signature().toString())\n  const keys = signers.map(x => StellarSdk.Keypair.fromPublicKey(x))\n\n  for (let index in signatures) {\n    const signature = signatures[index]\n    if (txSigs.find(x => x === signature.toString())) continue\n    const signer = keys.find(x => x.verify(txHash, signature))\n    if (!signer) continue\n    const decoratedSignature = makeDecorated(signer, signature)\n    transaction.signatures.push(decoratedSignature)\n    txSigs.push(signature.toString())\n    newSignatures = true\n  }\n\n  return newSignatures\n}\n\nfunction makeDecorated (signer, signature) {\n  const Constructor = StellarSdk.xdr.DecoratedSignature\n  return new Constructor({ hint: signer.signatureHint(), signature: signature })\n}\n","'use_strict'\n/**\n * Concatenate records from `callBuilder` call response that pass `options.filter`\n * until `options.limit` is reached, `options.breaker` returns a true value or\n * no more are available.\n * \n * **Warning**: Please be aware that unlimited loopcall can iterate over the\n * full set of data available on a network, sending thousands of request to the\n * API. Please use it wisely :)\n * \n * @example\n * const callBuilder = server.transactions().forAccount('GDE...YBX')\n * const allTransactions = await loopcall(callBuilder)\n * const transactionsWithoutMemo = await loopcall(callBuilder, {\n *   filter: (tx) => !tx.memo\n * })\n * const thisYearTransactions = await loopcall(callBuilder, {\n *   breaker: (tx) => tx.created_at.substr(0,4) < 2018\n * })\n * \n * @example\n * const callBuilder = server.operations().order('asc')\n * const the2000firstOperations = await loopcall(callBuilder, { limit: 2000 })\n * const the20firstAccountCreations = await loopcall(callBuilder, {\n *   limit: 20,\n *   filter: (op) => op.type === 'create_account'\n * })\n * \n * @param {CallBuilder} callBuilder A CallBuilder object\n * @param {Object} [options]\n * @param {integer} [options.limit] The maximum number of record to return\n * @param {function} [options.filter] A function that accept a record argument. It\n *   is called with each fetched record. If it returns a true value, the record\n *   is added to returned records, else it is discarded.\n * @param {function} [options.breaker] A function that accept a record argument.\n *   It is called with each fetched record. If it returns a true value, the loop\n *   ends and the array of the filtered records is returned.\n * @returns {Array} The fetched records\n */\nmodule.exports = async function (callBuilder, options = {}) {\n  const callerLimit = options.limit ? Math.min(options.limit, 200) : 200\n  const callAnswer = await callBuilder.limit(callerLimit).call()\n\n  if (options.filter || options.breaker) {\n    return loopWithBreakpoints(callAnswer, options)\n  } else {\n    return loop(callAnswer, options.limit)\n  }\n}\n\n/**\n * Concatenate records from `callAnswer` pages until `limit` is reached or no\n * more are available.\n * \n * @param {Object} callAnswer A resolved CallBuilder.call() object\n * @param {integer} limit The maximum number of record to return\n * @returns {Array} The fetched records\n */\nasync function loop (callAnswer, limit) {\n  let records = []\n\n  while (callAnswer.records.length) {\n    if (limit) {\n      const length = records.length + callAnswer.records.length\n      if (limit === length) {\n        return records.concat(callAnswer.records)\n      } else if (length > limit) {\n        const splitAt = limit - records.length\n        const tailRecords = callAnswer.records.slice(0, splitAt)\n        return records.concat(tailRecords)\n      }\n    }\n    records = records.concat(callAnswer.records)\n    callAnswer = await callAnswer.next()\n  }\n  \n  return records\n}\n\n/**\n * Concatenate records from `callAnswer` pages that pass `options.filter` until\n * `options.limit` is reached, `options.breaker` returns a true value or no more\n * are available.\n * \n * @param {Object} callAnswer A resolved CallBuilder.call() object\n * @param {Object} [options]\n * @param {integer} [options.limit] The maximum number of record to return\n * @param {function} [options.filter] A function that accept a record argument. It\n *   is called with each fetched record. If it returns a true value, the record\n *   is added to returned records, else it is discarded.\n * @param {function} [options.breaker] A function that accept a record argument.\n *   It is called with each fetched record. If it returns a true value, the loop\n *   ends and the array of the filtered records is returned.\n * @returns {Array} The fetched records\n */\nasync function loopWithBreakpoints (callAnswer, options) {\n  const records = []\n  \n  while (callAnswer.records.length) {\n    for (let index in callAnswer.records) {\n      if (options.limit && records.length === options.limit) return records\n      const nextRecord = callAnswer.records[index]\n      if (options.breaker) {\n        const recordTriggerBreak = await options.breaker(nextRecord)\n        if (recordTriggerBreak) return records\n      }\n      if (options.filter) {\n        const recordPassTest = await options.filter(nextRecord)\n        if (!recordPassTest) continue\n      }\n      records.push(nextRecord)\n    }\n    callAnswer = await callAnswer.next()\n  }\n  \n  return records\n}\n","\"use_strict\"\nconst shareTransactions = exports\n\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst messenger = require(\"./messenger\")\nconst resolve = require(\"./resolve\")\n\nshareTransactions.list = async function (conf, account, lastLedger = 0) {\n  if (typeof lastLedger !== \"number\") lastLedger = +lastLedger\n\n  const options = {}\n  const legitSources = listSignersKeys(account)\n  options.filter = (record) => isLegitSharedTransaction(record, legitSources)\n  if (lastLedger) options.breaker = (record) => record.ledger_attr <= lastLedger\n  const txRecords = await messenger.listRaw(conf.multisig, conf.multisig.id, options)\n\n  return txRecords.map(decodeTransactionRequest)\n}\n\nfunction isLegitSharedTransaction (record, legitSources) {\n  if (record.memo_type !== \"hash\") return false\n  return legitSources.find(accountId => accountId === record.source_account)\n}\n\nfunction decodeTransactionRequest (record) {\n  const message = messenger.decode(null, record)\n  message.ledger = record.ledger_attr\n  message.xdr = message.content.toString(\"base64\")\n  delete message.content\n  delete message.object\n  return message\n}\n\nshareTransactions.makePushTx = async function (conf, transaction, senderId) {\n  const txHash = transaction.hash()\n  if (await transactionHasBeenPushed(conf, txHash)) {\n    // eslint-disable-next-line no-console\n    console.log(\"Transaction have already been pushed\")\n    return null\n  }\n\n  /// Make the transaction that puts transaction on-chain.\n  const sender = await resolve.account(conf.multisig, senderId)\n  const destination = conf.multisig.id\n  const object = new StellarSdk.Memo(\"hash\", txHash)\n  const content = transaction.toEnvelope().toXDR()\n  return messenger.encode(conf.multisig, sender, destination, object, content)\n}\n\nasync function transactionHasBeenPushed (conf, txHash) {\n  const txHash64 = txHash.toString(\"base64\")\n  const tester = (record) => recordHasMemo(record, \"hash\", txHash64)\n  const record = await messenger.find(conf.multisig, conf.multisig.id, tester)\n  return !!record\n}\n\nfunction recordHasMemo (record, type, value) {\n  return record.memo_type === type && record.memo === value\n}\n\nfunction listSignersKeys (account) {\n  return account.signers.map(signer => signer.key)\n}\n"],"sourceRoot":""}