{"version":3,"sources":["webpack://multisig/webpack/universalModuleDefinition","webpack://multisig/webpack/bootstrap","webpack://multisig/./node_modules/@cosmic-plus/base/es5/stellar-sdk.js","webpack://multisig/./node_modules/@babel/runtime/regenerator/index.js","webpack://multisig/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://multisig/./es5/resolve.js","webpack://multisig/./node_modules/@cosmic-plus/jsutils/es5/env.js","webpack://multisig/./node_modules/@cosmic-plus/base/es5/buffer.js","webpack://multisig/./es5/messenger.js","webpack://multisig/./es5/index.js","webpack://multisig/./es5/multisig.js","webpack://multisig/./node_modules/regenerator-runtime/runtime.js","webpack://multisig/./node_modules/@cosmic-plus/base/es5/axios.js","webpack://multisig/./node_modules/process/browser.js","webpack://multisig/(webpack)/buildin/global.js","webpack://multisig/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://multisig/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://multisig/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://multisig/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://multisig/./node_modules/@cosmic-plus/jsutils/es5/misc.js","webpack://multisig/./es5/share-signatures.js","webpack://multisig/./node_modules/@cosmic-plus/loopcall/es5/index.js","webpack://multisig/./node_modules/@cosmic-plus/loopcall/node_modules/@babel/runtime/regenerator/index.js","webpack://multisig/./node_modules/@cosmic-plus/loopcall/node_modules/regenerator-runtime/runtime.js","webpack://multisig/./node_modules/@cosmic-plus/loopcall/node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://multisig/./es5/share-transactions.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","env","isBrowser","undefined","StellarSdk","console","error","nodeRequire","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","done","Promise","then","fn","self","this","args","arguments","apply","err","_toConsumableArray","_regeneratorRuntime","_asyncToGenerator","helpers","networkPassphrase","network","Networks","PUBLIC","TESTNET","currentNetwork","Network","current","server","conf","length","passphrase","Error","getServer","newPassphrase","log","use","serverSaves","networkDefaultServer","url","Server","accountCacheExpiration","accountCache","_cacheAccount","mark","_callee8","address","promise","wrap","_context8","prev","next","timeout","stop","_addressResolver","_callee9","account","publicKey","alias","_context9","FederationServer","sent","account_id","memo_type","memo","aliases","abrupt","getTxSignersList","_x17","_x18","_getTxSignersList","_callee10","transaction","sources","_context10","txSources","signersList","concat","_x3","_x4","addressResolver","_x","_x2","cacheAccount","_ref","_callee","accountResponse","_args","_context","loadAccount","_x5","_x6","accountIsEmpty","_ref2","_callee2","id","_context2","_x7","_x8","_ref3","_callee3","txHash","caller","_context3","transactions","_x9","_x10","accountSigners","_ref4","_callee4","_context4","signers","_x11","_x12","signersTable","_ref5","_callee5","obj","_len","addresses","_key","index","_args5","_context5","Array","t0","keys","t1","_x13","_ref6","_callee6","array","_len2","_key2","_args6","_context6","forEach","entry","find","a","push","_x14","extra","useExtra","source","_loop","operations","txSignersList","_ref7","_callee7","_context7","_x15","_x16","extraField","process","global","document","isNode","versions","node","isEmbedded","top","stealth_require","eval","Memo","__proto__","constructor","Buffer","messenger","loopcall","addMemo","txBuilder","slicedMemo","from","slice","toString","addDestinations","_addDestinations","destinations","accountId","addDestination","isArray","linkToAccount","addOperation","_linkToAccount","operation","destination","startingBalance","asset","Asset","amount","addContent","content","operationsLeft","chunk","storeChunk","type","params","Operation","extractObject","_type","_value","extractContent","chunks","isContentChunk","makeMessageFilter","baseFilter","record","operation_count","send","keypair","senderAccount","tx","encode","sign","submitTransaction","TransactionBuilder","fee","setTimeout","InfiniteTimeout","build","read","callBuilder","txRecord","decode","Transaction","envelope_xdr","sender","source_account","date","created_at","list","options","records","listRaw","map","_x19","_x20","forAccount","cursor","order","filter","_x21","_x22","func","limit","_x23","_x24","_x25","baseConf","passConfig","layer","assign","prepare","networkBackup","multisig","axios","shareSignatures","shareTransactions","makeSetupTx","multisigId","Keypair","random","isEmpty","setData","manageData","makeDisableTx","data_attr","parseMultisigConfig","readAttr","str64","getAccount","_getAccount","user","_baseAccount","Account","_accountId","TypeError","checkAccountExist","_x26","_x27","_checkAccountExist","_callee11","_context11","sendOrReturn","_x28","_x29","_x30","_sendOrReturn","_callee12","responsePromise","_context12","response","saveNetwork","restoreNetwork","isEnabled","config","enable","setup","disable","pushSignatures","senderId","pushTx","horizonResponse","makePushTx","pullSignatures","bool","pull","pushTransaction","_ref8","signer","signatures","listTransactions","_ref9","ledger","useNetwork","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","awrap","async","iter","reverse","pop","skipTempReset","charAt","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","e","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","argv","version","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","g","arrayWithoutHoles","iterableToArray","nonIterableSpread","arr","arr2","misc","delay","thunk","memoized","firstCall","x","capitalize","string","substr","toUpperCase","shorter","setHiddenProperty","configurable","deprecated","before","after","isUtf8","match","isBase64","day","time","Date","toISOString","replace","copy","onlyInFirstArray","array1","array2","y","getSignatures","_getSignatures","txHash64","isTxSourceLegit","containsSignature","mergeSignatures","newSignatures","txSigs","signature","fromPublicKey","verify","decoratedSignature","Constructor","xdr","DecoratedSignature","hint","signatureHint","makeDecorated","alreadyOnchain","message","hash","loop","callAnswer","splitAt","tailRecords","loopWithBreakpoints","_loopWithBreakpoints","nextRecord","breaker","callerLimit","Math","min","isLegitSharedTransaction","legitSources","decodeTransactionRequest","ledger_attr","transactionHasBeenPushed","_transactionHasBeenPushed","tester","recordHasMemo","listSignersKeys","lastLedger","txRecords","toEnvelope","toXDR"],"mappings":"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","file":"oc-multisig.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"multisig\"] = factory();\n\telse\n\t\troot[\"multisig\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","\"use_strict\";\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nif (env.isBrowser) {\n  if (window.StellarSdk === undefined) console.error(\"Missing dependency: StellarSdk\");else module.exports = window.StellarSdk;\n} else {\n  module.exports = env.nodeRequire(\"stellar-sdk\");\n}","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","var _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\n/**\n * Contains functions that probe the blockchain or federation servers to collect\n * datas.\n *\n * Note: this is copied from js-cosmic-lib and I didnt cleaned it up yet\n *\n * @private\n * @exports resolve\n */\nvar resolve = exports;\n\nvar helpers = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n/**\n *\n */\n\n\nresolve.server = function (conf) {\n  var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : conf.network;\n  var server = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : conf.server;\n  var passphrase = networkPassphrase(network);\n  if (!passphrase) throw new Error(\"No network selected.\");\n  return getServer(passphrase, server);\n};\n/**\n * Select the network to be used by `StellarSdk` as being `c` current\n * network.\n */\n\n\nresolve.network = function (conf) {\n  var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : conf.network;\n  var server = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : conf.server;\n  var passphrase = networkPassphrase();\n  var newPassphrase = networkPassphrase(network);\n\n  if (passphrase !== newPassphrase) {\n    // eslint-disable-next-line no-console\n    console.log(\"Switch to network: \" + network);\n    StellarSdk.Network.use(new StellarSdk.Network(newPassphrase));\n    passphrase = newPassphrase;\n  } else if (!passphrase) {\n    throw new Error(\"No network selected.\");\n  }\n\n  return getServer(passphrase, server);\n};\n/**\n * Returns passphrase for `network` or for current network.\n */\n\n\nfunction networkPassphrase(network) {\n  if (network) {\n    if (network === \"public\") return StellarSdk.Networks.PUBLIC;else if (network === \"test\") return StellarSdk.Networks.TESTNET;else return network;\n  } else {\n    var currentNetwork = StellarSdk.Network.current();\n    if (currentNetwork) return currentNetwork.networkPassphrase();\n  }\n}\n/**\n * If `url` is given, set it as the default horizon instance for `passphrase`\n * network and returns the corresponding Server object.\n * Else, retrieve the default Server object for `passphrase` network.\n */\n\n\nvar serverSaves = {};\nvar networkDefaultServer = {};\n\nfunction getServer(passphrase, url) {\n  if (url) networkDefaultServer[passphrase] = url;else url = networkDefaultServer[passphrase];\n  if (!url) throw new Error(\"No default server for requested network.\");\n  if (!serverSaves[url]) serverSaves[url] = new StellarSdk.Server(url);\n  return serverSaves[url];\n} /// Save defaults horizon nodes.\n\n\ngetServer(StellarSdk.Networks.PUBLIC, \"https://horizon.stellar.org\");\ngetServer(StellarSdk.Networks.TESTNET, \"https://horizon-testnet.stellar.org\");\n/**\n * Configure for how much time the resolved addresses are kept in cache,\n * in seconds. The default is set to 5 minutes to avoid resolving to an outdated\n * address.\n *\n * @const\n */\n\nresolve.accountCacheExpiration = 5 * 60;\n/**\n * Contains promise of previously fetched accounts.\n *\n * @private\n * @type {Object}\n */\n\nvar accountCache = {};\n/**\n * Cache `promise` resolving to `address`'s account for `accountCacheExpiration`\n * seconds.\n *\n * @private\n * @param {string} address\n * @param {Promise} promise\n */\n\nfunction cacheAccount(_x, _x2) {\n  return _cacheAccount.apply(this, arguments);\n}\n/**\n * Return a promise that resolve to `address` account object, as defined in\n * JavaScript Stellar SDK API reference. `address` can be either a Stellar public\n * key or a federated address (account*example.org).\n * Returned results are cached and re-usable.\n *\n * @param {string} address\n * @return {Promise} Resolve to `address` account object\n */\n\n\nfunction _cacheAccount() {\n  _cacheAccount = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee8(address, promise) {\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            accountCache[address] = promise;\n            _context8.next = 3;\n            return helpers.timeout(resolve.accountCacheExpiration * 1000);\n\n          case 3:\n            delete accountCache[address];\n\n          case 4:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _cacheAccount.apply(this, arguments);\n}\n\nresolve.address = function (c, address) {\n  if (accountCache[address]) return accountCache[address];\n  var promise = addressResolver(c, address);\n  cacheAccount(address, promise);\n  return promise;\n};\n/**\n * Helper for the previous resolve.address function.\n * Resolve to an account object for `address`.\n *\n * @private\n * @param {string} address\n */\n\n\nfunction addressResolver(_x3, _x4) {\n  return _addressResolver.apply(this, arguments);\n}\n/**\n * Return the AccountResponse object for `address` on `network`.\n *\n * @param {CL}\n * @param {string} address A public key or a federated address\n * @param {string} network Either 'test' or 'public'\n * @return {Object} The account response\n */\n\n\nfunction _addressResolver() {\n  _addressResolver = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee9(c, address) {\n    var account, publicKey, alias;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return StellarSdk.FederationServer.resolve(address);\n\n          case 2:\n            account = _context9.sent;\n            publicKey = account.account_id;\n\n            if (publicKey) {\n              _context9.next = 6;\n              break;\n            }\n\n            throw new Error(\"Invalid response from federation server.\");\n\n          case 6:\n            if (!account.memo_type && account.memo !== undefined) delete account.memo;\n            if (address !== publicKey) account.address = address;\n            alias = c.aliases && c.aliases[publicKey];\n            if (alias) account.alias = alias;\n            return _context9.abrupt(\"return\", account);\n\n          case 11:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _addressResolver.apply(this, arguments);\n}\n\nresolve.account =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(c, address) {\n    var network,\n        server,\n        account,\n        publicKey,\n        accountResponse,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            network = _args.length > 2 && _args[2] !== undefined ? _args[2] : c.network;\n            server = resolve.server(c, network);\n            _context.next = 4;\n            return resolve.address(c, address);\n\n          case 4:\n            account = _context.sent;\n            publicKey = account.account_id; // try {\n\n            _context.next = 8;\n            return server.loadAccount(publicKey);\n\n          case 8:\n            accountResponse = _context.sent;\n            return _context.abrupt(\"return\", accountResponse);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nresolve.accountIsEmpty =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(conf, id) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", resolve.account(conf, id).then(function () {\n              return false;\n            })[\"catch\"](function () {\n              return true;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nresolve.transaction =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(conf, txHash) {\n    var caller;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            caller = conf.server.transactions();\n            return _context3.abrupt(\"return\", caller.transaction(txHash).call());\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n/**\n * Return the signers for the account at `address` on `network`.\n *\n * @param {CL}\n * @param {string} address Either a public key or a federated address\n * @param {string} network Either 'test' or 'public'\n * @return {Object} The signers object from the account response\n */\n\n\nresolve.accountSigners =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(c, address) {\n    var account;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return resolve.account(c, address);\n\n          case 2:\n            account = _context4.sent;\n            return _context4.abrupt(\"return\", account.signers);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nresolve.signersTable =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(conf) {\n    var obj,\n        _len,\n        addresses,\n        _key,\n        index,\n        account,\n        _args5 = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            obj = {};\n\n            for (_len = _args5.length, addresses = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              addresses[_key - 1] = _args5[_key];\n            }\n\n            _context5.t0 = _regeneratorRuntime.keys(addresses);\n\n          case 3:\n            if ((_context5.t1 = _context5.t0()).done) {\n              _context5.next = 11;\n              break;\n            }\n\n            index = _context5.t1.value;\n            _context5.next = 7;\n            return resolve.account(conf, addresses[index]);\n\n          case 7:\n            account = _context5.sent;\n            if (!obj[account.id]) obj[account.id] = account.signers;\n            _context5.next = 3;\n            break;\n\n          case 11:\n            return _context5.abrupt(\"return\", obj);\n\n          case 12:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x13) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nresolve.signersList =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(conf) {\n    var array,\n        _len2,\n        addresses,\n        _key2,\n        index,\n        account,\n        _args6 = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            array = [];\n\n            for (_len2 = _args6.length, addresses = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n              addresses[_key2 - 1] = _args6[_key2];\n            }\n\n            _context6.t0 = _regeneratorRuntime.keys(addresses);\n\n          case 3:\n            if ((_context6.t1 = _context6.t0()).done) {\n              _context6.next = 11;\n              break;\n            }\n\n            index = _context6.t1.value;\n            _context6.next = 7;\n            return resolve.account(conf, addresses[index]);\n\n          case 7:\n            account = _context6.sent;\n            account.signers.forEach(function (entry) {\n              if (!array.find(function (a) {\n                return a.key === entry.key;\n              })) array.push(entry.key);\n            });\n            _context6.next = 3;\n            break;\n\n          case 11:\n            return _context6.abrupt(\"return\", array);\n\n          case 12:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x14) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nresolve.txSources = function (conf, transaction) {\n  var extra = useExtra(transaction);\n  if (extra.sources) return extra.sources;\n  var array = [transaction.source];\n\n  var _loop = function _loop(index) {\n    var source = transaction.operations[index].source;\n    if (source && !array.find(function (a) {\n      return a === source;\n    })) array.push(source);\n  };\n\n  for (var index in transaction.operations) {\n    _loop(index);\n  }\n\n  extra.sources = array;\n  return array;\n};\n\nresolve.txSignersList =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(conf, transaction) {\n    var extra;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            extra = useExtra(transaction);\n            if (!extra.signers) extra.signers = getTxSignersList(conf, transaction);\n            return _context7.abrupt(\"return\", extra.signers);\n\n          case 3:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nfunction getTxSignersList(_x17, _x18) {\n  return _getTxSignersList.apply(this, arguments);\n}\n\nfunction _getTxSignersList() {\n  _getTxSignersList = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee10(conf, transaction) {\n    var sources;\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            sources = resolve.txSources(conf, transaction);\n            return _context10.abrupt(\"return\", resolve.signersList.apply(resolve, [conf].concat(_toConsumableArray(sources))));\n\n          case 2:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _getTxSignersList.apply(this, arguments);\n}\n\nvar extraField = \"extra_ocmultisig\";\n\nfunction useExtra(obj) {\n  if (!obj[extraField]) obj[extraField] = {};\n  return obj[extraField];\n}","\"use_strict\";\n/**\n * Methods to detect in which environment we're running.\n *\n * @exports env\n */\n\nvar env = exports;\n/**\n * `true` if we are in a browser environment, `false` otherwise.\n */\n\nenv.isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n/**\n * `true` if we are in a node.js environment, `false` otherwise.\n */\n\nenv.isNode = typeof process !== \"undefined\" && process.versions && process.versions.node;\n/**\n * `true` if current page is embedded.\n */\n\nenv.isEmbedded = env.isBrowser && window.self !== window.top;\n/**\n * The window object, or `undefined`.\n */\n\nenv.window = env.isBrowser && window;\n/**\n * The global objet, or `undefined`.\n */\n\nenv.global = env.isNode && global;\n/**\n * A require that only have effect in Node.js and that is invisible for package\n * bundlers.\n */\n\nenv.nodeRequire = function () {};\n\nif (env.isNode) {\n  var stealth_require = eval(\"require\");\n\n  env.nodeRequire = function (module) {\n    return stealth_require(module);\n  };\n}","\"use_strict\";\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nif (env.isBrowser) {\n  var StellarSdk = require(\"./stellar-sdk\");\n\n  var hash = \"0000000000000000000000000000000000000000000000000000000000000000\";\n  var memo = new StellarSdk.Memo(\"hash\", hash);\n  module.exports = memo.value.__proto__.constructor;\n} else {\n  module.exports = env.nodeRequire(\"safe-buffer\").Buffer;\n}","var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\n/**\n * Publish/read arbitrary data on the blockchain\n *\n * @private\n * @exports messenger\n */\nvar messenger = exports;\n\nvar Buffer = require(\"@cosmic-plus/base/es5/buffer\");\n\nvar loopcall = require(\"@cosmic-plus/loopcall\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar resolve = require(\"./resolve\");\n/**\n * Sends a message to `destinations` with using `keypair`. The maximum size for\n * `content` is 6400 bytes minus the number of `destinations`. The cost of\n * emission is 1.01 stroop per destination + 1 stroop per 64 bytes to send. When a\n * destination account doesn't exist, it is created on-the-fly which incur an\n * additional cost of 1 lumen each\n *\n * @param {Keypair} keypair The keypair of the sender.\n * @param {string|Array} destinations An address or an array of addresses (either\n *   account IDs or federated addresses).\n * @param {string|Memo} object  (max. 28 bytes for string).\n * @param {string|Buffer} content The message content.\n * @returns {HorizonResponse}\n */\n\n\nmessenger.send =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(conf, keypair, destinations, object, content) {\n    var senderAccount, tx, server;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return resolve.account(conf, keypair.publicKey());\n\n          case 2:\n            senderAccount = _context.sent;\n            _context.next = 5;\n            return messenger.encode(conf, senderAccount, destinations, object, content);\n\n          case 5:\n            tx = _context.sent;\n            tx.sign(keypair);\n            server = resolve.network(conf);\n            return _context.abrupt(\"return\", server.submitTransaction(tx));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2, _x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Build a transaction to be signed by `senderAccount` that sends message to\n * `destinations`. The maximum size for `content` is 6400 bytes minus the number\n * of `destinations`. The cost of emission is 1.01 stroop per destination + 1\n * stroop per 64 bytes to send. When a destination account doesn't exist, it is\n * created on-the-fly which incur an additional cost of 1 lumen each.\n *\n * @param {AccountResponse} senderAccount The AccountResponse for sender\n * @param {string|Array} destination The account IDs where to send the message,\n *     or an array of account IDs.\n * @param {string|Memo} object The message object (max. 28 bytes for string).\n * @param {string|Buffer} content The message content.\n * @return {Transaction} A StellarSdk Transaction object.\n */\n\n\nmessenger.encode =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(conf, senderAccount, destinations, object, content) {\n    var txBuilder;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            txBuilder = new StellarSdk.TransactionBuilder(senderAccount, {\n              fee: 100\n            });\n            addMemo(txBuilder, object);\n            _context2.next = 4;\n            return addDestinations(conf, txBuilder, destinations);\n\n          case 4:\n            addContent(txBuilder, content);\n            return _context2.abrupt(\"return\", txBuilder.setTimeout(StellarSdk.InfiniteTimeout).build());\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x6, _x7, _x8, _x9, _x10) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction addMemo(txBuilder, memo) {\n  if (typeof memo === \"string\") {\n    var slicedMemo = Buffer.from(memo).slice(0, 28).toString();\n    memo = new StellarSdk.Memo(\"text\", slicedMemo);\n  }\n\n  if (memo) txBuilder.addMemo(memo);\n}\n\nfunction addDestinations(_x11, _x12, _x13) {\n  return _addDestinations.apply(this, arguments);\n}\n\nfunction _addDestinations() {\n  _addDestinations = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(conf, txBuilder, destinations) {\n    var index, accountId, addDestination;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (!Array.isArray(destinations)) destinations = [destinations];\n            _context7.t0 = _regeneratorRuntime.keys(destinations);\n\n          case 2:\n            if ((_context7.t1 = _context7.t0()).done) {\n              _context7.next = 11;\n              break;\n            }\n\n            index = _context7.t1.value;\n            accountId = destinations[index];\n            _context7.next = 7;\n            return linkToAccount(conf, accountId);\n\n          case 7:\n            addDestination = _context7.sent;\n            txBuilder.addOperation(addDestination);\n            _context7.next = 2;\n            break;\n\n          case 11:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _addDestinations.apply(this, arguments);\n}\n\nfunction linkToAccount(_x14, _x15) {\n  return _linkToAccount.apply(this, arguments);\n}\n\nfunction _linkToAccount() {\n  _linkToAccount = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee8(conf, accountId) {\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return resolve.accountIsEmpty(conf, accountId);\n\n          case 2:\n            if (!_context8.sent) {\n              _context8.next = 6;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", operation(\"createAccount\", {\n              destination: accountId,\n              startingBalance: \"1\"\n            }));\n\n          case 6:\n            return _context8.abrupt(\"return\", operation(\"payment\", {\n              destination: accountId,\n              asset: StellarSdk.Asset[\"native\"](),\n              amount: \"0.0000001\"\n            }));\n\n          case 7:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _linkToAccount.apply(this, arguments);\n}\n\nfunction addContent(txBuilder, content) {\n  if (!(content instanceof Buffer)) content = Buffer.from(content);\n  var operationsLeft = 100 - txBuilder.operations.length;\n\n  if (content.length > operationsLeft * 64) {\n    // eslint-disable-next-line no-console\n    console.log(\"Warning: message will be truncated.\");\n  }\n\n  for (var i = 0; i < operationsLeft; i++) {\n    var chunk = content.slice(i * 64, i * 64 + 64);\n    if (chunk.length === 0) break;\n    var storeChunk = operation(\"manageData\", {\n      name: \"Send\",\n      value: chunk\n    });\n    txBuilder.addOperation(storeChunk);\n  }\n}\n\nfunction operation(type, params) {\n  return StellarSdk.Operation[type](params);\n}\n/**\n * Parse the message object from transaction `txHash`.\n *\n * @param {String} txHash A transaction hash\n * @return {Object} A message object with `sender`, `object`, `date` and\n *     `content` fields.\n */\n\n\nmessenger.read =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(conf, txHash) {\n    var server, callBuilder, txRecord;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            server = resolve.network(conf);\n            callBuilder = server.transactions().transaction(txHash);\n            _context3.next = 4;\n            return callBuilder.call();\n\n          case 4:\n            txRecord = _context3.sent;\n            return _context3.abrupt(\"return\", messenger.decode(conf, txRecord));\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x16, _x17) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nmessenger.decode = function (conf, txRecord) {\n  var transaction = new StellarSdk.Transaction(txRecord.envelope_xdr);\n  if (transaction.operations.length < 2) return null;\n  return {\n    sender: txRecord.source_account,\n    object: extractObject(transaction.memo),\n    date: txRecord.created_at,\n    content: extractContent(transaction)\n  };\n};\n\nfunction extractObject(memo) {\n  if (memo._type === \"hash\" || memo._type === \"return\") {\n    return memo._value.toString(\"hex\");\n  } else {\n    return memo._value.toString(\"utf8\");\n  }\n}\n\nfunction extractContent(transaction) {\n  var chunks = [];\n  transaction.operations.forEach(function (operation) {\n    if (isContentChunk(operation)) chunks.push(operation.value);\n  });\n  return Buffer.concat(chunks);\n}\n\nfunction isContentChunk(operation) {\n  return operation.type === \"manageData\" && operation.name === \"Send\";\n}\n\nmessenger.list =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(conf, accountId, options) {\n    var records;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return messenger.listRaw(conf, accountId, options);\n\n          case 2:\n            records = _context4.sent;\n            return _context4.abrupt(\"return\", records.map(function (record) {\n              return messenger.decode(conf, record);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x18, _x19, _x20) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nmessenger.listRaw =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(conf, accountId) {\n    var options,\n        server,\n        callBuilder,\n        _args5 = arguments;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            options = _args5.length > 2 && _args5[2] !== undefined ? _args5[2] : {};\n            _context5.next = 3;\n            return resolve.accountIsEmpty(conf, accountId);\n\n          case 3:\n            if (!_context5.sent) {\n              _context5.next = 5;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", []);\n\n          case 5:\n            server = resolve.server(conf);\n            callBuilder = server.transactions().forAccount(accountId);\n            if (options.cursor) callBuilder.cursor(options.cursor);\n            if (options.order) callBuilder.order(options.order);\n            options.filter = makeMessageFilter(options.filter);\n            return _context5.abrupt(\"return\", loopcall(callBuilder, options));\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x21, _x22) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nfunction makeMessageFilter(baseFilter) {\n  return function (record) {\n    if (record.operation_count < 2) return false;\n    if (baseFilter) return baseFilter(record);else return true;\n  };\n}\n\nmessenger.find =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(conf, publicKey, func) {\n    var records;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return messenger.list(conf, publicKey, {\n              limit: 1,\n              filter: func\n            });\n\n          case 2:\n            records = _context6.sent;\n\n            if (!records[0]) {\n              _context6.next = 5;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", records[0]);\n\n          case 5:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x23, _x24, _x25) {\n    return _ref6.apply(this, arguments);\n  };\n}();","/**\n * Environment detection and library loading.\n */\n\n/**\n * Automatically pass library network configuration to underlying methods.\n */\n// baseConf may be modified only by multisig.useNetwork().\nvar baseConf = {};\n\nfunction prepare(module) {\n  var layer = {};\n\n  for (var name in module) {\n    if (typeof module[name] !== \"function\") continue;\n    layer[name] = passConfig(module[name]);\n  }\n\n  return Object.assign({}, module, layer);\n}\n\nfunction passConfig(func) {\n  return function () {\n    // Make a one-time configuration object and pass it to the underlying\n    // function along with user parameters.\n    var conf = Object.create(baseConf);\n\n    for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n      params[_key] = arguments[_key];\n    }\n\n    return func.apply(void 0, [conf].concat(params));\n  };\n}\n\nmodule.exports = prepare(require(\"./multisig\"));","var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\n/**\n * @exports multisig\n */\nvar multisig = exports;\n\nvar axios = require(\"@cosmic-plus/base/es5/axios\");\n\nvar Buffer = require(\"@cosmic-plus/base/es5/buffer\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar resolve = require(\"./resolve\");\n\nvar shareSignatures = require(\"./share-signatures\");\n\nvar shareTransactions = require(\"./share-transactions\");\n\nmultisig.isEnabled =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(conf, user) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return multisig.config(conf, user);\n\n          case 2:\n            conf.multisig = _context.sent;\n            return _context.abrupt(\"return\", !!conf.multisig);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmultisig.config =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(conf, user) {\n    var account;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return getAccount(conf, user);\n\n          case 2:\n            account = _context2.sent;\n            conf.multisig = parseMultisigConfig(account);\n\n            if (!conf.multisig.id) {\n              _context2.next = 8;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", conf.multisig);\n\n          case 8:\n            return _context2.abrupt(\"return\", null);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nmultisig.enable =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(conf, keypair, options) {\n    var account, transaction;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return getAccount(conf, keypair);\n\n          case 2:\n            account = _context3.sent;\n            conf.multisig = parseMultisigConfig(account);\n\n            if (!conf.multisig.id) {\n              _context3.next = 7;\n              break;\n            }\n\n            // eslint-disable-next-line no-console\n            console.log(\"On-chain signature sharing is already enabled on this account.\");\n            return _context3.abrupt(\"return\", null);\n\n          case 7:\n            transaction = makeSetupTx(conf, account, options);\n            return _context3.abrupt(\"return\", sendOrReturn(conf, transaction, keypair));\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nmultisig.setup =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(conf, keypair, options) {\n    var account, transaction;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return getAccount(conf, keypair);\n\n          case 2:\n            account = _context4.sent;\n            conf.multisig = parseMultisigConfig(account);\n\n            if (conf.multisig.id) {\n              _context4.next = 6;\n              break;\n            }\n\n            throw new Error(\"On-chain signature sharing in not enabled on this account.\");\n\n          case 6:\n            transaction = makeSetupTx(conf, account, options);\n            return _context4.abrupt(\"return\", sendOrReturn(conf, transaction, keypair));\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x8, _x9, _x10) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nmultisig.disable =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(conf, keypair) {\n    var account, transaction;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return getAccount(conf, keypair);\n\n          case 2:\n            account = _context5.sent;\n            conf.multisig = parseMultisigConfig(account);\n\n            if (conf.multisig.id) {\n              _context5.next = 7;\n              break;\n            }\n\n            // eslint-disable-next-line no-console\n            console.log(\"On-chain signature sharing is already disabled on this account.\");\n            return _context5.abrupt(\"return\", null);\n\n          case 7:\n            transaction = makeDisableTx(conf, account);\n            return _context5.abrupt(\"return\", sendOrReturn(conf, transaction, keypair));\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n/**\n *\n * @parameter {Transaction|XDR} transaction A signed transaction\n * @parameter {Keypair} [keypair]\n * @returns {Transaction|HorizonResponse}\n */\n\n\nmultisig.pushSignatures =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(conf, transaction, keypair) {\n    var account, senderId, pushTx, horizonResponse;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return resolve.account(conf, transaction.source);\n\n          case 2:\n            account = _context6.sent;\n            conf.multisig = parseMultisigConfig(account);\n\n            if (conf.multisig.id) {\n              _context6.next = 6;\n              break;\n            }\n\n            throw new Error(\"On-chain signature sharing in not enabled on this account.\");\n\n          case 6:\n            saveNetwork();\n            senderId = keypair.publicKey();\n            _context6.next = 10;\n            return checkAccountExist(conf.multisig, senderId);\n\n          case 10:\n            _context6.next = 12;\n            return shareSignatures.makePushTx(conf, transaction, senderId);\n\n          case 12:\n            pushTx = _context6.sent;\n            horizonResponse = sendOrReturn(conf.multisig, pushTx, keypair);\n            horizonResponse[\"finally\"](restoreNetwork);\n            return _context6.abrupt(\"return\", horizonResponse);\n\n          case 16:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x13, _x14, _x15) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nmultisig.pullSignatures =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(conf, transaction) {\n    var account, bool;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return getAccount(conf, transaction.source);\n\n          case 2:\n            account = _context7.sent;\n            conf.multisig = parseMultisigConfig(account);\n\n            if (conf.multisig.id) {\n              _context7.next = 6;\n              break;\n            }\n\n            throw new Error(\"On-chain signature sharing in not enabled on this account.\");\n\n          case 6:\n            saveNetwork();\n            _context7.next = 9;\n            return shareSignatures.pull(conf, transaction);\n\n          case 9:\n            bool = _context7.sent;\n            restoreNetwork();\n            return _context7.abrupt(\"return\", bool);\n\n          case 12:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x16, _x17) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nmultisig.pushTransaction =\n/*#__PURE__*/\nfunction () {\n  var _ref8 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee8(conf, transaction, keypair) {\n    var account, senderId, legitSources, pushTx, horizonResponse;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return getAccount(conf, keypair);\n\n          case 2:\n            account = _context8.sent;\n            conf.multisig = parseMultisigConfig(account);\n\n            if (conf.multisig.id) {\n              _context8.next = 6;\n              break;\n            }\n\n            throw new Error(\"On-chain transaction sharing is not enabled on this account.\");\n\n          case 6:\n            senderId = keypair.publicKey();\n            legitSources = account.signers.map(function (signer) {\n              return signer.key;\n            });\n\n            if (legitSources.find(function (source) {\n              return source === senderId;\n            })) {\n              _context8.next = 10;\n              break;\n            }\n\n            throw new Error(\"Not a co-signer for transaction source account: \" + senderId);\n\n          case 10:\n            saveNetwork();\n            _context8.next = 13;\n            return checkAccountExist(conf.multisig, senderId);\n\n          case 13:\n            /// Shadow transaction signatures without modifying the underlying object.\n            transaction = Object.create(transaction);\n            transaction.signatures = [];\n            _context8.next = 17;\n            return shareTransactions.makePushTx(conf, transaction, senderId);\n\n          case 17:\n            pushTx = _context8.sent;\n            horizonResponse = sendOrReturn(conf.multisig, pushTx, keypair);\n            horizonResponse[\"finally\"](restoreNetwork);\n            return _context8.abrupt(\"return\", horizonResponse);\n\n          case 21:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function (_x18, _x19, _x20) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nmultisig.listTransactions =\n/*#__PURE__*/\nfunction () {\n  var _ref9 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee9(conf, user, ledger) {\n    var account;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return getAccount(conf, user);\n\n          case 2:\n            account = _context9.sent;\n            conf.multisig = parseMultisigConfig(account);\n\n            if (conf.multisig.id) {\n              _context9.next = 6;\n              break;\n            }\n\n            throw new Error(\"On-chain transaction sharing is not enabled on this account.\");\n\n          case 6:\n            return _context9.abrupt(\"return\", shareTransactions.list(conf, account, ledger));\n\n          case 7:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function (_x21, _x22, _x23) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n\nmultisig.useNetwork = function (conf, network, server) {\n  return resolve.network(conf.__proto__, network, server);\n};\n/** ***************************** Routines *************************************/\n\n/**\n * Returns the transaction that enable signature sharing for `account`.\n */\n\n\nfunction makeSetupTx(conf, account) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var multisigId = options.id || conf.multisig.id || StellarSdk.Keypair.random().publicKey();\n  var txBuilder = new StellarSdk.TransactionBuilder(account, {\n    fee: 100\n  });\n  txBuilder.addMemo(new StellarSdk.Memo(\"text\", \"Setup signature sharing\"));\n  var isEmpty = true;\n\n  var setData = function setData(name, value) {\n    txBuilder.addOperation(StellarSdk.Operation.manageData({\n      name: name,\n      value: value\n    }));\n    isEmpty = false;\n  };\n\n  if (multisigId !== conf.multisig.id) setData(\"config:multisig\", multisigId);\n  if (!options.network) options.network = \"test\";\n\n  if ((options.network || conf.multisig.network) && options.network !== conf.multisig.network) {\n    setData(\"config:multisig:network\", options.network);\n  }\n\n  if ((options.server || conf.multisig.server) && options.server !== conf.multisig.server) {\n    setData(\"config:multisig:server\", options.server);\n  }\n\n  if (isEmpty) return null;else return txBuilder.setTimeout(StellarSdk.InfiniteTimeout).build();\n}\n/**\n * Returns the transaction that disable signature sharing for `account`.\n */\n\n\nfunction makeDisableTx(conf, account) {\n  var txBuilder = new StellarSdk.TransactionBuilder(account, {\n    fee: 100\n  });\n  txBuilder.addMemo(new StellarSdk.Memo(\"text\", \"Disable signature sharing\"));\n\n  var setData = function setData(name, value) {\n    txBuilder.addOperation(StellarSdk.Operation.manageData({\n      name: name,\n      value: value\n    }));\n  };\n\n  setData(\"config:multisig\", null);\n\n  if (account.data_attr[\"multisig:network\"]) {\n    setData(\"config:multisig:network\", null);\n  }\n\n  if (account.data_attr[\"multisig:server\"]) {\n    setData(\"config:multisig:server\", null);\n  }\n\n  return txBuilder.setTimeout(StellarSdk.InfiniteTimeout).build();\n}\n/** ************************ Generic helpers ***********************************/\n\n/**\n * Returns the multisig configuration.\n */\n\n\nfunction parseMultisigConfig(account) {\n  return {\n    id: readAttr(account.data_attr[\"config:multisig\"]),\n    network: readAttr(account.data_attr[\"config:multisig:network\"]) || \"test\",\n    server: readAttr(account.data_attr[\"config:multisig:server\"])\n  };\n}\n\nfunction readAttr(str64) {\n  if (str64) return Buffer.from(str64, \"base64\").toString(\"utf8\");\n}\n/**\n * If `user` is already an AccountResponse, return it. Else resolve it.\n */\n\n\nfunction getAccount(_x24, _x25) {\n  return _getAccount.apply(this, arguments);\n}\n\nfunction _getAccount() {\n  _getAccount = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee10(conf, user) {\n    var account;\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            if (!isAccountResponse(user)) {\n              _context10.next = 4;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", user);\n\n          case 4:\n            if (!(user instanceof StellarSdk.Keypair)) {\n              _context10.next = 8;\n              break;\n            }\n\n            user = user.publicKey();\n            _context10.next = 14;\n            break;\n\n          case 8:\n            if (!(user instanceof StellarSdk.Account)) {\n              _context10.next = 12;\n              break;\n            }\n\n            user = user._accountId;\n            _context10.next = 14;\n            break;\n\n          case 12:\n            if (!(typeof user !== \"string\")) {\n              _context10.next = 14;\n              break;\n            }\n\n            throw new TypeError(\"Invalid user parameter.\");\n\n          case 14:\n            _context10.next = 16;\n            return resolve.account(conf, user);\n\n          case 16:\n            account = _context10.sent;\n            return _context10.abrupt(\"return\", account);\n\n          case 18:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _getAccount.apply(this, arguments);\n}\n\nfunction isAccountResponse(obj) {\n  return obj && obj._baseAccount && obj._baseAccount instanceof StellarSdk.Account;\n}\n/**\n * Create `accoundId` if it is empty & on test network.\n */\n\n\nfunction checkAccountExist(_x26, _x27) {\n  return _checkAccountExist.apply(this, arguments);\n}\n/**\n * If `value` is a transaction, sign it with `keypair` and send it to horizon.\n * Else, return `value`.\n */\n\n\nfunction _checkAccountExist() {\n  _checkAccountExist = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee11(conf, accountId) {\n    return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return resolve.accountIsEmpty(conf, accountId);\n\n          case 2:\n            if (!_context11.sent) {\n              _context11.next = 8;\n              break;\n            }\n\n            if (!(conf.network === \"test\")) {\n              _context11.next = 7;\n              break;\n            }\n\n            return _context11.abrupt(\"return\", axios(\"https://friendbot.stellar.org/?addr=\" + accountId));\n\n          case 7:\n            throw new Error(\"Account doesn't exist on the requested network: \" + conf.network);\n\n          case 8:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _checkAccountExist.apply(this, arguments);\n}\n\nfunction sendOrReturn(_x28, _x29, _x30) {\n  return _sendOrReturn.apply(this, arguments);\n}\n/**\n * Save/Restore Network\n */\n\n\nfunction _sendOrReturn() {\n  _sendOrReturn = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee12(conf, value, keypair) {\n    var server, responsePromise;\n    return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            if (!(value instanceof StellarSdk.Transaction)) {\n              _context12.next = 8;\n              break;\n            }\n\n            server = resolve.network(conf);\n            value.sign(keypair);\n            responsePromise = server.submitTransaction(value);\n            responsePromise[\"catch\"](function (error) {\n              return console.error(error.response);\n            });\n            return _context12.abrupt(\"return\", responsePromise);\n\n          case 8:\n            return _context12.abrupt(\"return\", value);\n\n          case 9:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n  return _sendOrReturn.apply(this, arguments);\n}\n\nvar networkBackup;\n\nfunction saveNetwork() {\n  networkBackup = StellarSdk.Network.current();\n}\n\nfunction restoreNetwork() {\n  if (StellarSdk.Network.current() !== networkBackup) {\n    // eslint-disable-next-line no-console\n    console.log(\"Restore network\");\n    StellarSdk.Network.use(networkBackup);\n  }\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","\"use_stict\";\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nif (env.isBrowser) {\n  module.exports = require(\"./stellar-sdk\").axios;\n} else {\n  module.exports = env.nodeRequire(\"axios\");\n}","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","\"use strict\";\n/**\n * Various independent helpers.\n *\n * @exports misc\n */\n\nvar misc = exports;\n/**\n * Return a function that will execute `thunk` when called, and return the\n * result of its execution as a Promise. Handle async and regular functions\n * equally. Any error will be carried to .catch.\n *\n * @param {function} thunk A parameterless function\n * @return {function}\n */\n\nmisc.delay = function (thunk) {\n  var firstCall = true;\n  var memoized;\n  return function () {\n    if (firstCall) {\n      firstCall = false;\n      memoized = new Promise(function (resolve) {\n        return resolve(thunk());\n      });\n    }\n\n    return memoized;\n  };\n};\n/**\n * Return a promise that takes `x` seconds to resolve\n *\n * @param {number} x Time to wait\n * @return {Promise}\n */\n\n\nmisc.timeout = function (x) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, x);\n  });\n};\n/**\n * Return `string` with first letter capitalized.\n *\n * @param {string} string\n * @return {string}\n */\n\n\nmisc.capitalize = function (string) {\n  return string.substr(0, 1).toUpperCase() + string.slice(1);\n};\n/**\n * Return shortified `string` if longer than 30 characters; else return\n * `string`.\n *\n * @param {string}\n * @return {string}\n */\n\n\nmisc.shorter = function (string) {\n  if (string.length > 50) {\n    return string.substr(0, 5) + \"...\" + string.substr(-5);\n  } else {\n    return string;\n  }\n};\n/**\n * Set `object` property `name` as hidden, and set it to `value`.\n */\n\n\nmisc.setHiddenProperty = function (object, name, value) {\n  Object.defineProperty(object, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n};\n/**\n * Log an error stating that `before` is deprecated.\n *\n * @param {string} date YYYY-MM or YYYY-MM-DD\n * @param {string} before Old function/property\n * @param {string} after New function/property\n */\n\n\nmisc.deprecated = function (date, before, after) {\n  console.error(\"Warning: \".concat(before, \" is deprecated and will be removed after \").concat(date, \". Please use \").concat(after, \" instead.\"));\n};\n/**\n * Creates and returns an extra field (`extra_ticot`) for **obj**. This allow to\n * append additional information to objects without mess.\n *\n * @param {Object}\n * @return {Object} The extra field object.\n */\n\n\nmisc.useExtra = function (obj) {\n  if (!obj[extraField]) misc.setHiddenProperty(obj, extraField, {});\n  return obj[extraField];\n};\n\nvar extraField = \"@cosmic-plus\";\n/**\n * Test if **string** is made of printable UTF8 characters. This is a simplified\n * test that is not robust.\n *\n * @param {String}\n * @return {Boolean}\n */\n\nmisc.isUtf8 = function (string) {\n  // eslint-disable-next-line no-control-regex\n  return !string.match(/[\\0-\\x1F\\x7F-\\x9F\\xAD\\uD7FC-\\uF8FF]/);\n};\n/**\n * Test if **string** is a base64 string.\n *\n * @param  {String} string\n * @return {Boolean}\n */\n\n\nmisc.isBase64 = function (string) {\n  return !!string.match(/^[0-9a-zA-Z+/]*=*$/);\n};\n/**\n * Return the YYYY-MM-DD date for **time** or for today.\n *\n * @param {String|Number} [time] A valid date/timestamp value\n * @return {String} YYYY-MM-DD date\n */\n\n\nmisc.day = function (time) {\n  var date = time ? new Date(time) : new Date();\n  return date.toISOString().replace(/T.*/, \"\");\n};\n/**\n * Deprecated functions\n */\n\n\nmisc.copy = function () {\n  return console.error(\"misc.copy() have been moved to html.copyString()\");\n};","\"use_strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar shareSignatures = exports;\n\nvar Buffer = require(\"@cosmic-plus/base/es5/buffer\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar messenger = require(\"./messenger\");\n\nvar resolve = require(\"./resolve\");\n/**\n * Returns a sharing transaction that will push any new signature from\n * `transaction`. The sharing transactions should be signed by `accountId` and\n * sent to `conf.multisig.network`.\n */\n\n\nshareSignatures.makePushTx =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(conf, transaction, senderId) {\n    var signatures, txHash, signers, alreadyOnchain, newSignatures, sender, destination, object, message;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            signatures = transaction.signatures.map(function (entry) {\n              return entry.signature();\n            });\n\n            if (transaction.signatures.length) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", null);\n\n          case 3:\n            /// Push only signatures that have not been uploaded yet.\n            txHash = transaction.hash();\n            _context.next = 6;\n            return resolve.txSignersList(conf, transaction);\n\n          case 6:\n            signers = _context.sent;\n            _context.next = 9;\n            return getSignatures(conf, txHash, signers);\n\n          case 9:\n            alreadyOnchain = _context.sent;\n            newSignatures = onlyInFirstArray(signatures, alreadyOnchain);\n\n            if (newSignatures.length) {\n              _context.next = 13;\n              break;\n            }\n\n            return _context.abrupt(\"return\", null);\n\n          case 13:\n            _context.next = 15;\n            return resolve.account(conf.multisig, senderId);\n\n          case 15:\n            sender = _context.sent;\n            destination = conf.multisig.id;\n            object = new StellarSdk.Memo(\"return\", txHash);\n            message = Buffer.concat(signatures);\n            return _context.abrupt(\"return\", messenger.encode(conf.multisig, sender, destination, object, message));\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction onlyInFirstArray(array1, array2) {\n  return array1.filter(function (x) {\n    return !array2.find(function (y) {\n      return x.toString() === y.toString();\n    });\n  });\n}\n/**\n * Pull signatures for `transaction` published on `conf.multisig.network`.\n */\n\n\nshareSignatures.pull =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(conf, transaction) {\n    var txHash, signers, signatures;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            txHash = transaction.hash();\n            _context2.next = 3;\n            return resolve.txSignersList(conf, transaction);\n\n          case 3:\n            signers = _context2.sent;\n            _context2.next = 6;\n            return getSignatures(conf, txHash, signers);\n\n          case 6:\n            signatures = _context2.sent;\n            return _context2.abrupt(\"return\", mergeSignatures(transaction, signatures, txHash, signers));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n * Returns an array of the signatures shared on-chain for `txHash`.\n */\n\n\nfunction getSignatures(_x6, _x7, _x8) {\n  return _getSignatures.apply(this, arguments);\n}\n\nfunction _getSignatures() {\n  _getSignatures = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(conf, txHash, signers) {\n    var txHash64, records, signatures, index, txRecord, transaction;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            txHash64 = txHash.toString(\"base64\");\n            _context3.next = 3;\n            return resolve.accountIsEmpty(conf.multisig, conf.multisig.id);\n\n          case 3:\n            if (!_context3.sent) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", []);\n\n          case 5:\n            _context3.next = 7;\n            return messenger.listRaw(conf.multisig, conf.multisig.id, {\n              filter: function filter(tx) {\n                return tx.memo_type === \"return\" && tx.memo === txHash64;\n              }\n            });\n\n          case 7:\n            records = _context3.sent;\n            signatures = [];\n            _context3.t0 = _regeneratorRuntime.keys(records);\n\n          case 10:\n            if ((_context3.t1 = _context3.t0()).done) {\n              _context3.next = 19;\n              break;\n            }\n\n            index = _context3.t1.value;\n            txRecord = records[index];\n            transaction = new StellarSdk.Transaction(txRecord.envelope_xdr);\n\n            if (isTxSourceLegit(transaction, signers)) {\n              _context3.next = 16;\n              break;\n            }\n\n            return _context3.abrupt(\"continue\", 10);\n\n          case 16:\n            transaction.operations.forEach(function (operation) {\n              if (containsSignature(operation)) signatures.push(operation.value);\n            });\n            _context3.next = 10;\n            break;\n\n          case 19:\n            return _context3.abrupt(\"return\", signatures);\n\n          case 20:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getSignatures.apply(this, arguments);\n}\n\nfunction isTxSourceLegit(transaction, signers) {\n  return signers.find(function (signer) {\n    return signer === transaction.source;\n  });\n}\n\nfunction containsSignature(operation) {\n  return operation.type === \"manageData\" && operation.name === \"Send\";\n}\n/**\n * Test `signatures` against `signers` and add new legit ones to `transaction`.\n */\n\n\nfunction mergeSignatures(transaction, signatures, txHash, signers) {\n  var newSignatures = false;\n  var txSigs = transaction.signatures.map(function (x) {\n    return x.signature().toString();\n  });\n  var keys = signers.map(function (x) {\n    return StellarSdk.Keypair.fromPublicKey(x);\n  });\n\n  var _loop = function _loop(index) {\n    var signature = signatures[index];\n    if (txSigs.find(function (x) {\n      return x === signature.toString();\n    })) return \"continue\";\n    var signer = keys.find(function (x) {\n      return x.verify(txHash, signature);\n    });\n    if (!signer) return \"continue\";\n    var decoratedSignature = makeDecorated(signer, signature);\n    transaction.signatures.push(decoratedSignature);\n    txSigs.push(signature.toString());\n    newSignatures = true;\n  };\n\n  for (var index in signatures) {\n    var _ret = _loop(index);\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return newSignatures;\n}\n\nfunction makeDecorated(signer, signature) {\n  var Constructor = StellarSdk.xdr.DecoratedSignature;\n  return new Constructor({\n    hint: signer.signatureHint(),\n    signature: signature\n  });\n}","\"use_strict\";\n/**\n * Concatenate records from `callBuilder` call response that pass `options.filter`\n * until `options.limit` is reached, `options.breaker` returns a true value or\n * no more are available.\n *\n * **Warning**: Please be aware that unlimited loopcall can iterate over the\n * full set of data available on a network, sending thousands of request to the\n * API. Please use it wisely :)\n *\n * @example\n * const callBuilder = server.transactions().forAccount('GDE...YBX')\n * const allTransactions = await loopcall(callBuilder)\n * const transactionsWithoutMemo = await loopcall(callBuilder, {\n *   filter: (tx) => !tx.memo\n * })\n * const thisYearTransactions = await loopcall(callBuilder, {\n *   breaker: (tx) => tx.created_at.substr(0,4) < 2018\n * })\n *\n * @example\n * const callBuilder = server.operations().order('asc')\n * const the2000firstOperations = await loopcall(callBuilder, { limit: 2000 })\n * const the20firstAccountCreations = await loopcall(callBuilder, {\n *   limit: 20,\n *   filter: (op) => op.type === 'create_account'\n * })\n *\n * @param {CallBuilder} callBuilder A CallBuilder object\n * @param {Object} [options]\n * @param {integer} [options.limit] The maximum number of record to return\n * @param {function} [options.filter] A function that accept a record argument. It\n *   is called with each fetched record. If it returns a true value, the record\n *   is added to returned records, else it is discarded.\n * @param {function} [options.breaker] A function that accept a record argument.\n *   It is called with each fetched record. If it returns a true value, the loop\n *   ends and the array of the filtered records is returned.\n * @returns {Array} The fetched records\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(callBuilder) {\n    var options,\n        callerLimit,\n        callAnswer,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            callerLimit = options.limit ? Math.min(options.limit, 200) : 200;\n            _context.next = 4;\n            return callBuilder.limit(callerLimit).call();\n\n          case 4:\n            callAnswer = _context.sent;\n\n            if (!(options.filter || options.breaker)) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", loopWithBreakpoints(callAnswer, options));\n\n          case 9:\n            return _context.abrupt(\"return\", loop(callAnswer, options.limit));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Concatenate records from `callAnswer` pages until `limit` is reached or no\n * more are available.\n *\n * @param {Object} callAnswer A resolved CallBuilder.call() object\n * @param {integer} limit The maximum number of record to return\n * @returns {Array} The fetched records\n */\n\n\nfunction loop(_x2, _x3) {\n  return _loop.apply(this, arguments);\n}\n/**\n * Concatenate records from `callAnswer` pages that pass `options.filter` until\n * `options.limit` is reached, `options.breaker` returns a true value or no more\n * are available.\n *\n * @param {Object} callAnswer A resolved CallBuilder.call() object\n * @param {Object} [options]\n * @param {integer} [options.limit] The maximum number of record to return\n * @param {function} [options.filter] A function that accept a record argument. It\n *   is called with each fetched record. If it returns a true value, the record\n *   is added to returned records, else it is discarded.\n * @param {function} [options.breaker] A function that accept a record argument.\n *   It is called with each fetched record. If it returns a true value, the loop\n *   ends and the array of the filtered records is returned.\n * @returns {Array} The fetched records\n */\n\n\nfunction _loop() {\n  _loop = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(callAnswer, limit) {\n    var records, length, splitAt, tailRecords;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            records = [];\n\n          case 1:\n            if (!callAnswer.records.length) {\n              _context2.next = 18;\n              break;\n            }\n\n            if (!limit) {\n              _context2.next = 12;\n              break;\n            }\n\n            length = records.length + callAnswer.records.length;\n\n            if (!(limit === length)) {\n              _context2.next = 8;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", records.concat(callAnswer.records));\n\n          case 8:\n            if (!(length > limit)) {\n              _context2.next = 12;\n              break;\n            }\n\n            splitAt = limit - records.length;\n            tailRecords = callAnswer.records.slice(0, splitAt);\n            return _context2.abrupt(\"return\", records.concat(tailRecords));\n\n          case 12:\n            records = records.concat(callAnswer.records);\n            _context2.next = 15;\n            return callAnswer.next();\n\n          case 15:\n            callAnswer = _context2.sent;\n            _context2.next = 1;\n            break;\n\n          case 18:\n            return _context2.abrupt(\"return\", records);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _loop.apply(this, arguments);\n}\n\nfunction loopWithBreakpoints(_x4, _x5) {\n  return _loopWithBreakpoints.apply(this, arguments);\n}\n\nfunction _loopWithBreakpoints() {\n  _loopWithBreakpoints = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(callAnswer, options) {\n    var records, index, nextRecord, recordTriggerBreak, recordPassTest;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            records = [];\n\n          case 1:\n            if (!callAnswer.records.length) {\n              _context3.next = 28;\n              break;\n            }\n\n            _context3.t0 = _regeneratorRuntime.keys(callAnswer.records);\n\n          case 3:\n            if ((_context3.t1 = _context3.t0()).done) {\n              _context3.next = 23;\n              break;\n            }\n\n            index = _context3.t1.value;\n\n            if (!(options.limit && records.length === options.limit)) {\n              _context3.next = 7;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", records);\n\n          case 7:\n            nextRecord = callAnswer.records[index];\n\n            if (!options.breaker) {\n              _context3.next = 14;\n              break;\n            }\n\n            _context3.next = 11;\n            return options.breaker(nextRecord);\n\n          case 11:\n            recordTriggerBreak = _context3.sent;\n\n            if (!recordTriggerBreak) {\n              _context3.next = 14;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", records);\n\n          case 14:\n            if (!options.filter) {\n              _context3.next = 20;\n              break;\n            }\n\n            _context3.next = 17;\n            return options.filter(nextRecord);\n\n          case 17:\n            recordPassTest = _context3.sent;\n\n            if (recordPassTest) {\n              _context3.next = 20;\n              break;\n            }\n\n            return _context3.abrupt(\"continue\", 3);\n\n          case 20:\n            records.push(nextRecord);\n            _context3.next = 3;\n            break;\n\n          case 23:\n            _context3.next = 25;\n            return callAnswer.next();\n\n          case 25:\n            callAnswer = _context3.sent;\n            _context3.next = 1;\n            break;\n\n          case 28:\n            return _context3.abrupt(\"return\", records);\n\n          case 29:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _loopWithBreakpoints.apply(this, arguments);\n}","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","\"use_strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar shareTransactions = exports;\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar messenger = require(\"./messenger\");\n\nvar resolve = require(\"./resolve\");\n\nshareTransactions.list =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(conf, account) {\n    var lastLedger,\n        options,\n        legitSources,\n        txRecords,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            lastLedger = _args.length > 2 && _args[2] !== undefined ? _args[2] : 0;\n            if (typeof lastLedger !== \"number\") lastLedger = +lastLedger;\n            options = {};\n            legitSources = listSignersKeys(account);\n\n            options.filter = function (record) {\n              return isLegitSharedTransaction(record, legitSources);\n            };\n\n            if (lastLedger) options.breaker = function (record) {\n              return record.ledger_attr <= lastLedger;\n            };\n            _context.next = 8;\n            return messenger.listRaw(conf.multisig, conf.multisig.id, options);\n\n          case 8:\n            txRecords = _context.sent;\n            return _context.abrupt(\"return\", txRecords.map(decodeTransactionRequest));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction isLegitSharedTransaction(record, legitSources) {\n  if (record.memo_type !== \"hash\") return false;\n  return legitSources.find(function (accountId) {\n    return accountId === record.source_account;\n  });\n}\n\nfunction decodeTransactionRequest(record) {\n  var message = messenger.decode(null, record);\n  message.ledger = record.ledger_attr;\n  message.xdr = message.content.toString(\"base64\");\n  delete message.content;\n  delete message.object;\n  return message;\n}\n\nshareTransactions.makePushTx =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(conf, transaction, senderId) {\n    var txHash, sender, destination, object, content;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            txHash = transaction.hash();\n            _context2.next = 3;\n            return transactionHasBeenPushed(conf, txHash);\n\n          case 3:\n            if (!_context2.sent) {\n              _context2.next = 6;\n              break;\n            }\n\n            // eslint-disable-next-line no-console\n            console.log(\"Transaction have already been pushed\");\n            return _context2.abrupt(\"return\", null);\n\n          case 6:\n            _context2.next = 8;\n            return resolve.account(conf.multisig, senderId);\n\n          case 8:\n            sender = _context2.sent;\n            destination = conf.multisig.id;\n            object = new StellarSdk.Memo(\"hash\", txHash);\n            content = transaction.toEnvelope().toXDR();\n            return _context2.abrupt(\"return\", messenger.encode(conf.multisig, sender, destination, object, content));\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction transactionHasBeenPushed(_x6, _x7) {\n  return _transactionHasBeenPushed.apply(this, arguments);\n}\n\nfunction _transactionHasBeenPushed() {\n  _transactionHasBeenPushed = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(conf, txHash) {\n    var txHash64, tester, record;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            txHash64 = txHash.toString(\"base64\");\n\n            tester = function tester(record) {\n              return recordHasMemo(record, \"hash\", txHash64);\n            };\n\n            _context3.next = 4;\n            return messenger.find(conf.multisig, conf.multisig.id, tester);\n\n          case 4:\n            record = _context3.sent;\n            return _context3.abrupt(\"return\", !!record);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _transactionHasBeenPushed.apply(this, arguments);\n}\n\nfunction recordHasMemo(record, type, value) {\n  return record.memo_type === type && record.memo === value;\n}\n\nfunction listSignersKeys(account) {\n  return account.signers.map(function (signer) {\n    return signer.key;\n  });\n}"],"sourceRoot":""}